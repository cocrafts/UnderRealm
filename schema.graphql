type CardBoardTarget {
  id: String
  index: Int
  owner: String
  place: String
}

type CardCommandTarget {
  from: CardBoardTarget
  to: CardBoardTarget
}

type CardDuel {
  config: CardDuelConfig
  history: [CardDuelCommandBundle]
  id: String
}

type CardDuelAttributes {
  attack: Int
  charge: Int
  defense: Int
  gameOver: Boolean
  health: Int
  perTurnHero: Int
  perTurnTroop: Int
  turn: Int
}

type CardDuelCommand {
  owner: String
  payload: CardDuelAttributes
  target: CardCommandTarget
  type: String!
}

type CardDuelCommandBundle {
  commands: [CardDuelCommand]
  group: String
  phase: String
  phaseOf: String
  turn: Int
}

type CardDuelConfig {
  firstMover: String!
  firstPlayer: CardPlayerConfig!
  secondPlayer: CardPlayerConfig!
  setting: CardDuelSetting!
  version: String!
}

type CardDuelHistory {
  duel: CardDuel!
  enemy: Profile
  id: String
  timestamp: String!
  victory: Boolean
}

type CardDuelSetting {
  groundSize: Int
  handSize: Int
  maxAttachment: Int
  perTurnHero: Int
  perTurnTroop: Int
  playerHealth: Int
}

type CardPlayerConfig {
  deck: [String]
  id: String
}

type GameInvitation {
  enemy: Profile!
  game: String!
  id: String!
  owner: Profile!
  timestamp: String!
}

input InviteGameInput {
  game: MetacraftGames!
  opponent: String!
}

enum MetacraftGames {
  MURG
}

type Mutation {
  acceptGame(invitationId: String!): Boolean
  createQuest(description: String!, points: Int!, title: String!, type: String!, url: String): Quest
  createQuestAction(claimedPoints: Int!, questId: ID!): QuestAction
  deleteQuest(id: ID!): Boolean
  inviteGame(input: InviteGameInput!): GameInvitation
  makeReferral(referralCode: String!): Boolean
  stopMatchFind: Boolean
  updateQuest(id: ID!, status: String!): Quest
}

type Profile {
  address: String!
  avatarUrl: String
  email: String
  githubId: String
  githubUrl: String
  id: String!
  isOnline: Boolean
  jwt: String
  linkedId: String
  mineral: Float!
  name: String
  referralCode: String!
}

type Query {
  activeQuests: [Quest]
  cardDuel(id: String!): CardDuel
  cardDuelHistory(limit: Int): [CardDuelHistory]
  cardDuelPlaying: CardDuelHistory
  disableQuests: [Quest]
  gameInvitations: [GameInvitation]
  gameJwt(duelId: String): String
  greeting: String
  initQuests: [Quest]
  profile(address: String): Profile
  quest(id: ID!): Quest
  questActions: [QuestAction]
  referralHistory: ReferralHistory
}

type Quest {
  description: String!
  id: ID!
  points: Int!
  status: String!
  title: String!
  type: String!
  url: String!
}

type QuestAction {
  claimedPoints: Int!
  id: ID!
  questId: ID!
  userId: String!
}

type RefereeUser {
  address: String
  email: String
  name: String
}

type ReferralHistory {
  count: Int!
  detail: [ReferralHistoryDetail]
  points: Int!
}

type ReferralHistoryDetail {
  claimedPoints: Int!
  createdAt: String!
  id: ID!
  refereeId: String!
  refereeUser: RefereeUser
}

type Subscription {
  gameInvitation(opponent: String!): GameInvitation
  matchFind(game: MetacraftGames!, userId: String): CardDuel
  matchFound(game: MetacraftGames!, userId: String): CardDuel
}