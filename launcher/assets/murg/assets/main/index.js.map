{"version":3,"sources":["../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/animation.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/attribute.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/BoardManager.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/card.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/Components/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/Components/Card3D.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/CardManager.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/command.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/common.ts","../file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/replay/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/replay/draw.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/DuelManager.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/DuelRibbonController.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/textMeshPro/scripts/file:/Users/thomasle/metacraft/underrealm/game/assets/textMeshPro/scripts/Example1.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/fight.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/replay/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/replay/fight.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/replay/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/replay/generic.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/generic.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/network/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/network/handlers.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/helper.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/textMeshPro/scripts/utils/file:/Users/thomasle/metacraft/underrealm/game/assets/textMeshPro/scripts/utils/HtmlParser.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/hud.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/network/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/network/index.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/replay/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/replay/index.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/index.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/layout.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/LoadingManager.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/preview.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/PreviewManager.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/replay/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/replay/reinforce.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/replay/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/replay/replicateState.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/resources.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/network/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/network/sender.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/replay/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/replay/summon.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/tween/summon.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/system.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/textMeshPro/scripts/file:/Users/thomasle/metacraft/underrealm/game/assets/textMeshPro/scripts/TextMeshPro.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/textMeshPro/scripts/utils/file:/Users/thomasle/metacraft/underrealm/game/assets/textMeshPro/scripts/utils/TmpAssembler.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/textMeshPro/scripts/utils/file:/Users/thomasle/metacraft/underrealm/game/assets/textMeshPro/scripts/utils/TmpFontConfig.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/textMeshPro/scripts/file:/Users/thomasle/metacraft/underrealm/game/assets/textMeshPro/scripts/TmpRichText.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/textMeshPro/scripts/utils/file:/Users/thomasle/metacraft/underrealm/game/assets/textMeshPro/scripts/utils/TmpUtils.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/TurnController.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/util/types.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/UnitManager.ts","../file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/network/file:/Users/thomasle/metacraft/underrealm/game/assets/scripts/network/util.ts"],"names":["node","name","duration","animation","getComponent","getState","play","_RF","pop","getCard","Engine","getCardState","getFacingIdentifier","getEnemyId","selectPlayer","selectGround","getComputedAttribute","updateUnit","system","duel","firstGround","forEach","secondGround","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cardId","_node$getChildByPath","_facingNode$getChildB","card","origin","state","current","future","facingIdentifier","healthNode","healthLabel","defenseNode","defenseLabel","attackNode","attackLabel","chargeLabel","deathPredictNode","healthPredictNode","healthPredictLabel","defensePredictNode","defensePredictLabel","attackPredictNode","attackPredictLabel","facingNode","nodeHided","facingHided","healthDiff","defenseDiff","attackDiff","wrap","_context","prev","next","cardRefs","abrupt","cardMap","attribute","stateMap","predict","owner","id","getChildByPath","Label","string","String","health","color","getPositiveColor","defense","attack","undefined","charge","active","stop","_x","apply","arguments","updatePlayer","_ref2","_callee2","promises","_context2","firstPlayer","secondPlayer","Promise","all","_ref3","_callee3","player","enemyId","ground","enemyGround","isMe","predictNode","predictLabel","i","_enemyNode$getChildBy","isPlayerAttack","enemyNode","_context3","playerIds","me","globalNodes","playerHealth","enemyHealth","playerHealthPredict","enemyHealthPredict","length","_x2","CardType","DuelPhases","DuelPlace","selectHand","selectStateKey","ccclass","_decorator","peekHealthGap","_dec","_class","_Component","BoardManager","_this","_len","args","Array","_key","call","concat","unSubscribers","playerDeckCount","enemyDeckCount","props","_inheritsLoose","_proto","prototype","start","fog","this","cardTemplate","unitTemplate","unitPreview","playerDeck","enemyDeck","centerExpo","leftExpo","rightExpo","playerHand","enemyHand","playerGround","playerHandGuide","playerGroundGuide","enemyHandGuide","enemyGroundGuide","summonZoneGuide","board","on","onStateReady","bind","context","sendConnect","onDestroy","unSub","push","subscribe","Player","onPlayerUpdate","Deck","onPlayerDeckUpdate","enemy","onEnemyDeckUpdate","Hand","onPlayerHandUpdate","onEnemyHandUpdate","onPhaseUpdate","old","_this2","perTurnHero","setTimeout","updateInteractions","switchBackgroundSound","deck","hand","reArrangeHand","_this3","isMyPhase","phaseOf","isSetupPhase","phase","Setup","isCommandAble","isHeroAvailable","myHand","isHeroCard","kind","Hero","isTroopCard","Troop","animateGlowOn","animateGlowOff","handPositions","getPositionExpos","cardNode","simpleMove","Component","defaultExpoDest","Vec3","defaultFrom","animateExpoCard","_ref$from","from","_ref$dest","dest","_ref$delay","delay","_ref$speed","speed","flipped","p1","x","y","z","r1","Quat","fromEuler","r2","r3","translate","tween","set","position","to","easing","rotate","rotation","onUpdate","angle","getEulerAngles","playEffectSound","scale","parallel","defaultRevealDest","_ref2$from","_ref2$expoDest","expoDest","_ref2$dest","_ref2$delay","_ref2$speed","resolve","_ref3$delay","glow","UIOpacity","opacity","distance","by","property","_dec2","Camera","_dec3","Node","_dec4","_descriptor","_applyDecoratedDescriptor","_class2","Card3D","_initializerDefineProperty","_assertThisInitialized","_descriptor2","_descriptor3","renderTexture","textMaterial","onLoad","initRenderTexture","setupCardMaterial","updateCardText","RenderTexture","reset","width","height","meshRenderer","getComponentInChildren","MeshRenderer","Material","initialize","effectName","setProperty","setMaterialInstance","skill","nameRichText","nameText","RichText","skillRichText","skillText","renderRichTextToTexture","uiCamera","targetTexture","setPosition","scheduleOnce","configurable","enumerable","writable","initializer","CardManager","unsubscribe","isMouseInside","uiOpacity","cardFront","cardName","cardHealth","cardDefense","cardAttack","cardSkill","cardFoil","cardVisual","cardClass","Animation","Sprite","subscribeCardChange","_this$unsubscribe","setCardId","indexOf","onStateChange","_extends","_this$unsubscribe2","lastState","cardChanged","substring","title","getSkillDesc","template","visualUri","getVisualUri","foilUri","getFoilUri","classUri","getClassUri","resources","load","err","frame","spriteFrame","showPreview","playAnimation","cardPreview","hidePreview","onMouseEnter","setCursor","dragging","previewing","activeCard","onMouseLeave","DuelCommandType","GroundMoves","generatedPlaces","Ability","command","type","CardMove","No","_command$target","target","fromGround","place","Ground","toGround","fromDeck","fromAir","Grave","Relocate","GenerateFromAir","console","log","Removal","_x3","_x4","_x5","_x6","toLabel","toColor","onComplete","label","_x7","_x8","_x9","_x10","strength","volume","instance","Math","random","repeatForever","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","Color","WHITE","BLACK","RED","GREEN","BLUE","parent","Canvas","uiTransform","UITransform","halfScreenWidth","halfScreenHeight","miscNode","getChildByName","buttonNode","instantiate","titleNode","newLabel","EnableAllCompositeModeButton","setScale","labelComponent","overflow","currentRow","newNode","singleModeToggle","textComponent","Toggle","EventType","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","error","isTextMatched","textUI","textDescription","tempText","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","update","deltaTime","commands","fromPosition","expoCreator","expoPositions","handIndex","handPosition","expoPosition","selectDeckNode","getPosition","getCenterExpos","getRightExpos","animateDrawPlayerCard","animateDrawEnemyCard","NodeEvents","getFirstEmptyLeft","getFirstEmptyRight","DuelManager","previewingLeft","previewingRight","_document","audioSource","AudioSource","turnRibbon","duelRibbon","MOUSE_UP","onMouseUp","MOUSE_MOVE","onMouseMove","document","getElementById","addEventListener","onMouseOut","playBackgroundSound","onUnitPreview","previewNode","getGroundExpos","UnitManager","cardIdFromNode","myGround","summonIndex","onCardDrag","e","_system$activeCard","_e$getUILocation","getUILocation","zonePosition","getWorldPosition","setWorldPosition","onCardDrop","_e$getUILocation2","indexInHand","getHandExpos","sendCardSummon","getMyGround","winner","firstMover","chosen","_system$activeCard2","handCardIds","mousePosition","cardPosition","_chosen","abs","uuid","onCardLeave","onCardHover","_system$activeCard3","isActive","glowNode","raiseHandCard","raiseHandPreview","sendCardHover","ButtonEvents","DuelRibbonController","lobbyButton","shareButton","MOUSE_ENTER","MOUSE_LEAVE","onLobbyClick","onShareToX","sys","isBrowser","location","href","isWin","twitterShareUrl","encodeURIComponent","window","open","TextMeshPro","Example1","_time","_fScale","_xOffset","_initPos","alpha","anim1","anim3","text2","result","getPosVertices","dt","anim2","_anim","_loop","_i","TmpUtils","waitCmpt","text1","updateRenderData","setVisible","center","updateCall","isVisible","copy","clone","j","delta","subtract","multiplyScalar","add","setPosVertices","delegateYield","t0","sin","_anim2","_loop2","_i2","_this4","_context4","text3","getColorExtraVertices","time","a","setColorExtraVertices","isDeath","index","backFace","fastDelta","shakeGround","updatePlayers","instantiatePrefab","then","hit","FINISHED","destroy","warn","randomOffset","CommandSourceType","filterUnitSourced","combatTweens","unitCommands","deathIds","filter","filterRemoval","map","_i$target$from","lodash","uniqBy","_i$target","source","fromCardId","animateCardAttack","_i$target2","Unit","extractGroundMove","skillSources","InspiredSkill","PostFightSkill","PreFightSkill","isSkillCasting","groundMove","_node","unitNode","expos","_node2","isMine","groundGuide","_expos","animateUnitRaise","animateGroundRemoval","selectGroundGuide","selectGroundNode","animateAirSummon","animateRelocate","getInitialState","mergeFragmentToState","isMyCommand","_system$globalNodes$b","config","history","extractPlayerIds","userId","emit","mergeRemoteHistory","minimumReplicateStep","fastReplay","replay","level","bundles","winnerPoints","loserPoints","isVictory","showEndGameRibbon","_ref4","isMouseIn","ElementalType","ClassType","colorMap","myId","_node$getComponent","milliSeconds","suffix","Metal","Wood","Water","Fire","Earth","Dark","Light","classId","Knight","Wizard","Assassin","Summoner","black","green","blue","red","magenta","designScreenSize","fragments","fragment","style","text","join","cursor","canvas","Vec2","getHandSize","_system$duel$setting","setting","groundSize","_selectHand","positiveColor","fromHEX","negativeColor","value","uniqueCardCount","eventRegx","imageAttrReg","HtmlTextParser","_specialSymbolArray","_stack","_resultObjectArray","parse","htmlString","startIndex","tagEndIndex","tagBeginIndex","lastIndexOf","_processResult","newStr","tagStr","charAt","_addToStack","_attributeToObject","trim","obj","header","exec","tagName","nextSpace","eventHanlderString","size","parseInt","event","_processEventHandler","startsWith","isNewLine","remainingArgument","rightQuot","tagValue","isValidImageTag","originTagNameLength","replace","toLowerCase","getRightQuotationIndex","endsWith","slice","charCodeAt","isImage","src","imageHeight","imageWidth","imageAlign","imageOffset","defaultColorGradientObject","lb","rb","lt","rt","colorGradientAttrReg","toLocaleLowerCase","colorGradient","defaultFaceObject","dilate","softness","faceAttrReg","Number","param","face","defaultOutlineObject","thickness","outlineAttrReg","outline","defaultUnderlayObject","underlayAttrReg","underlay","defaultGlowObject","offset","inner","outer","power","glowAttrReg","underline","strikethrough","italic","bold","leftQuot","leftSingleQuot","leftDoubleQuot","useDoubleQuot","eventString","isValidTag","eventNames","eventName","eventValue","match","previousTagObj","key","_escapeSpecialSymbol","str","_step","_iterator","_createForOfIteratorHelperLoose","done","symbolArr","message","claimedPoints","sound","grayscale","coinNode","toString","fontSize","lineHeight","ws","onmessage","item","_JSON$parse","JSON","data","payload","GameEventType","ConnectMatch","handlers","SendBundle","CardHover","GameOver","onerror","onopen","isSocketReady","onclose","maxRetry","retryCount","reject","waitInterval","setInterval","clearInterval","replaying","BundleGroup","runCommand","move","remoteHistoryLength","isUpToDate","bundle","group","isInitialDraw","isTurnDraw","isDraw","historyLevel","InitialDraw","TurnDraw","runCommandBundle","showTurnRibbon","playDraw","Summon","playSummon","FightCombat","playFight","Reinforce","playReinforce","playGeneric","replicateState","updateGroundUnits","matchId","fight","cloneDeep","centerNode","spacing","align","positions","totalRadius","itemRadius","alignOffset","getAlignOffset","at","getGroundSize","ProgressBar","LoadingManager","preloadScene","completedCount","totalCount","progressBar","progress","waitForSocket","loadScene","targetNode","xOffset","yOffset","path","PreviewManager","MOUSE_DOWN","onMouseDown","dragOffset","getLocation","relocatePromises","_target$from","expoNode","replicateHandState","handGuide","parentNode","playerId","scaleFactor","replicateGroundState","isPlayerHand","setRotation","groundPositions","audioContext","backgroundSource","backgroundGain","audioCache","useAudioContext","AudioContext","createGain","connect","destination","resume","dimBackgroundVolume","currentVolume","gain","raiseBackgroundVolume","loop","_yield$getAudioSource","clip","buffer","getAudioSource","sent","disconnect","createBufferSource","bufferFromAsset","_callee4","_ref5","_callee5","_yield$getAudioSource2","_context5","playOneShot","uri","prefab","_ref6","_callee6","asset","_context6","request","XMLHttpRequest","nativeUrl","responseType","onload","response","send","extractAudioBuffer","_ref7","_callee7","_context7","decodeAudioData","audio","_ref8","_callee9","_context9","cache","_callee8","_context8","_x11","action","jwt","stringify","sendBundles","_localStorage","token","base64","jsonPayload","searchJwt","URLSearchParams","get","localStorageJwt","localStorage","getItem","_decodeJwt","split","decodeURIComponent","atob","Boolean","internalSendCardHover","commandBundles","summonCard","endTurn","throttle","_commands$i","targetPosition","animatePlayerSummon","animateEnemySummon","aboveTo","defaultSetting","nanoId","makeDuelProxy","listenerMap","getSubscriptionCount","Object","keys","reduce","acc","listener","initialEmmit","_listenerMap$key","subscriptionId","Proxy","isEqual","registeredGroup","_registeredGroup$subs","_registeredGroup$subs2","defaultPlayer","initialPlayerHealth","perTurnTroop","perTurnDraw","perTurnSpell","defaultDuel","turn","Draw","firstDeck","secondDeck","firstHand","secondHand","firstGrave","secondGrave","globalThis","executeInEditMode","vfmt","gfx","Attribute","AttributeName","ATTR_POSITION","Format","RGB32F","ATTR_TEX_COORD","RG32F","ATTR_COLOR","RGBA32F","ATTR_COLOR2","R32F","TmpOverflow","TmpUniform","tooltip","range","_dec5","_dec6","_dec7","_dec8","visible","_enableOutline","_dec9","_dec10","_dec11","_dec12","_enableUnderlay","_dec13","_dec14","_dec15","_dec16","_dec17","_dec18","_dec19","_enableGlow","_dec20","_dec21","_dec22","_dec23","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_comp","init","material","getMaterialInstance","updateTmpMatFace","updateTmpMatOutline","updateTmpMatUnderlay","updateTmpMatGlow","_createClass","_faceColor","v","_faceDilate","_faceSoftness","_outlineColor","_outlineThickness","_underlayColor","_underlayOffset","_underlayDilate","_underlaySoftness","_glowColor","_glowOffset","_glowInner","_glowOuter","_glowPower","getOwnPropertyDescriptor","_dec24","_dec25","multiline","_dec26","JsonAsset","_dec27","_dec28","HorizontalTextAlignment","_dec29","_dec30","VerticalTextAlignment","_dec31","_dec32","_overflow","SHRINK","_dec33","_dec34","Enum","_dec35","_dec36","CLAMP","ELLIPSIS","_dec37","_dec38","_dec39","_enableUnderline","_dec40","_dec41","_enableStrikethrough","_dec42","_dec43","_dec44","_colorGradient","_dec45","_dec46","_dec47","_dec48","_dec49","_dec50","_dec51","_dec52","Texture2D","readonly","_class4","_descriptor18","_class5","_UIRenderer","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","_descriptor35","_descriptor36","_descriptor37","_descriptor38","_descriptor39","_fontConfig","_lettersInfo","_assembler","_colorExtraDirty","_richTextDeltaX","_proto2","editorInit","resetInEditor","customMaterial","tmpUniform","font","textures","TmpFontConfig","_font","json","onEnable","_applyFontTexture","lateUpdate","updateColorExtra","requestRenderData","drawInfoType","RenderData","initRenderDrawInfo","_renderData","force","_flushAssembler","renderData","vertDirty","_render","render","commitComp","comp","assembler","transform","mat","dataHash","bufferID","chunk","isValid","bufferId","stencilStage","StencilManager","sharedManager","stage","depthStencilStateStage","isMatEqual","tmpMatDefine","enableOutline","enableUnderlay","enableGlow","_currMaterial","renderer","MaterialInstance","_currTmpMatDefine","arr","renderMat","getRenderMaterial","propName","v1","getProperty","v2","equals","_currHash","_currDepthStencilStateStage","autoMergeBatches","_currComponent","_isMeshBuffer","updateBuffer","vertexFormat","_currRenderData","_currTransform","_currLayer","layer","_currTexture","getGFXTexture","_currSampler","getGFXSampler","_currTextureHash","getHash","_currSamplerHash","hash","fillBuffers","_updateColor","markForUpdateRenderData","setEntityColor","_canRender","_string","fontConfig","TmpAssembler","destroyRenderData","createData","changeMaterialForDefine","updateMaterial","_customMaterial","setMaterial","_updateTmpMatTexture","recompileShaders","USE_TEXTURE_LEVEL_1","USE_TEXTURE_LEVEL_2","USE_TEXTURE_LEVEL_3","USE_TEXTURE_LEVEL_4","faceColor","faceDilate","faceSoftness","USE_OUTLINE","outlineColor","outlineThickness","USE_UNDERLAY","underlayColor","underlayOffset","underlayDilate","underlaySoftness","USE_GLOW","glowColor","glowOffset","glowInner","glowOuter","glowPower","forceUpdateRenderData","setFont","enabledInHierarchy","isVisble","_horizontalAlign","_verticalAlign","_actualFontSize","_fontSize","_lineHeight","_spacingX","_enableWrapText","_enableItalic","_underlineOffset","_strikethroughOffset","_colorLB","_colorRB","_colorLT","_colorRT","UIRenderer","LEFT","TOP","NONE","QUAD_INDICES","tempColor","vec3_temp","_worldMatrix","Mat4","ITALIC_REDIANS","misc","degreesToRadians","shareLabelInfo","fontAtlas","hAlign","vAlign","margin","_uiTrans","_tmpUvRect","rect","_tmpPosRect","_horizontalKernings","_linesWidth","_linesOffsetX","_fntConfig","_numberOfLines","_textDesiredHeight","_letterOffsetY","_tailoredTopY","_tailoredBottomY","_bmfontScale","_contentSize","_originFontSize","_hAlign","_vAlign","_isWrapText","_labelWidth","_labelHeight","_maxLineWidth","_italicVec","_extraLinesData","_extraLineDef","_ellipsisDef","_ellipsisWidth","TmpLetterInfo","valid","line","quadsIndex","_uiProps","dataList","vData","vb","vertexCount","getWorldMatrix","vertexOffset","vert","transformMat4","toArray","vid","meshBuffer","ib","iData","indexOffset","count","indexCount","setDirty","uiTransformComp","lettersInfo","_updateProperties","_updateContent","updateUVs","updateColor","updateTextureIdx","setContentSize","_resetProperties","textureDirty","uvOffset","u","floatsPerVert","textureIdxOffset","horizontalAlign","verticalAlign","spacingX","contentSize","RESIZE_HEIGHT","enableWrapText","_setupBMFontOverflowMetrics","enableItalic","enableUnderline","enableStrikethrough","getLetter","xAdvance","_computeHorizontalKerningForText","_alignText","_multilineTextWrapByWord","scaleHeight","scaleWidth","needReset","maxWidth","min","_computeAlignmentOffset","_updateQuads","_multilineTextWrap","_getFirstWordLen","_multilineTextWrapByChar","_getFirstCharLen","nextTokenFunc","ellipsisMaxLines","useEllipsis","max","floor","textLen","lineIndex","nextTokenX","nextTokenY","longestLine","letterRight","highestY","lowestY","letterDef","letterPosition","character","tokenLen","tokenHighestY","tokenLowestY","tokenRight","nextLetterX","newLine","tmp","letterIndex","getLetterDefinitionForChar","letterX","offsetX","h","_recordEllipsis","isUnicodeSpace","_getFontScale","offsetY","_recordLetterInfo","_recordPlaceholderInfo","parseFloat","toFixed","isUnicodeCJK","len","nextX","lastIndex","lastInfo","lastDef","lastW","w","lastXAdvance","lastOffsetX","lastRightX","char","tmpInfo","CENTER","l","RIGHT","blank","BOTTOM","newWidth","newHeight","dataLength","resize","anchorPoint","appX","appY","letterInfo","py","clipTop","px","clipRight","appendQuad","textureId","lineData","last","first","_updateLineQuads","underlineOffset","strikethroughOffset","createQuadIndices","setIndexBuffer","quadCount","Uint16Array","appx","appy","underlineInfo","lineIdx","firstInfo","firstDef","wLeft","wRight","wMid","leftX","rightX","midX","uvRect","posRect","dataOffset","b","r","t","texture","getTexture","texw","texh","rectWidth","rectHeight","appendVerts","info","multiply","colorLB","colorRB","colorLT","colorRT","rColor","verticesCount","indicesCount","colorOffset","colorExtraOffset","TmpFontLetter","_letterDefinitions","_textures","_json","charData","letter","xoffset","yoffset","page","xadvance","addLetterDefinitions","addTexture","letterDefinition","cloneLetterDefinition","copyLetterDefinitions","js","mixin","hasOwnProperty","clear","disallowMultiple","RichTextChildName","RichTextChildImageName","_htmlTextParser","labelPool","Pool","seg","imagePool","createSegment","lineCount","styleIndex","clickParam","clickHandler","getSegmentByPool","content","hideFlags","CCObject","Flags","DontSave","HideInHierarchy","addComponent","Type","SLICED","sizeMode","SizeMode","CUSTOM","underlineHeight","setAnchorPoint","DEV","SpriteAtlas","TmpRichText","_textArray","_segments","_labelSegmentsCache","_lineOffsetX","_lineCount","_layoutDirty","_labelChildrenNum","_labelContent","_imageContent","onRestore","handleTouchEvent","_addEventListeners","_onFontLoaded","_activateChildren","onDisable","_removeEventListeners","NodeEventType","LAYER_CHANGED","_applyLayer","removeFromParent","put","off","ANCHOR_CHANGED","_updateRichTextPosition","TOUCH_END","_onTouchEnded","_updateLabelSegmentTextAttributes","_applyTextAttribute","_createFontLabel","_createImage","_updateRichText","SplitLongStringApproximatelyIn2048","partStringArr","_calculateSize","multilineTexts","thisPartSplitResultArr","splitLongStringOver2048","longStr","curStart","curEnd","curString","leftString","curStringSize","sizeForOnePart","leftTryTimes","curWordStep","nextPartExec","getEnglishWordPartAtFirst","lastWordExec","getEnglishWordPartAtLast","_measureText","_this5","func","s","_step2","_this6","components","getComponents","_containsTouchLocation","touch","component","propagationStopped","_iterator2","point","getBoundingBoxToWorld","contains","_resetContent","children","child","splice","segment","_resetState","_addLabelSegment","stringToken","labelSegment","labelComp","labelContent","insertChild","_updateRichTextWithMaxWidth","labelString","labelWidth","fragmentWidth","_maxWidth","checkStartIndex","checkEndIndex","checkString","checkStringWidth","remainingString","_updateLineInfo","fragmentText","k","splitString","labelSize","_isLastComponentCR","_needsUpdateTextLayout","newTextArray","oldItem","newItem","oldStyle","newStyle","_addRichTextImageElement","richTextElement","spriteFrameName","_imageAtlas","getSpriteFrame","imageContent","spriteRect","spriteWidth","spriteHeight","expectWidth","expectHeight","click","warnID","lastEmptyLine","nextLineIndex","totalLineCount","trans","anchorX","anchorY","lineOffsetX","pos","richTextDeltaX","lineHeightSet","lineHeightReal","offsets","isInteger","_convertLiteralColorValue","colorValue","toUpperCase","hexString","g","isNaN","labelSeg","_textStyle","textStyle","_step3","_iterator3","_handleTouchEvent","_this$node$getChildBy","_this$node$getChildBy2","WORD_REG","SYMBOL_REG","LAST_WORD_REG","LAST_ENGLISH_REG","FIRST_ENGLISH_REG","_safeSubstring","targetString","endIndex","newStartIndex","newEndIndex","startChar","endChar","url","cmpt","seconds","ch","test","chCode","allWidth","measureText","wrappedWords","fuzzyLen","tmpText","sLine","pushNum","checkWhile","sText","TMP_MAT","CCInteger","TurnController","playerTurnGlow","enemyTurnGlow","turnLabel","orb","countdown","onButtonClick","onPhaseChange","white","interactable","animateFade","animateSwapLabel","startCountdown","stopCountdown","PreFight","Fight","PostFight","sendEndTurn","timer","turnMaxTime","calculateCountdown","minute","second","labelCountdown","padStart","schedule","unschedule","ActivationType","renderCard","_card$skill","activation","Charge","raiseUnitPreview","wsUri","WebSocket","conflict"],"mappings":"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","file":"all.js","sourcesContent":["import type { Animation, Node } from 'cc';\n\nexport const playAnimation = (\n\tnode: Node,\n\tname = 'fade-in',\n\tduration?: number,\n): void => {\n\tconst animation = node.getComponent('cc.Animation') as Animation;\n\n\tif (duration) {\n\t\tconst state = animation.getState(name);\n\t\tstate.duration = duration;\n\t}\n\n\tanimation.play(name);\n};\n","import Engine from '@underrealm/murg';\nimport { Label } from 'cc';\n\nimport { getPositiveColor } from '../util/helper';\n\nimport { system } from './system';\n\nconst {\n\tgetCard,\n\tgetCardState,\n\tgetFacingIdentifier,\n\tgetEnemyId,\n\tselectPlayer,\n\tselectGround,\n\tgetComputedAttribute,\n} = Engine;\n\nexport const updateGroundUnits = (): void => {\n\tsystem.duel.firstGround.forEach(updateUnit);\n\tsystem.duel.secondGround.forEach(updateUnit);\n};\n\nexport const updateUnit = async (cardId: string): Promise<void> => {\n\tconst node = system.cardRefs[cardId];\n\n\tif (!node) return;\n\n\tconst card = getCard(system.duel.cardMap, cardId);\n\tconst origin = card.attribute;\n\tconst state = getCardState(system.duel.stateMap, cardId);\n\tconst current = getComputedAttribute(system.duel, cardId);\n\tconst future = getComputedAttribute(system.predict, cardId);\n\tconst facingIdentifier = getFacingIdentifier(\n\t\tsystem.duel,\n\t\tstate.owner,\n\t\tstate.id,\n\t);\n\tconst healthNode = node.getChildByPath('front/health');\n\tconst healthLabel = healthNode.getComponent(Label);\n\tconst defenseNode = node.getChildByPath('front/defense');\n\tconst defenseLabel = defenseNode.getComponent(Label);\n\tconst attackNode = node.getChildByPath('front/attack');\n\tconst attackLabel = attackNode.getComponent(Label);\n\tconst chargeLabel = node\n\t\t.getChildByPath('front/charge/value')\n\t\t.getComponent(Label);\n\tconst deathPredictNode = node.getChildByPath('front/death');\n\tconst healthPredictNode = node.getChildByPath('prediction/health');\n\tconst healthPredictLabel = healthPredictNode.getComponent(Label);\n\tconst defensePredictNode = node.getChildByPath('prediction/defense');\n\tconst defensePredictLabel = defensePredictNode.getComponent(Label);\n\tconst attackPredictNode = node.getChildByPath('prediction/attack');\n\tconst attackPredictLabel = attackPredictNode.getComponent(Label);\n\n\thealthLabel.string = String(current.health);\n\thealthLabel.color = getPositiveColor(current.health, origin.health);\n\tdefenseLabel.string = String(current.defense);\n\tdefenseLabel.color = getPositiveColor(current.defense, origin.defense);\n\tattackLabel.string = String(current.attack);\n\tattackLabel.color = getPositiveColor(current.attack, origin.attack);\n\n\tif (current.charge !== undefined) {\n\t\tchargeLabel.string = String(current.charge);\n\t}\n\n\tdefensePredictNode.active = false;\n\tdefensePredictNode.active = false;\n\thealthPredictNode.active = false;\n\tdefensePredictNode.active = false;\n\tattackPredictNode.active = false;\n\tdeathPredictNode.active = false;\n\n\tconst facingNode = system.cardRefs[facingIdentifier?.id];\n\tconst nodeHided = node.getChildByPath('back')?.active;\n\tconst facingHided = facingNode?.getChildByPath('back')?.active;\n\n\tif (!facingNode || nodeHided || facingHided) return;\n\n\tconst healthDiff = future.health - current.health;\n\tconst defenseDiff = future.defense - current.defense;\n\tconst attackDiff = future.attack - current.attack;\n\n\tif (future.health <= 0) {\n\t\tdeathPredictNode.active = true;\n\t}\n\n\tif (healthDiff === 0) {\n\t\thealthPredictNode.active = false;\n\t} else {\n\t\thealthPredictNode.active = true;\n\t\thealthPredictLabel.string = String(healthDiff);\n\t\thealthPredictLabel.color = getPositiveColor(healthDiff);\n\t}\n\n\tif (defenseDiff === 0) {\n\t\tdefensePredictNode.active = false;\n\t} else {\n\t\tdefensePredictNode.active = true;\n\t\tdefensePredictLabel.string = String(defenseDiff);\n\t\tdefensePredictLabel.color = getPositiveColor(defenseDiff);\n\t}\n\n\tif (attackDiff === 0) {\n\t\tattackPredictNode.active = false;\n\t} else {\n\t\tattackPredictNode.active = true;\n\t\tattackPredictLabel.string = String(attackDiff);\n\t\tattackPredictLabel.color = getPositiveColor(attackDiff);\n\t}\n};\n\nexport const updatePlayers = async (): Promise<void> => {\n\tconst promises = [\n\t\tupdatePlayer(system.duel.firstPlayer.id),\n\t\tupdatePlayer(system.duel.secondPlayer.id),\n\t];\n\n\tawait Promise.all(promises);\n};\n\nexport const updatePlayer = async (id: string): Promise<void> => {\n\tconst player = selectPlayer(system.duel, id);\n\tconst enemyId = getEnemyId(system.duel, id);\n\tconst ground = selectGround(system.duel, id);\n\tconst enemyGround = selectGround(system.duel, enemyId);\n\tconst isMe = player.id === system.playerIds.me;\n\tconst healthNode = isMe\n\t\t? system.globalNodes.playerHealth\n\t\t: system.globalNodes.enemyHealth;\n\tconst predictNode = isMe\n\t\t? system.globalNodes.playerHealthPredict\n\t\t: system.globalNodes.enemyHealthPredict;\n\tconst healthLabel = healthNode.getComponent(Label);\n\tconst predictLabel = predictNode.getComponent(Label);\n\tlet healthDiff = 0;\n\n\tfor (let i = 0; i < enemyGround.length; i += 1) {\n\t\tconst isPlayerAttack = enemyGround[i] && !ground[i];\n\t\tconst enemyNode = system.cardRefs[enemyGround[i]];\n\n\t\tif (isPlayerAttack && !enemyNode?.getChildByPath('back')?.active) {\n\t\t\tconst attribute = getComputedAttribute(system.duel, enemyGround[i]);\n\t\t\thealthDiff -= attribute.attack;\n\t\t}\n\t}\n\n\thealthLabel.string = String(player.health);\n\tpredictLabel.string = String(healthDiff);\n\tpredictNode.active = healthDiff !== 0;\n};\n","import type { PlayerState } from '@underrealm/murg';\nimport Engine from '@underrealm/murg';\nimport type { Animation } from 'cc';\nimport { _decorator, Component, Label } from 'cc';\n\nimport { getPositionExpos } from './util/layout';\nimport { switchBackgroundSound } from './util/resources';\nimport { system } from './util/system';\nimport { sendConnect } from './network';\nimport { animateGlowOff, animateGlowOn, simpleMove } from './tween';\n\nconst {\n\tCardType,\n\tDuelPhases,\n\tDuelPlace,\n\tgetCard,\n\tselectHand,\n\tselectPlayer,\n\tselectStateKey,\n} = Engine;\n\nconst { ccclass } = _decorator;\ninterface Props {\n\tanimation?: Animation;\n\tenemyDeckCount?: Label;\n\tplayerDeckCount?: Label;\n}\n\n@ccclass('BoardManager')\nexport class BoardManager extends Component {\n\tunSubscribers: (() => void)[] = [];\n\tplayerDeckCount: Label;\n\tenemyDeckCount: Label;\n\n\tprops: Props = {};\n\n\tstart(): void {\n\t\tconst fog = this.node.getChildByPath('Air/fog');\n\t\tconst cardTemplate = this.node.getChildByPath('Card Template');\n\t\tconst unitTemplate = this.node.getChildByPath('Unit Template');\n\t\tconst unitPreview = this.node.getChildByPath('Surface/Unit Preview');\n\t\tconst playerDeck = this.node.getChildByPath('Surface/Player Deck/foil');\n\t\tconst enemyDeck = this.node.getChildByPath('Surface/Enemy Deck/foil');\n\t\tconst centerExpo = this.node.getChildByPath('Guide/centerExpo');\n\t\tconst leftExpo = this.node.getChildByPath('Guide/leftExpo');\n\t\tconst rightExpo = this.node.getChildByPath('Guide/rightExpo');\n\t\tconst playerHand = this.node.getChildByPath('playerHand');\n\t\tconst enemyHand = this.node.getChildByPath('Surface/enemyHand');\n\t\tconst playerGround = this.node.getChildByPath('Surface/playerGround');\n\t\tconst enemyGround = this.node.getChildByPath('Surface/enemyGround');\n\t\tconst playerHandGuide = this.node.getChildByPath('Guide/playerHand');\n\t\tconst playerGroundGuide = this.node.getChildByPath('Guide/playerGround');\n\t\tconst enemyHandGuide = this.node.getChildByPath('Guide/enemyHand');\n\t\tconst enemyGroundGuide = this.node.getChildByPath('Guide/enemyGround');\n\t\tconst summonZoneGuide = this.node.getChildByPath('Guide/summonZone');\n\t\tconst playerHealth = this.node.getChildByPath('Hud/playerHealth');\n\t\tconst playerHealthPredict = this.node.getChildByPath(\n\t\t\t'Hud/playerHealthPredict',\n\t\t);\n\t\tconst enemyHealth = this.node.getChildByPath('Hud/enemyHealth');\n\t\tconst enemyHealthPredict = this.node.getChildByPath(\n\t\t\t'Hud/enemyHealthPredict',\n\t\t);\n\n\t\tthis.playerDeckCount = this.node\n\t\t\t.getChildByPath('Surface/playerDeckCount')\n\t\t\t.getComponent(Label);\n\t\tthis.enemyDeckCount = this.node\n\t\t\t.getChildByPath('Surface/enemyDeckCount')\n\t\t\t.getComponent(Label);\n\n\t\tsystem.globalNodes.board = this.node;\n\t\tsystem.globalNodes.fog = fog;\n\t\tsystem.globalNodes.cardTemplate = cardTemplate;\n\t\tsystem.globalNodes.unitTemplate = unitTemplate;\n\t\tsystem.globalNodes.unitPreview = unitPreview;\n\t\tsystem.globalNodes.playerDeck = playerDeck;\n\t\tsystem.globalNodes.enemyDeck = enemyDeck;\n\t\tsystem.globalNodes.centerExpo = centerExpo;\n\t\tsystem.globalNodes.leftExpo = leftExpo;\n\t\tsystem.globalNodes.rightExpo = rightExpo;\n\t\tsystem.globalNodes.playerHand = playerHand;\n\t\tsystem.globalNodes.enemyHand = enemyHand;\n\t\tsystem.globalNodes.playerGround = playerGround;\n\t\tsystem.globalNodes.enemyGround = enemyGround;\n\t\tsystem.globalNodes.playerHandGuide = playerHandGuide;\n\t\tsystem.globalNodes.playerGroundGuide = playerGroundGuide;\n\t\tsystem.globalNodes.enemyHandGuide = enemyHandGuide;\n\t\tsystem.globalNodes.enemyGroundGuide = enemyGroundGuide;\n\t\tsystem.globalNodes.summonZoneGuide = summonZoneGuide;\n\t\tsystem.globalNodes.playerHealth = playerHealth;\n\t\tsystem.globalNodes.playerHealthPredict = playerHealthPredict;\n\t\tsystem.globalNodes.enemyHealth = enemyHealth;\n\t\tsystem.globalNodes.enemyHealthPredict = enemyHealthPredict;\n\n\t\tsystem.globalNodes.board.on('stateReady', this.onStateReady.bind(this));\n\t\tif (system.context) this.onStateReady();\n\n\t\tsendConnect();\n\t}\n\n\tonDestroy(): void {\n\t\tthis.unSubscribers.forEach((unSub) => unSub());\n\t}\n\n\tonStateReady(): void {\n\t\tthis.unSubscribers.push(\n\t\t\tsystem.duel.subscribe(\n\t\t\t\tselectStateKey(system.duel, system.playerIds.me, DuelPlace.Player),\n\t\t\t\tthis.onPlayerUpdate.bind(this),\n\t\t\t\ttrue,\n\t\t\t),\n\t\t);\n\n\t\tthis.unSubscribers.push(\n\t\t\tsystem.duel.subscribe(\n\t\t\t\tselectStateKey(system.duel, system.playerIds.me, DuelPlace.Deck),\n\t\t\t\tthis.onPlayerDeckUpdate.bind(this),\n\t\t\t\ttrue,\n\t\t\t),\n\t\t);\n\n\t\tthis.unSubscribers.push(\n\t\t\tsystem.duel.subscribe(\n\t\t\t\tselectStateKey(system.duel, system.playerIds.enemy, DuelPlace.Deck),\n\t\t\t\tthis.onEnemyDeckUpdate.bind(this),\n\t\t\t\ttrue,\n\t\t\t),\n\t\t);\n\n\t\tthis.unSubscribers.push(\n\t\t\tsystem.duel.subscribe(\n\t\t\t\tselectStateKey(system.duel, system.playerIds.me, DuelPlace.Hand),\n\t\t\t\tthis.onPlayerHandUpdate.bind(this),\n\t\t\t),\n\t\t);\n\n\t\tthis.unSubscribers.push(\n\t\t\tsystem.duel.subscribe(\n\t\t\t\tselectStateKey(system.duel, system.playerIds.enemy, DuelPlace.Hand),\n\t\t\t\tthis.onEnemyHandUpdate.bind(this),\n\t\t\t),\n\t\t);\n\n\t\tthis.unSubscribers.push(\n\t\t\tsystem.duel.subscribe('phase', this.onPhaseUpdate.bind(this)),\n\t\t);\n\t}\n\n\tonPlayerUpdate(player: PlayerState, old: PlayerState): void {\n\t\tif (player.perTurnHero !== old?.perTurnHero) {\n\t\t\tsetTimeout(() => this.updateInteractions(), 0);\n\t\t}\n\n\t\tif (old?.health > peekHealthGap && player.health < peekHealthGap) {\n\t\t\tswitchBackgroundSound('bgm-dungeon-peak', 0.2);\n\t\t}\n\t}\n\n\tonPlayerDeckUpdate(deck: string[]): void {\n\t\tthis.playerDeckCount.string = String(deck.length);\n\t}\n\n\tonEnemyDeckUpdate(deck: string[]): void {\n\t\tthis.enemyDeckCount.string = String(deck.length);\n\t}\n\n\tonPlayerHandUpdate(hand: []): void {\n\t\tthis.reArrangeHand(system.playerIds.me, hand);\n\t}\n\n\tonEnemyHandUpdate(hand: []): void {\n\t\tthis.reArrangeHand(system.playerIds.enemy, hand);\n\t}\n\n\tonPhaseUpdate(): void {\n\t\tsetTimeout(() => this.updateInteractions(), 0);\n\t}\n\n\tupdateInteractions(): void {\n\t\tconst me = selectPlayer(system.duel, system.playerIds.me);\n\t\tconst isMyPhase = system.duel.phaseOf === system.playerIds.me;\n\t\tconst isSetupPhase = system.duel.phase === DuelPhases.Setup;\n\t\tconst isCommandAble = isMyPhase && isSetupPhase;\n\t\tconst isHeroAvailable = isCommandAble && me.perTurnHero > 0;\n\t\tconst myHand = selectHand(system.duel, system.playerIds.me);\n\n\t\tsystem.isCommandAble = isCommandAble;\n\n\t\tmyHand.forEach((id) => {\n\t\t\tconst card = getCard(system.duel.cardMap, id);\n\t\t\tconst node = system.cardRefs[id];\n\t\t\tconst isHeroCard = card.kind === CardType.Hero;\n\t\t\tconst isTroopCard = card.kind === CardType.Troop;\n\n\t\t\tif (node) {\n\t\t\t\tif (isTroopCard) {\n\t\t\t\t\tif (system.isCommandAble) {\n\t\t\t\t\t\tanimateGlowOn(node);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tanimateGlowOff(node);\n\t\t\t\t\t}\n\t\t\t\t} else if (isHeroCard) {\n\t\t\t\t\tif (isHeroAvailable) {\n\t\t\t\t\t\tanimateGlowOn(node);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tanimateGlowOff(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\treArrangeHand(owner: string, hand: []): void {\n\t\tconst isMyPhase = system.playerIds.me === owner;\n\t\tconst handPositions = isMyPhase\n\t\t\t? getPositionExpos(system.globalNodes.playerHandGuide, hand.length, 80)\n\t\t\t: getPositionExpos(system.globalNodes.enemyHandGuide, hand.length, 60);\n\n\t\tfor (let i = 0; i < hand.length; i += 1) {\n\t\t\tconst cardNode = system.cardRefs[hand[i]];\n\n\t\t\tif (cardNode) {\n\t\t\t\tsimpleMove(cardNode, handPositions[i]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst peekHealthGap = 150;\n","import type { Node, Tween } from 'cc';\nimport { Quat, tween, UIOpacity, Vec3 } from 'cc';\n\nimport { playEffectSound } from '../util/resources';\n\nexport interface PlayerCardOption {\n\tnode: Node;\n\tdelay?: number;\n\tfrom?: Vec3;\n\tdest?: Vec3;\n\texpoDest?: Vec3;\n\tspeed?: number;\n}\n\nconst defaultExpoDest = new Vec3(440, -15, 0);\nconst defaultFrom = new Vec3(425, -232, 0);\n\nexport const animateExpoCard = ({\n\tnode,\n\tfrom = defaultFrom,\n\tdest = defaultExpoDest,\n\tdelay = 0,\n\tspeed = 1,\n}: PlayerCardOption): Tween<Node> => {\n\tlet flipped = false;\n\tconst p1 = new Vec3(dest.x, dest.y - 25, dest.z);\n\tconst r1 = Quat.fromEuler(new Quat(), 90, 90, 91);\n\tconst r2 = Quat.fromEuler(new Quat(), 12, 0, 0);\n\tconst r3 = Quat.fromEuler(new Quat(), 0, 0, 0);\n\tconst translate = tween(node)\n\t\t.set({ position: from })\n\t\t.to(0.5 / speed, { position: p1 }, { easing: 'cubicIn' })\n\t\t.to(1.5 / speed, { position: dest }, { easing: 'backIn' });\n\n\tconst rotate = tween(node)\n\t\t.set({ rotation: r1, active: true })\n\t\t.to(\n\t\t\t0.5 / speed,\n\t\t\t{ rotation: r2 },\n\t\t\t{\n\t\t\t\teasing: 'cubicIn',\n\t\t\t\tonUpdate: (node: Node) => {\n\t\t\t\t\tif (flipped) return;\n\t\t\t\t\tconst angle = new Vec3(0, 0, 0);\n\t\t\t\t\tnode.rotation.getEulerAngles(angle);\n\n\t\t\t\t\tif (angle.z < 30) {\n\t\t\t\t\t\tplayEffectSound('card-flip', 0.3);\n\t\t\t\t\t\tnode.getChildByPath('back').active = false;\n\t\t\t\t\t\tflipped = true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t)\n\t\t.to(1.5 / speed, { rotation: r3 }, { easing: 'quadIn' });\n\n\tconst scale = tween(node)\n\t\t.set({ scale: new Vec3(0.18, 0.18, 1) })\n\t\t.to(0.5 / speed, { scale: new Vec3(0.48, 0.48, 1) }, { easing: 'quadIn' })\n\t\t.to(1 / speed, { scale: new Vec3(0.5, 0.5, 1) }, { easing: 'quadOut' });\n\n\treturn tween(node).delay(delay).parallel(translate, rotate, scale);\n};\n\nconst defaultRevealDest = new Vec3(0, -360, 0);\n\nexport const animateDrawPlayerCard = ({\n\tnode,\n\tfrom = defaultFrom,\n\texpoDest = defaultExpoDest,\n\tdest = defaultRevealDest,\n\tdelay = 0,\n\tspeed = 1,\n}: PlayerCardOption): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\tanimateExpoCard({ node, from, dest: expoDest, delay, speed })\n\t\t\t.to(\n\t\t\t\t0.8,\n\t\t\t\t{ position: dest, scale: new Vec3(0.4, 0.4, 1) },\n\t\t\t\t{ easing: 'expoOut' },\n\t\t\t)\n\t\t\t.call(() => {\n\t\t\t\tplayEffectSound('light-fire', 0.3);\n\t\t\t\tresolve();\n\t\t\t})\n\t\t\t.start();\n\t});\n};\n\nexport interface EnemyCardOption {\n\tnode: Node;\n\tfrom: Vec3;\n\tdest: Vec3;\n\tdelay: number;\n}\n\nexport const animateDrawEnemyCard = ({\n\tnode,\n\tfrom,\n\tdest,\n\tdelay = 0,\n}: EnemyCardOption): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\tconst r1 = Quat.fromEuler(new Quat(), 0, 0, 90);\n\t\tconst r2 = Quat.fromEuler(new Quat(), 0, 0, 180);\n\n\t\ttween(node)\n\t\t\t.delay(delay)\n\t\t\t.call(() => playEffectSound('card-flip', 0.3))\n\t\t\t.set({ position: from, rotation: r1, scale: new Vec3(0.18, 0.18, 1) })\n\t\t\t.to(\n\t\t\t\t1,\n\t\t\t\t{ position: dest, rotation: r2, scale: new Vec3(0.28, 0.28, 1) },\n\t\t\t\t{ easing: 'expoInOut' },\n\t\t\t)\n\t\t\t.call(() => resolve())\n\t\t\t.start();\n\t});\n};\n\nexport const animateGlowOn = (node: Node): void => {\n\tconst glow = node.getChildByPath('glow');\n\n\tglow.active = true;\n\ttween(glow.getComponent(UIOpacity))\n\t\t.set({ opacity: 0 })\n\t\t.to(3, { opacity: 150 }, { easing: 'expoOut' })\n\t\t.start();\n};\n\nexport const animateGlowOff = (node: Node): void => {\n\tconst glow = node.getChildByPath('glow');\n\n\ttween(glow.getComponent(UIOpacity))\n\t\t.to(1, { opacity: 0 }, { easing: 'expoOut' })\n\t\t.call(() => (glow.active = false))\n\t\t.start();\n};\n\nexport const animateGroundReveal = (\n\tnode: Node,\n\tdistance = 50,\n): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\tlet flipped = false;\n\t\tconst r1 = Quat.fromEuler(new Quat(), 180, 0, 0);\n\t\tconst r2 = Quat.fromEuler(new Quat(), 0, 0, 0);\n\n\t\tconst translate = tween(node)\n\t\t\t.by(0.25, { position: new Vec3(0, distance, 0) }, { easing: 'backOut' })\n\t\t\t.by(0.75, { position: new Vec3(0, -distance, 0) }, { easing: 'expoOut' });\n\t\tconst scale = tween(node)\n\t\t\t.to(0.25, { scale: new Vec3(0.25, 0.25, 1) })\n\t\t\t.to(0.75, { scale: new Vec3(0.24, 0.24, 1) }, { easing: 'backOut' });\n\t\tconst rotate = tween(node)\n\t\t\t.set({ rotation: r1 })\n\t\t\t.to(\n\t\t\t\t1,\n\t\t\t\t{ rotation: r2 },\n\t\t\t\t{\n\t\t\t\t\teasing: 'expoOut',\n\t\t\t\t\tonUpdate: (node: Node) => {\n\t\t\t\t\t\tif (flipped) return;\n\t\t\t\t\t\tconst angle = new Vec3(0, 0, 0);\n\t\t\t\t\t\tnode.rotation.getEulerAngles(angle);\n\n\t\t\t\t\t\tif (angle.x < 90) {\n\t\t\t\t\t\t\tnode.getChildByPath('back').active = false;\n\t\t\t\t\t\t\tflipped = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t)\n\t\t\t.call(resolve)\n\t\t\t.start();\n\n\t\ttween(node).parallel(translate, scale, rotate).call(resolve).start();\n\t});\n};\n","import {\n\t_decorator,\n\tCamera,\n\tComponent,\n\tMaterial,\n\tMeshRenderer,\n\tNode,\n\tRenderTexture,\n\tRichText,\n} from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Card3D')\nexport class Card3D extends Component {\n\t@property(Camera)\n\tprivate uiCamera: Camera = null;\n\n\t@property(Node)\n\tprivate nameText: Node = null;\n\n\t@property(Node)\n\tprivate skillText: Node = null;\n\n\tprivate renderTexture: RenderTexture = null;\n\tprivate textMaterial: Material = null;\n\n\tonLoad() {\n\t\tthis.initRenderTexture();\n\t\tthis.setupCardMaterial();\n\t\tthis.updateCardText('name of the card', 'skill of the card');\n\t}\n\n\tprivate initRenderTexture() {\n\t\tthis.renderTexture = new RenderTexture();\n\t\tthis.renderTexture.reset({ width: 512, height: 256 });\n\t}\n\n\tprivate setupCardMaterial() {\n\t\tconst meshRenderer = this.node.getComponentInChildren(MeshRenderer);\n\t\tif (meshRenderer) {\n\t\t\tthis.textMaterial = new Material();\n\t\t\tthis.textMaterial.initialize({ effectName: 'builtin-standard' });\n\t\t\tthis.textMaterial.setProperty('albedoMap', this.renderTexture);\n\t\t\tmeshRenderer.setMaterialInstance(this.textMaterial, 0);\n\t\t}\n\t}\n\n\tprivate updateCardText(name: string, skill: string) {\n\t\tconst nameRichText = this.nameText.getComponent(RichText);\n\t\tconst skillRichText = this.skillText.getComponent(RichText);\n\n\t\tnameRichText.string = name;\n\t\tskillRichText.string = skill;\n\t\tthis.renderRichTextToTexture();\n\t}\n\n\tprivate renderRichTextToTexture() {\n\t\tif (!this.uiCamera || !this.renderTexture) return;\n\n\t\tthis.uiCamera.node.active = true;\n\t\tthis.uiCamera.targetTexture = this.renderTexture;\n\n\t\tthis.nameText.active = true;\n\t\tthis.nameText.setPosition(0, 0, 0);\n\t\tthis.skillText.active = true;\n\t\tthis.skillText.setPosition(0, 0, 10);\n\t\tthis.uiCamera.node.setPosition(0, 0, 0);\n\n\t\t// Wait for the next frame to ensure rendering happens\n\t\tthis.scheduleOnce(() => {\n\t\t\tthis.uiCamera.node.active = false;\n\t\t\tthis.nameText.active = false;\n\t\t\tthis.skillText.active = false;\n\t\t});\n\t}\n}\n","import type { CardState } from '@underrealm/murg';\nimport Engine from '@underrealm/murg';\nimport type { Node, SpriteFrame } from 'cc';\nimport {\n\t_decorator,\n\tAnimation,\n\tComponent,\n\tLabel,\n\tresources,\n\tRichText,\n\tSprite,\n\tUIOpacity,\n} from 'cc';\n\nimport { playAnimation } from './util/animation';\nimport {\n\tgetClassUri,\n\tgetFoilUri,\n\tgetSkillDesc,\n\tgetVisualUri,\n\tsetCursor,\n} from './util/helper';\nimport { system } from './util/system';\n\nconst { ccclass } = _decorator;\nconst { getCard } = Engine;\n\n@ccclass('CardManager')\nexport class CardManager extends Component {\n\tunsubscribe: () => void;\n\tisMouseInside = false;\n\tcardId: string;\n\tanimation: Animation;\n\tuiOpacity: UIOpacity;\n\tcardFront: Node;\n\tcardName: Label;\n\tcardHealth: Label;\n\tcardDefense: Label;\n\tcardAttack: Label;\n\tcardSkill: RichText;\n\tcardFoil: Sprite;\n\tcardVisual: Sprite;\n\tcardClass: Sprite;\n\n\tstart(): void {\n\t\tthis.cardFront = this.node.getChildByPath('front');\n\t\tthis.animation = this.node.getComponent(Animation);\n\t\tthis.uiOpacity = this.node.getComponent(UIOpacity);\n\t\tthis.cardName = this.node.getChildByPath('front/name').getComponent(Label);\n\t\tthis.cardAttack = this.node\n\t\t\t.getChildByPath('front/attack')\n\t\t\t.getComponent(Label);\n\t\tthis.cardDefense = this.node\n\t\t\t.getChildByPath('front/defense')\n\t\t\t.getComponent(Label);\n\t\tthis.cardHealth = this.node\n\t\t\t.getChildByPath('front/health')\n\t\t\t.getComponent(Label);\n\t\tthis.cardSkill = this.node\n\t\t\t.getChildByPath('front/skill')\n\t\t\t.getComponent(RichText);\n\t\tthis.cardFoil = this.node.getChildByPath('front/foil').getComponent(Sprite);\n\t\tthis.cardVisual = this.node\n\t\t\t.getChildByPath('front/visual')\n\t\t\t.getComponent(Sprite);\n\t\tthis.cardClass = this.node\n\t\t\t.getChildByPath('front/class')\n\t\t\t.getComponent(Sprite);\n\n\t\tif (this.cardId) {\n\t\t\tthis.subscribeCardChange();\n\t\t}\n\t}\n\n\tonDestroy(): void {\n\t\tthis.unsubscribe?.();\n\t}\n\n\tsetCardId(id: string): void {\n\t\tif (id === this.cardId) return;\n\t\tthis.cardId = id;\n\n\t\tif (id.indexOf('#') > 0) {\n\t\t\tif (this.cardFront) {\n\t\t\t\tthis.subscribeCardChange();\n\t\t\t}\n\t\t} else {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst card = getCard(system.duel.cardMap, id);\n\t\t\t\tthis.onStateChange({ id, ...card.attribute } as never, null);\n\t\t\t}, 200);\n\t\t}\n\t}\n\n\tsubscribeCardChange(): void {\n\t\tthis.unsubscribe?.();\n\t\tthis.unsubscribe = system.duel.subscribe(\n\t\t\t`state#${this.cardId}`,\n\t\t\tthis.onStateChange.bind(this),\n\t\t\ttrue,\n\t\t);\n\t}\n\n\tonStateChange(state: CardState, lastState: CardState): void {\n\t\tconst card = getCard(system.duel.cardMap, state.id);\n\t\tconst cardChanged =\n\t\t\tstate.id.substring(0, 9) !== this.cardId.substring(0, 9);\n\n\t\tif (!lastState) {\n\t\t\tconst title = card.title ? ` - ${card.title}` : '';\n\n\t\t\tthis.cardName.string = `${card.name}${title}`;\n\t\t\tthis.cardSkill.string = getSkillDesc(card.skill.template as never);\n\t\t}\n\n\t\tif (state.health !== lastState?.health) {\n\t\t\tthis.cardHealth.string = String(state.health);\n\t\t}\n\n\t\tif (state.defense !== lastState?.defense) {\n\t\t\tthis.cardDefense.string = String(state.defense);\n\t\t}\n\n\t\tif (state.attack !== lastState?.attack) {\n\t\t\tthis.cardAttack.string = String(state.attack);\n\t\t}\n\n\t\tif (!lastState || cardChanged) {\n\t\t\tconst visualUri = getVisualUri(card.id);\n\t\t\tconst foilUri = getFoilUri(card.id);\n\t\t\tconst classUri = getClassUri(card.class);\n\n\t\t\tresources.load<SpriteFrame>(visualUri, (err, frame) => {\n\t\t\t\tif (err) return;\n\t\t\t\tif (this.cardVisual) this.cardVisual.spriteFrame = frame;\n\t\t\t});\n\n\t\t\tresources.load<SpriteFrame>(foilUri, (err, frame) => {\n\t\t\t\tif (err) return;\n\t\t\t\tif (this.cardFoil) this.cardFoil.spriteFrame = frame;\n\t\t\t});\n\n\t\t\tresources.load<SpriteFrame>(classUri, (err, frame) => {\n\t\t\t\tif (err) return;\n\t\t\t\tif (this.cardClass) this.cardClass.spriteFrame = frame;\n\t\t\t});\n\t\t}\n\t}\n\n\tshowPreview(): void {\n\t\tplayAnimation(system.globalNodes.cardPreview, 'fade-in');\n\t\tsystem.globalNodes.cardPreview.setPosition(0, -168);\n\t}\n\n\thidePreview(): void {\n\t\tsystem.globalNodes.cardPreview.setPosition(190, 740);\n\t}\n\n\tonMouseEnter(): void {\n\t\tsetCursor('grab');\n\t\tif (system.dragging) return;\n\n\t\tthis.uiOpacity.opacity = 50;\n\t\tsystem.previewing = true;\n\t\tsystem.activeCard = this.node;\n\t\tsystem.globalNodes.cardPreview.setPosition(this.node.position.x, -168);\n\n\t\tplayAnimation(system.globalNodes.cardPreview, 'fade-in');\n\t}\n\n\tonMouseLeave(): void {\n\t\tsetCursor('auto');\n\t\tthis.uiOpacity.opacity = 255;\n\t}\n}\n","import type { DuelCommand } from '@underrealm/murg';\nimport Engine from '@underrealm/murg';\n\nconst { DuelCommandType, DuelPlace } = Engine;\n\nexport enum GroundMoves {\n\tNo,\n\tRemoval,\n\tRelocate,\n\tGenerateFromAir,\n}\n\nconst generatedPlaces = [DuelPlace.Player, DuelPlace.Ability];\n\nexport const extractGroundMove = (command: DuelCommand): GroundMoves => {\n\tif (command.type !== DuelCommandType.CardMove) return GroundMoves.No;\n\n\tconst { from, to } = command.target;\n\tconst fromGround = from?.place === DuelPlace.Ground;\n\tconst toGround = to?.place === DuelPlace.Ground;\n\tconst fromDeck = from?.place === DuelPlace.Deck;\n\tconst fromGrave = from?.place === DuelPlace.Grave;\n\tconst fromAir = generatedPlaces.indexOf(from.place) >= 0;\n\n\tif (fromGround && toGround) {\n\t\treturn GroundMoves.Relocate;\n\t} else if (toGround) {\n\t\tif (fromAir) {\n\t\t\treturn GroundMoves.GenerateFromAir;\n\t\t} else if (fromDeck) {\n\t\t\tconsole.log('Card from Deck to Ground not supported yet!');\n\t\t} else if (fromGrave) {\n\t\t\t/* Should be from Grave, but not the air! */\n\t\t\treturn GroundMoves.GenerateFromAir;\n\t\t} else {\n\t\t\treturn GroundMoves.GenerateFromAir;\n\t\t}\n\t} else if (fromGround) {\n\t\treturn GroundMoves.Removal;\n\t} else {\n\t\tconsole.log('Generic move not (between non-ground) supported yet!');\n\t}\n\n\treturn GroundMoves.No;\n};\n","import type { Color, Node } from 'cc';\nimport { Label, tween, UIOpacity, Vec3 } from 'cc';\n\nimport { system } from '../util/system';\n\nexport const simpleMove = async (\n\tnode: Node,\n\tto: Vec3,\n\tduration = 0.2,\n): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\ttween(node)\n\t\t\t.to(duration, { position: to }, { easing: 'expoInOut' })\n\t\t\t.call(() => resolve())\n\t\t\t.start();\n\t});\n};\n\nexport const animateFade = async (\n\tnode: Node,\n\tto: number,\n\tduration = 2,\n): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\ttween(node.getComponent(UIOpacity))\n\t\t\t.to(duration, { opacity: to }, { easing: 'fade' })\n\t\t\t.call(() => resolve())\n\t\t\t.start();\n\t});\n};\n\nexport const animateSwapLabel = async (\n\tnode: Node,\n\ttoLabel: string,\n\ttoColor: Color,\n\tduration = 1,\n): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\ttween(node.getComponent(UIOpacity))\n\t\t\t.to(\n\t\t\t\tduration / 2,\n\t\t\t\t{ opacity: 0 },\n\t\t\t\t{\n\t\t\t\t\teasing: 'fade',\n\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\tconst label = node.getComponent(Label);\n\t\t\t\t\t\tlabel.string = toLabel;\n\t\t\t\t\t\tlabel.color = toColor; //Color.fromVec4(new Vec4(0, 0, 0, 1));\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t)\n\t\t\t.to(duration / 2, { opacity: 255 }, { easing: 'expoInOut' })\n\t\t\t.call(() => resolve())\n\t\t\t.start();\n\t});\n};\n\nexport const shakeGround = (strength = 5, volume = 5): void => {\n\tconst instance = tween(system.globalNodes.board.getChildByPath('Surface'));\n\n\tfor (let i = 0; i < volume; i += 1) {\n\t\tconst x = Math.random() * strength;\n\t\tconst y = Math.random() * strength;\n\n\t\tinstance.to(0, { position: new Vec3(x, y, 0) }).delay(0.08);\n\t}\n\n\tinstance.to(0.5, { position: new Vec3(0, 0, 0) }).start();\n};\n\nexport const animateSkillReady = (cardNode: Node): void => {\n\ttween(cardNode)\n\t\t.by(1, { position: new Vec3(0, 20, 0) }, { easing: 'expoOut' })\n\t\t.by(1, { position: new Vec3(0, -20, 0) }, { easing: 'expoOut' })\n\t\t.repeatForever()\n\t\t.start();\n};\n","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('internal.DebugViewRuntimeControl')\nexport class DebugViewRuntimeControl extends Component {\n    @property(Node)\n    compositeModeToggle: Node | null = null;\n    @property(Node)\n    singleModeToggle: Node | null = null;\n    @property(Node)\n    EnableAllCompositeModeButton: Node | null = null;\n\t_single: number = 0;\n\n    private strSingle: string[] = [\n        'No Single Debug',\n        'Vertex Color',\n        'Vertex Normal',\n        'Vertex Tangent',\n        'World Position',\n        'Vertex Mirror',\n        'Face Side',\n        'UV0',\n        'UV1',\n        'UV Lightmap',\n        'Project Depth',\n        'Linear Depth',\n\n        'Fragment Normal',\n        'Fragment Tangent',\n        'Fragment Binormal',\n        'Base Color',\n        'Diffuse Color',\n        'Specular Color',\n        'Transparency',\n        'Metallic',\n        'Roughness',\n        'Specular Intensity',\n        'IOR',\n\n        'Direct Diffuse',\n        'Direct Specular',\n        'Direct All',\n        'Env Diffuse',\n        'Env Specular',\n        'Env All',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Fresnel',\n        'Direct Transmit Diffuse',\n        'Direct Transmit Specular',\n        'Env Transmit Diffuse',\n        'Env Transmit Specular',\n        'Transmit All',\n        'Direct Internal Specular',\n        'Env Internal Specular',\n        'Internal All',\n\n        'Fog',\n    ];\n    private strComposite: string[] = [\n        'Direct Diffuse',\n        'Direct Specular',\n        'Env Diffuse',\n        'Env Specular',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Normal Map',\n        'Fog',\n\n        'Tone Mapping',\n        'Gamma Correction',\n\n        'Fresnel',\n        'Transmit Diffuse',\n        'Transmit Specular',\n        'Internal Specular',\n        'TT',\n    ];\n    private strMisc: string[] = [\n        'CSM Layer Coloration',\n        'Lighting With Albedo',\n    ];\n\n    private compositeModeToggleList: Node[] = [];\n    private singleModeToggleList: Node[] = [];\n    private miscModeToggleList: Node[] = [];\n    private textComponentList: RichText[] = [];\n    private labelComponentList: Label[] = [];\n    private textContentList: string[] = [];\n    private hideButtonLabel: Label;\n    start() {\n        // get canvas resolution\n        const canvas = this.node.parent.getComponent(Canvas);\n        if (!canvas) {\n            console.error('debug-view-runtime-control should be child of Canvas');\n            return;\n        }\n\n        const uiTransform = this.node.parent.getComponent(UITransform);\n        const halfScreenWidth = uiTransform.width * 0.5;\n        const halfScreenHeight = uiTransform.height * 0.5;\n\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\n        const width = 200, height = 20;\n\n        // new nodes\n        const miscNode = this.node.getChildByName('MiscMode');\n        const buttonNode = instantiate(miscNode);\n        buttonNode.parent = this.node;\n        buttonNode.name = 'Buttons';\n        const titleNode = instantiate(miscNode);\n        titleNode.parent = this.node;\n        titleNode.name = 'Titles';\n\n        // title\n        for (let i = 0; i < 2; i++) {\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\n            newLabel.setScale(0.75, 0.75, 0.75);\n            newLabel.parent = titleNode;\n            const labelComponent = newLabel.getComponent(Label);\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\n            labelComponent.color = Color.WHITE;\n            labelComponent.overflow = 0;\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        }\n\n        y -= height;\n        // single\n        let currentRow = 0;\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\n            if (i === this.strSingle.length >> 1) {\n                x += width;\n                currentRow = 0;\n            }\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\n            newNode.setPosition(x, y - height * currentRow, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.singleModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strSingle[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\n\n            this.singleModeToggleList[i] = newNode;\n        }\n\n        x += width;\n        // buttons\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\n        this.EnableAllCompositeModeButton.parent = buttonNode;\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\n        changeColorButton.setPosition(x + 90, y, 0.0);\n        changeColorButton.setScale(0.5, 0.5, 0.5);\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\n        changeColorButton.parent = buttonNode;\n        labelComponent = changeColorButton.getComponentInChildren(Label);\n        labelComponent.string = 'TextColor';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\n        HideButton.setPosition(x + 200, y, 0.0);\n        HideButton.setScale(0.5, 0.5, 0.5);\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\n        HideButton.parent = this.node.parent;\n        labelComponent = HideButton.getComponentInChildren(Label);\n        labelComponent.string = 'Hide UI';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        this.hideButtonLabel = labelComponent;\n\n        // misc\n        y -= 40;\n        for (let i = 0; i < this.strMisc.length; i++) {\n            const newNode = instantiate(this.compositeModeToggle);\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = miscNode;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strMisc[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            const toggleComponent = newNode.getComponent(Toggle);\n            toggleComponent.isChecked = i ? true : false;\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\n            this.miscModeToggleList[i] = newNode;\n        }\n\n        // composite\n        y -= 150;\n        for (let i = 0; i < this.strComposite.length; i++) {\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.compositeModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strComposite[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\n\n            this.compositeModeToggleList[i] = newNode;\n        }\n    }\n\n    isTextMatched(textUI, textDescription) : boolean {\n        let tempText = new String(textUI);\n        const findIndex = tempText.search('>');\n        if (findIndex === -1) {\n            return textUI === textDescription;\n        } else {\n            tempText = tempText.substr(findIndex + 1);\n            tempText = tempText.substr(0, tempText.search('<'));\n            return tempText === textDescription;\n        }\n    }\n    toggleSingleMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strSingle.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\n                debugView.singleMode = i;\n            }\n        }\n    }\n    toggleCompositeMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strComposite.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\n                debugView.enableCompositeMode(i, toggle.isChecked);\n            }\n        }\n    }\n    toggleLightingWithAlbedo(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.lightingWithAlbedo = toggle.isChecked;\n    }\n    toggleCSMColoration(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.csmLayerColoration = toggle.isChecked;\n    }\n    enableAllCompositeMode(button: Button) {\n        const debugView = director.root!.debugView;\n        debugView.enableAllCompositeMode(true);\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\n            toggleComponent.isChecked = true;\n        }\n\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\n        toggleComponent.isChecked = false;\n        debugView.csmLayerColoration = false;\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\n        toggleComponent.isChecked = true;\n        debugView.lightingWithAlbedo = true;\n    }\n    hideUI(button: Button) {\n        const titleNode = this.node.getChildByName('Titles');\n        const activeValue = !titleNode.active;\n        this.singleModeToggleList[0].parent.active = activeValue;\n        this.miscModeToggleList[0].parent.active = activeValue;\n        this.compositeModeToggleList[0].parent.active = activeValue;\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\n        titleNode.active = activeValue;\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\n    }\n\n    private _currentColorIndex = 0;\n    private strColor: string[] = [\n        '<color=#ffffff>',\n        '<color=#000000>',\n        '<color=#ff0000>',\n        '<color=#00ff00>',\n        '<color=#0000ff>',\n    ];\n    private color: Color[] = [\n        Color.WHITE,\n        Color.BLACK,\n        Color.RED,\n        Color.GREEN,\n        Color.BLUE,\n    ];\n    changeTextColor(button: Button) {\n        this._currentColorIndex++;\n        if (this._currentColorIndex >= this.strColor.length) {\n            this._currentColorIndex = 0;\n        }\n        for (let i = 0; i < this.textComponentList.length; i++) {\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\n        }\n        for (let i = 0; i < this.labelComponentList.length; i++) {\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\n        }\n    }\n\n    onLoad() {\n    }\n    update(deltaTime: number) {\n    }\n}\n","import type { DuelCommandBundle } from '@underrealm/murg';\nimport Engine from '@underrealm/murg';\nimport { instantiate } from 'cc';\n\nimport { CardManager } from '../CardManager';\nimport { animateDrawEnemyCard, animateDrawPlayerCard } from '../tween';\nimport { selectDeckNode } from '../util/helper';\nimport {\n\tgetCenterExpos,\n\tgetPositionExpos,\n\tgetRightExpos,\n} from '../util/layout';\nimport { system } from '../util/system';\n\nconst { selectHand } = Engine;\n\nexport const playDraw = async ({\n\tphaseOf,\n\tcommands,\n}: DuelCommandBundle): Promise<void> => {\n\tconst promises = [];\n\tconst hand = selectHand(system.duel, phaseOf);\n\tconst fromPosition = selectDeckNode(phaseOf).parent.getPosition();\n\tconst isMyPhase = system.playerIds.me === phaseOf;\n\tconst handPositions = isMyPhase\n\t\t? getPositionExpos(system.globalNodes.playerHandGuide, hand.length, 80)\n\t\t: getPositionExpos(system.globalNodes.enemyHandGuide, hand.length, 60);\n\tconst expoCreator = commands.length > 3 ? getCenterExpos : getRightExpos;\n\tconst expoPositions = expoCreator(commands.length);\n\n\tfor (let i = 0; i < commands.length; i += 1) {\n\t\tconst handIndex = hand.length - commands.length + i;\n\t\tconst cardId = hand[handIndex];\n\t\tconst handPosition = handPositions[handIndex];\n\t\tconst expoPosition = expoPositions[i];\n\t\tconst node = instantiate(system.globalNodes.cardTemplate);\n\n\t\tnode.getComponent(CardManager).setCardId(cardId);\n\t\tsystem.cardRefs[cardId] = node;\n\n\t\tif (phaseOf === system.playerIds.me) {\n\t\t\tnode.parent = system.globalNodes.playerHand;\n\t\t\tpromises.push(\n\t\t\t\tanimateDrawPlayerCard({\n\t\t\t\t\tnode,\n\t\t\t\t\tfrom: fromPosition,\n\t\t\t\t\tdest: handPosition,\n\t\t\t\t\texpoDest: expoPosition,\n\t\t\t\t\tdelay: i * 0.2,\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\tnode.parent = system.globalNodes.enemyHand;\n\t\t\tpromises.push(\n\t\t\t\tanimateDrawEnemyCard({\n\t\t\t\t\tnode,\n\t\t\t\t\tfrom: fromPosition,\n\t\t\t\t\tdest: handPosition,\n\t\t\t\t\tdelay: i * 0.2,\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tawait Promise.all(promises);\n};\n","import Engine from '@underrealm/murg';\nimport type { EventMouse } from 'cc';\nimport { _decorator, AudioSource, Component, Node, UIOpacity } from 'cc';\n\nimport { cardIdFromNode, getMyGround } from './util/helper';\nimport { getGroundExpos, getHandExpos } from './util/layout';\nimport { playBackgroundSound, playEffectSound } from './util/resources';\nimport { system } from './util/system';\nimport { CardManager } from './CardManager';\nimport { sendCardHover, sendCardSummon } from './network';\nimport { raiseHandCard, raiseHandPreview, simpleMove } from './tween';\nimport { UnitManager } from './UnitManager';\n\nconst { ccclass } = _decorator;\nconst NodeEvents = Node.EventType;\nconst { getFirstEmptyLeft, getFirstEmptyRight, selectGround, selectHand } =\n\tEngine;\n\n@ccclass('DuelManager')\nexport class DuelManager extends Component {\n\tpreviewingLeft = false;\n\tpreviewingRight = false;\n\n\tstart(): void {\n\t\tsystem.audioSource = this.node.getComponent(AudioSource);\n\t\tsystem.globalNodes.duel = this.node;\n\t\tsystem.globalNodes.cardPreview = this.node.getChildByPath('Card Preview');\n\t\tsystem.globalNodes.turnRibbon = this.node.getChildByPath('turnRibbon');\n\t\tsystem.globalNodes.duelRibbon = this.node.getChildByPath('duelRibbon');\n\n\t\tthis.node.on(NodeEvents.MOUSE_UP, this.onMouseUp.bind(this));\n\t\tthis.node.on(NodeEvents.MOUSE_MOVE, this.onMouseMove.bind(this));\n\n\t\tdocument\n\t\t\t?.getElementById('GameCanvas')\n\t\t\t.addEventListener('mouseout', this.onMouseOut.bind(this));\n\n\t\tplayBackgroundSound('bgm-dungeon-crawl', 0.3);\n\t}\n\n\tonUnitPreview(): void {\n\t\tconst previewNode = system.globalNodes.unitPreview;\n\t\tconst expoPositions = getGroundExpos(system.globalNodes.playerGroundGuide);\n\n\t\tpreviewNode\n\t\t\t.getComponent(UnitManager)\n\t\t\t.setCardId(cardIdFromNode(system.activeCard));\n\n\t\tif (this.previewingLeft) {\n\t\t\tconst myGround = selectGround(system.duel, system.playerIds.me);\n\t\t\tconst summonIndex = getFirstEmptyLeft(myGround);\n\t\t\tpreviewNode.setPosition(expoPositions[summonIndex]);\n\t\t} else if (this.previewingRight) {\n\t\t\tconst myGround = selectGround(system.duel, system.playerIds.me);\n\t\t\tconst summonIndex = getFirstEmptyRight(myGround);\n\t\t\tpreviewNode.setPosition(expoPositions[summonIndex]);\n\t\t} else {\n\t\t\tpreviewNode.setPosition(120, 680);\n\t\t}\n\t}\n\n\tonCardDrag(e: EventMouse): void {\n\t\tconst { x, y } = e.getUILocation();\n\t\tconst zonePosition = system.globalNodes.summonZoneGuide.getWorldPosition();\n\t\tsystem.activeCard?.setWorldPosition(x, y, 0);\n\n\t\tif (y > zonePosition.y) {\n\t\t\tif (x > zonePosition.x && !this.previewingRight) {\n\t\t\t\tthis.previewingLeft = false;\n\t\t\t\tthis.previewingRight = true;\n\t\t\t\tthis.onUnitPreview();\n\t\t\t} else if (x < zonePosition.x && !this.previewingLeft) {\n\t\t\t\tthis.previewingLeft = true;\n\t\t\t\tthis.previewingRight = false;\n\t\t\t\tthis.onUnitPreview();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.previewingLeft = false;\n\t\t\tthis.previewingRight = false;\n\t\t\tthis.onUnitPreview();\n\t\t}\n\t}\n\n\tonCardDrop(e: EventMouse): void {\n\t\tconst { x, y } = e.getUILocation();\n\t\tconst zonePosition = system.globalNodes.summonZoneGuide.getWorldPosition();\n\t\tconst cardId = cardIdFromNode(system.activeCard);\n\t\tconst hand = selectHand(system.duel, system.playerIds.me);\n\t\tconst indexInHand = hand.indexOf(cardId);\n\t\tconst expoPositions = getHandExpos(\n\t\t\tsystem.globalNodes.playerHandGuide,\n\t\t\thand.length,\n\t\t);\n\n\t\tif (y < zonePosition.y) {\n\t\t\tsimpleMove(system.activeCard, expoPositions[indexInHand]);\n\t\t} else {\n\t\t\tif (x > zonePosition.x) {\n\t\t\t\tsendCardSummon(cardId, getFirstEmptyRight(getMyGround()));\n\t\t\t} else {\n\t\t\t\tsendCardSummon(cardId, getFirstEmptyLeft(getMyGround()));\n\t\t\t}\n\t\t}\n\n\t\tsystem.globalNodes.unitPreview.setPosition(120, 680);\n\t}\n\n\tonMouseUp(e: EventMouse): void {\n\t\tif (system.dragging) {\n\t\t\tthis.onCardDrop(e);\n\t\t}\n\n\t\tsystem.dragging = false;\n\t\tsystem.activeCard = null;\n\t}\n\n\tonMouseMove(e: EventMouse): void {\n\t\tif (system.winner || system.duel.firstMover.length === 0) return;\n\n\t\tif (system.dragging && system.activeCard) {\n\t\t\tthis.onCardDrag(e);\n\t\t} else if (system.duel && system.playerIds) {\n\t\t\tconst handCardIds = selectHand(system.duel, system.playerIds.me);\n\t\t\tconst handPosition =\n\t\t\t\tsystem.globalNodes.playerHandGuide.getWorldPosition();\n\t\t\tconst mousePosition = e.getUILocation();\n\t\t\tlet chosen: { node: Node; distance: number; cardId: string };\n\n\t\t\t/* <- Mouse moving near player Hand area */\n\t\t\tif (mousePosition.y < handPosition.y + 106) {\n\t\t\t\tfor (let i = 0; i < handCardIds.length; i += 1) {\n\t\t\t\t\tconst cardId = handCardIds[i];\n\t\t\t\t\tconst card = system.cardRefs[cardId];\n\t\t\t\t\tif (card) {\n\t\t\t\t\t\tconst cardPosition = card.getWorldPosition();\n\t\t\t\t\t\tif (cardPosition.y < handPosition.y + 10) {\n\t\t\t\t\t\t\tconst distance = Math.abs(mousePosition.x - cardPosition.x);\n\t\t\t\t\t\t\tif (distance < (chosen?.distance || 70)) {\n\t\t\t\t\t\t\t\tchosen = { node: card, cardId, distance };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (chosen) {\n\t\t\t\tif (chosen.node.uuid !== system.activeCard?.uuid) {\n\t\t\t\t\tif (system.activeCard) {\n\t\t\t\t\t\tthis.onCardLeave(system.activeCard);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.onCardHover(chosen.node, chosen.cardId);\n\t\t\t\t\tsystem.activeCard = chosen.node;\n\t\t\t\t}\n\t\t\t} else if (system.activeCard) {\n\t\t\t\tthis.onCardLeave(system.activeCard);\n\t\t\t\tsystem.activeCard = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tonMouseOut(): void {\n\t\tif (system.dragging) {\n\t\t\tsystem.activeCard?.setPosition(9999, 9999, 0);\n\t\t} else if (system.activeCard) {\n\t\t\tthis.onCardLeave(system.activeCard);\n\t\t\tsystem.activeCard = null;\n\t\t}\n\t}\n\n\tonCardHover(node: Node, cardId: string): void {\n\t\tconst isActive = node.getChildByPath('glow').active;\n\t\tconst glowNode = system.globalNodes.cardPreview.getChildByPath('Card/glow');\n\t\tconst cardNode = system.globalNodes.cardPreview.getChildByPath('Card');\n\n\t\tglowNode.active = isActive;\n\t\tcardNode.getComponent(CardManager).setCardId(cardId.substring(0, 9));\n\t\tsystem.globalNodes.cardPreview.setPosition(node.position.x, -180);\n\t\tplayEffectSound('hand-slide', 0.2);\n\t\traiseHandCard(node, 100);\n\t\traiseHandPreview(system.globalNodes.cardPreview);\n\t\tsendCardHover(cardId, true);\n\t\tnode.getComponent(UIOpacity).opacity = 20;\n\t}\n\n\tonCardLeave(node: Node): void {\n\t\tsystem.globalNodes.cardPreview.setPosition(190, 740);\n\t\traiseHandCard(node, 0);\n\t\tsendCardHover(cardIdFromNode(node), false);\n\t\tnode.getComponent(UIOpacity).opacity = 255;\n\t}\n}\n","import { _decorator, Button, Component, Node, sys } from 'cc';\n\nimport { setCursor } from './util/helper';\nimport { system } from './util/system';\n\nconst { ccclass } = _decorator;\n\nconst NodeEvents = Node.EventType;\nconst ButtonEvents = Button.EventType;\n\n@ccclass('DuelRibbonController')\nexport class DuelRibbonController extends Component {\n\tlobbyButton: Node;\n\tshareButton: Node;\n\n\tstart(): void {\n\t\tthis.lobbyButton = this.node.getChildByPath('Button');\n\t\tthis.shareButton = this.node.getChildByPath('ButtonShare');\n\n\t\tthis.lobbyButton.on(NodeEvents.MOUSE_ENTER, this.onMouseEnter.bind(this));\n\t\tthis.shareButton.on(NodeEvents.MOUSE_ENTER, this.onMouseEnter.bind(this));\n\t\tthis.lobbyButton.on(NodeEvents.MOUSE_LEAVE, this.onMouseLeave.bind(this));\n\t\tthis.lobbyButton.on(ButtonEvents.CLICK, this.onLobbyClick.bind(this));\n\n\t\tthis.shareButton.on(ButtonEvents.CLICK, this.onShareToX.bind(this, true));\n\t}\n\n\tonMouseEnter(): void {\n\t\tsetCursor('pointer');\n\t}\n\n\tonMouseLeave(): void {\n\t\tsetCursor('auto');\n\t}\n\n\tonLobbyClick(): void {\n\t\tif (sys.isBrowser) {\n\t\t\tlocation.href = `${location.origin}/game`;\n\t\t}\n\t}\n\n\tonShareToX(): void {\n\t\tif (sys.isBrowser) {\n\t\t\tconst isWin = system.winner === system.playerIds.me;\n\n\t\t\tconst text = encodeURIComponent(\n\t\t\t\t'Just earned my glory in battle from this high-stake Solana Trading Card Game, Under Realm  @playunderrealm. Join the Alliance to compete for top rank and earn $U',\n\t\t\t);\n\n\t\t\tconst url = encodeURIComponent(\n\t\t\t\t`https://x.com/PlayUnderRealm/status/${isWin ? '1840673998012858631' : '1840674001942950110'}/photo/1`,\n\t\t\t);\n\n\t\t\tconst twitterShareUrl = `https://twitter.com/intent/tweet?text=${text}&url=${url}`;\n\n\t\t\twindow.open(twitterShareUrl, '_blank');\n\t\t}\n\t}\n}\n","import { Component, tween, Vec3, _decorator } from \"cc\";\r\nimport TextMeshPro from \"./TextMeshPro\";\r\nimport TmpUtils from \"./utils/TmpUtils\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass\r\nexport default class Example1 extends Component {\r\n\r\n    @property(TextMeshPro)\r\n    text1: TextMeshPro = null;\r\n\r\n    @property(TextMeshPro)\r\n    text2: TextMeshPro = null;\r\n\r\n    @property(TextMeshPro)\r\n    text3: TextMeshPro = null;\r\n\r\n    protected start(): void {\r\n        this.anim1();\r\n        this.anim3();\r\n\r\n        this.scheduleOnce(() => {\r\n            for (let i = 0; i < this.text2.string.length; i++) {\r\n                let result: Vec3[] = this.text2.getPosVertices(i);\r\n                this._initPos.push(result);\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        this._time += dt;\r\n        this.anim2();\r\n    }\r\n\r\n    private _time = 0;\r\n    public _fScale: number = 1;\r\n    public _xOffset: number = 0;\r\n    private async anim1(): Promise<void> {\r\n        await TmpUtils.waitCmpt(this, 1);\r\n        this.text1.string = \"这 是 一 段 测 试 文 字aaagghjsa;dzxmc;\";\r\n        this.text1.updateRenderData(true);\r\n        for (let i = 0; i < this.text1.string.length; i++) {\r\n            this.text1.setVisible(i, false);\r\n        }\r\n        for (let i = 0; i < this.text1.string.length; i++) {\r\n            this.text1.setVisible(i, true);\r\n            if (!this.text1.isVisible(i)) {\r\n                continue;\r\n            }\r\n            let result: Vec3[] = this.text1.getPosVertices(i);\r\n            let center = new Vec3();\r\n            center.x = (result[0].x + result[1].x + result[2].x + result[3].x) / 4;\r\n            center.y = (result[0].y + result[1].y + result[2].y + result[3].y) / 4;\r\n            this._xOffset = -30;\r\n\r\n            let updateCall = () => {\r\n                let copy: Vec3[] = [];\r\n                copy.push(result[0].clone());\r\n                copy.push(result[1].clone());\r\n                copy.push(result[2].clone());\r\n                copy.push(result[3].clone());\r\n                for (let j = 0; j < 4; j++) {\r\n                    let delta: Vec3 = new Vec3();\r\n                    Vec3.subtract(delta, copy[j], center);\r\n                    delta.multiplyScalar(this._fScale).add(new Vec3(this._xOffset, 0));\r\n                    Vec3.add(copy[j], center, delta);\r\n                }\r\n                this.text1.setPosVertices(i, copy as any);\r\n            }\r\n\r\n            tween<Example1>(this)\r\n                .to(0.05, { _fScale: 2, _xOffset: -15 }, { onUpdate: updateCall })\r\n                .to(0.05, { _fScale: 1, _xOffset: 0 }, { onUpdate: updateCall })\r\n                .start();\r\n            await TmpUtils.waitCmpt(this, 0.1);\r\n        }\r\n    }\r\n\r\n    private _initPos: Vec3[][] = [];\r\n    private anim2(): void {\r\n        if (this._initPos.length <= 0) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.text2.string.length; i++) {\r\n            if (!this.text2.isVisible(i)) {\r\n                continue;\r\n            }\r\n            let result = [];\r\n            for (let j = 0; j < 4; j++) {\r\n                result.push(this._initPos[i][j].clone());\r\n                result[j].y += Math.sin(0.5 * i + this._time * 5) * 10;\r\n            }\r\n            this.text2.setPosVertices(i, result as any);\r\n        }\r\n    }\r\n\r\n    public alpha: number = 0;\r\n    private async anim3(): Promise<void> {\r\n        await TmpUtils.waitCmpt(this, 1);\r\n        this.text3.string = \"这 是 一 段 测 试 文 字aaagghjsa;dzxmc;\";\r\n        this.text3.updateRenderData(true);\r\n        for (let i = 0; i < this.text3.string.length; i++) {\r\n            this.text3.setVisible(i, false);\r\n        }\r\n        let time = 0.1;\r\n        for (let i = 0; i < this.text3.string.length; i++) {\r\n            this.text3.setVisible(i, true);\r\n            if (!this.text3.isVisible(i)) {\r\n                continue;\r\n            }\r\n            this.text3.setVisible(i, false);\r\n            let result = this.text3.getColorExtraVertices(i);\r\n            this.alpha = 0;\r\n            tween<Example1>(this)\r\n                .to(time / 2, { alpha: 255 }, {\r\n                    onUpdate: () => {\r\n                        result[0].a = this.alpha;\r\n                        result[2].a = this.alpha;\r\n                        this.text3.setColorExtraVertices(i, result);\r\n                    }\r\n                })\r\n                .call(() => {\r\n                    this.alpha = 0;\r\n                })\r\n                .to(time / 2, { alpha: 255 }, {\r\n                    onUpdate: () => {\r\n                        result[1].a = this.alpha;\r\n                        result[3].a = this.alpha;\r\n                        this.text3.setColorExtraVertices(i, result);\r\n                    }\r\n                })\r\n                .start();\r\n\r\n            await TmpUtils.waitCmpt(this, time);\r\n        }\r\n    }\r\n}\r\n","import type { Node } from 'cc';\nimport { Animation, Quat, tween, Vec3 } from 'cc';\n\nimport { updatePlayers, updateUnit } from '../util/attribute';\nimport { instantiatePrefab, playEffectSound } from '../util/resources';\nimport { system } from '../util/system';\n\nimport { shakeGround } from './common';\n\nexport const animateCardAttack = async (\n\tcardId: string,\n\tisDeath: boolean,\n\tindex: number,\n): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\tconst node = system.cardRefs[cardId];\n\t\tif (!node) return resolve();\n\n\t\tlet flipped = false;\n\t\tconst from = node.getPosition();\n\t\tconst backFace = node.getChildByPath('back');\n\t\tconst isMovingUp = from.y < 0;\n\t\tconst fastSeed = 12;\n\t\tconst fastDelta = isMovingUp ? -fastSeed : fastSeed;\n\t\tconst r1 = Quat.fromEuler(new Quat(), 0, 180, 0);\n\t\tconst r2 = Quat.fromEuler(new Quat(), 0, 0, 0);\n\n\t\tconst translate = tween(node)\n\t\t\t.to(\n\t\t\t\t1,\n\t\t\t\t{ position: new Vec3(from.x, from.y + fastDelta, 0) },\n\t\t\t\t{ easing: 'backOut' },\n\t\t\t)\n\t\t\t.to(0.2, { position: new Vec3(from.x, 0, 0) }, { easing: 'expoOut' })\n\t\t\t.call(() => {\n\t\t\t\tupdateUnit(cardId);\n\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tplayEffectSound('attack', 1);\n\t\t\t\t\tshakeGround(10, 5);\n\t\t\t\t\tupdatePlayers();\n\t\t\t\t}\n\n\t\t\t\tinstantiatePrefab('prefabs/HitEffect').then((hit) => {\n\t\t\t\t\tif (!hit) {\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t'instantiatePrefab prefabs/HitEffect return undefined',\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\thit.parent = node;\n\t\t\t\t\thit.setScale(new Vec3(5, 5, 1));\n\t\t\t\t\tconst animation = hit.getComponent(Animation);\n\n\t\t\t\t\tanimation.play('flip');\n\t\t\t\t\tanimation.on(Animation.EventType.FINISHED, () => {\n\t\t\t\t\t\thit.destroy();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.to(0.5, { position: from }, { easing: 'expoOut' });\n\n\t\tconst rotate = backFace?.active\n\t\t\t? tween(node)\n\t\t\t\t\t.set({ rotation: r1 })\n\t\t\t\t\t.to(\n\t\t\t\t\t\t1,\n\t\t\t\t\t\t{ rotation: r2 },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\teasing: 'expoOut',\n\t\t\t\t\t\t\tonUpdate: (node: Node) => {\n\t\t\t\t\t\t\t\tif (flipped) return;\n\t\t\t\t\t\t\t\tconst angle = new Vec3(0, 0, 0);\n\t\t\t\t\t\t\t\tnode.rotation.getEulerAngles(angle);\n\n\t\t\t\t\t\t\t\tif (angle.y < 90) {\n\t\t\t\t\t\t\t\t\tnode.getChildByPath('front').active = true;\n\t\t\t\t\t\t\t\t\tbackFace.active = false;\n\t\t\t\t\t\t\t\t\tflipped = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t: tween(node).delay(1);\n\n\t\tif (isDeath) {\n\t\t\tconst randomOffset = Math.random() * 1280 - 640;\n\n\t\t\tnode.parent = system.globalNodes.playerHand;\n\t\t\ttranslate\n\t\t\t\t.to(\n\t\t\t\t\t0.5,\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: new Vec3(randomOffset, from.y > 0 ? 600 : -600, 0),\n\t\t\t\t\t\tscale: new Vec3(0.6, 0.6, 1),\n\t\t\t\t\t},\n\t\t\t\t\t{ easing: 'expoIn' },\n\t\t\t\t)\n\t\t\t\t.call(() => {\n\t\t\t\t\tplayEffectSound('death', 0.5);\n\t\t\t\t\tnode.destroy();\n\t\t\t\t});\n\t\t} else {\n\t\t\ttranslate.to(0.5, { position: from }, { easing: 'backOut' });\n\t\t}\n\n\t\ttween(node).parallel(translate, rotate).call(resolve).start();\n\t});\n};\n\nexport const animateRelocate = async (node: Node, to: Vec3): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\ttween(node)\n\t\t\t.to(0.2, { position: to }, { easing: 'expoOut' })\n\t\t\t.call(() => {\n\t\t\t\tplayEffectSound('light-fire', 0.5);\n\t\t\t\tresolve();\n\t\t\t})\n\t\t\t.start();\n\t});\n};\n","import type { DuelCommandBundle } from '@underrealm/murg';\nimport Engine from '@underrealm/murg';\nimport lodash from 'lodash';\n\nimport { animateCardAttack } from '../tween';\nimport { extractGroundMove, GroundMoves } from '../util/command';\n\nconst { CommandSourceType } = Engine;\n\nexport const playFight = async ({\n\tcommands,\n}: DuelCommandBundle): Promise<void> => {\n\tconst combatTweens = [];\n\tconst unitCommands = commands.filter(filterUnitSourced);\n\tconst deathIds = commands.filter(filterRemoval).map((i) => i.target.from?.id);\n\n\tlodash\n\t\t.uniqBy(unitCommands, (i) => i.target?.source?.id)\n\t\t.forEach(({ target }, i) => {\n\t\t\tconst fromCardId = target.source.id;\n\t\t\tconst isDeath = deathIds.findIndex((i) => i === fromCardId) >= 0;\n\n\t\t\tcombatTweens.push(animateCardAttack(fromCardId, isDeath, i));\n\t\t});\n\n\tawait Promise.all(combatTweens);\n};\n\nconst filterUnitSourced = (i) => {\n\treturn i.target?.source?.type === CommandSourceType.Unit;\n};\n\nconst filterRemoval = (i) => {\n\treturn extractGroundMove(i) === GroundMoves.Removal;\n};\n","import type { DuelCommandBundle } from '@underrealm/murg';\nimport Engine from '@underrealm/murg';\nimport { instantiate } from 'cc';\n\nimport {\n\tanimateAirSummon,\n\tanimateGroundRemoval,\n\tanimateRelocate,\n\tanimateUnitRaise,\n} from '../tween';\nimport { UnitManager } from '../UnitManager';\nimport { extractGroundMove, GroundMoves } from '../util/command';\nimport { selectGroundGuide, selectGroundNode } from '../util/helper';\nimport { getGroundExpos } from '../util/layout';\nimport { system } from '../util/system';\n\nconst { CommandSourceType } = Engine;\n\nconst skillSources = [\n\tCommandSourceType.InspiredSkill,\n\tCommandSourceType.PostFightSkill,\n\tCommandSourceType.PreFightSkill,\n];\n\nexport const playGeneric = async ({\n\tcommands,\n}: DuelCommandBundle): Promise<void> => {\n\tfor (let i = 0; i < commands.length; i += 1) {\n\t\tconst command = commands[i];\n\t\tconst isSkillCasting =\n\t\t\tskillSources.indexOf(command.target?.source?.type) >= 0;\n\t\tconst groundMove = extractGroundMove(command);\n\n\t\tif (isSkillCasting) {\n\t\t\tconst node = system.cardRefs[command.target.source.id];\n\t\t\tif (node) await animateUnitRaise(node);\n\t\t}\n\n\t\tif (groundMove === GroundMoves.Removal) {\n\t\t\tconst node = system.cardRefs[command.target.from.id];\n\t\t\tif (node) await animateGroundRemoval(node);\n\t\t} else if (groundMove === GroundMoves.GenerateFromAir) {\n\t\t\tconst cardId = command.target.from.id;\n\t\t\tconst unitNode = instantiate(system.globalNodes.unitTemplate);\n\t\t\tconst expos = getGroundExpos(selectGroundGuide(command.target.to.owner));\n\n\t\t\tunitNode.getComponent(UnitManager).setCardId(cardId);\n\t\t\tunitNode.parent = selectGroundNode(command.target.to.owner);\n\t\t\tsystem.cardRefs[cardId] = unitNode;\n\n\t\t\tawait animateAirSummon(unitNode, expos[command.target.to.index]);\n\t\t} else if (groundMove === GroundMoves.Relocate) {\n\t\t\tconst node = system.cardRefs[command.target.from.id];\n\n\t\t\tif (node) {\n\t\t\t\tconst owner = command.target.to.owner;\n\t\t\t\tconst isMine = owner === system.playerIds.me;\n\t\t\t\tconst groundGuide = isMine\n\t\t\t\t\t? system.globalNodes.playerGroundGuide\n\t\t\t\t\t: system.globalNodes.enemyGroundGuide;\n\t\t\t\tconst expos = getGroundExpos(groundGuide);\n\n\t\t\t\tawait animateRelocate(node, expos[command.target.to.index]);\n\t\t\t}\n\t\t}\n\t}\n};\n","import type { Node } from 'cc';\nimport { tween, Vec3 } from 'cc';\n\nimport { playEffectSound } from '../util/resources';\nimport { system } from '../util/system';\n\nexport const animateGroundRemoval = (node: Node): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\tconst from = node.getPosition();\n\t\tconst randomOffset = Math.random() * 1280 - 640;\n\n\t\tnode.parent = system.globalNodes.playerHand;\n\t\ttween(node)\n\t\t\t.to(\n\t\t\t\t0.5,\n\t\t\t\t{\n\t\t\t\t\tposition: new Vec3(randomOffset, from.y > 0 ? 600 : -600, 0),\n\t\t\t\t\tscale: new Vec3(0.6, 0.6, 1),\n\t\t\t\t},\n\t\t\t\t{ easing: 'expoIn' },\n\t\t\t)\n\t\t\t.call(() => {\n\t\t\t\tplayEffectSound('death', 0.5);\n\t\t\t\tnode.destroy();\n\t\t\t\tresolve();\n\t\t\t})\n\t\t\t.start();\n\t});\n};\n\nexport const animateUnitRaise = (node: Node): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\tconst unitPosition = node.getPosition();\n\t\tconst distance = unitPosition.y > 0 ? -20 : 20;\n\n\t\ttween(node)\n\t\t\t.by(0.25, { position: new Vec3(0, distance, 0) }, { easing: 'expoOut' })\n\t\t\t.delay(0.5)\n\t\t\t.call(resolve)\n\t\t\t.by(0.25, { position: new Vec3(0, -distance, 0) }, { easing: 'expoOut' })\n\t\t\t.start();\n\t});\n};\n","import type { DuelCommandBundle } from '@underrealm/murg';\nimport Engine from '@underrealm/murg';\n\nimport { fastReplay, minimumReplicateStep, replay } from '../replay';\nimport { raiseHandCard, showEndGameRibbon } from '../tween';\nimport { extractPlayerIds } from '../util/helper';\nimport { system } from '../util/system';\nimport type { GameDuel } from '../util/types';\n\nimport { mergeRemoteHistory } from './util';\n\nconst { selectHand, getInitialState, mergeFragmentToState } = Engine;\n\ninterface ConnectPayload {\n\tduel: GameDuel;\n}\n\nexport const connect = (\n\t{ duel }: ConnectPayload,\n\tisMyCommand: boolean,\n): void => {\n\tif (system.winner || !isMyCommand) return;\n\n\tconst { config, history } = duel;\n\tconst state = getInitialState(config);\n\n\tmergeFragmentToState(system.duel, state);\n\tsystem.playerIds = extractPlayerIds(config, system.userId);\n\tsystem.globalNodes.board?.emit('stateReady');\n\n\tmergeRemoteHistory(history, 0);\n\tsetTimeout(\n\t\t() =>\n\t\t\tsystem.history.length > minimumReplicateStep ? fastReplay() : replay(),\n\t\t200,\n\t);\n};\n\nexport interface IncomingBundles {\n\tlevel: number;\n\tbundles: DuelCommandBundle[];\n}\n\nexport const incomingBundles = ({ level, bundles }: IncomingBundles): void => {\n\tif (system.winner) return;\n\n\tmergeRemoteHistory(bundles, level);\n\treplay();\n};\n\ninterface GameOver {\n\twinner: string;\n\twinnerPoints: number;\n\tloserPoints: number;\n}\n\nexport const gameOver = ({\n\twinner,\n\twinnerPoints,\n\tloserPoints,\n}: GameOver): void => {\n\tif (system.winner) return;\n\tsystem.winner = winner;\n\n\tconst isVictory = system.playerIds.me === winner;\n\tconst claimedPoints = isVictory ? winnerPoints : loserPoints;\n\n\tshowEndGameRibbon(isVictory, claimedPoints);\n};\n\ninterface CardHover {\n\tindex: number;\n\tisMouseIn: boolean;\n}\n\nexport const cardHover = ({ index, isMouseIn }: CardHover): void => {\n\tconst hand = selectHand(system.duel, system.playerIds.enemy);\n\n\tfor (let i = 0; i < hand.length; i += 1) {\n\t\tconst cardNode = system.cardRefs[hand[i]];\n\n\t\tif (cardNode) {\n\t\t\tconst dest = i === index && isMouseIn ? 60 : 0;\n\t\t\traiseHandCard(cardNode, dest, 0.1, 'back');\n\t\t}\n\t}\n};\n","import type { DuelConfig, DuelState, TemplateFragment } from '@underrealm/murg';\nimport Engine from '@underrealm/murg';\nimport type { Node } from 'cc';\nimport { Color, Vec2, Vec3 } from 'cc';\n\nimport { CardManager } from '../CardManager';\n\nimport { system } from './system';\nimport type { PlayerIds } from './types';\n\nconst { ElementalType, ClassType, selectHand, selectGround } = Engine;\n\nexport const extractPlayerIds = (duel: DuelConfig, myId: string): PlayerIds => {\n\tif (myId === duel.firstPlayer.id) {\n\t\treturn {\n\t\t\tme: duel.firstPlayer.id,\n\t\t\tenemy: duel.secondPlayer.id,\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tme: duel.secondPlayer.id,\n\t\t\tenemy: duel.firstPlayer.id,\n\t\t};\n\t}\n};\n\nexport const cardIdFromNode = (node: Node): string => {\n\treturn node.getComponent(CardManager)?.cardId;\n};\n\nexport const delay = (milliSeconds = 0): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve();\n\t\t}, milliSeconds);\n\t});\n};\n\nexport const getVisualUri = (cardId: string): string => {\n\treturn `graphic/visuals/${cardId.substring(0, 5)}/spriteFrame`;\n};\n\nexport const getFoilUri = (cardId: string, suffix = ''): string => {\n\tconst elemental = cardId.substring(7, 9);\n\n\tswitch (elemental) {\n\t\tcase ElementalType.Metal:\n\t\t\treturn `graphic/cards/foil-metal${suffix}/spriteFrame`;\n\t\tcase ElementalType.Wood:\n\t\t\treturn `graphic/cards/foil-wood${suffix}/spriteFrame`;\n\t\tcase ElementalType.Water:\n\t\t\treturn `graphic/cards/foil-water${suffix}/spriteFrame`;\n\t\tcase ElementalType.Fire:\n\t\t\treturn `graphic/cards/foil-fire${suffix}/spriteFrame`;\n\t\tcase ElementalType.Earth:\n\t\t\treturn `graphic/cards/foil-earth${suffix}/spriteFrame`;\n\t\tcase ElementalType.Dark:\n\t\t\treturn `graphic/cards/foil-dark${suffix}/spriteFrame`;\n\t\tcase ElementalType.Light:\n\t\t\treturn `graphic/cards/foil-light${suffix}/spriteFrame`;\n\t\tdefault:\n\t\t\treturn `graphic/cards/foil-metal${suffix}/spriteFrame`;\n\t}\n};\n\nexport const getClassUri = (classId: string): string => {\n\tswitch (classId) {\n\t\tcase ClassType.Knight:\n\t\t\treturn `graphic/cards/class-tank/spriteFrame`;\n\t\tcase ClassType.Wizard:\n\t\t\treturn `graphic/cards/class-wizard/spriteFrame`;\n\t\tcase ClassType.Assassin:\n\t\t\treturn `graphic/cards/class-assassin/spriteFrame`;\n\t\tcase ClassType.Summoner:\n\t\t\treturn `graphic/cards/class-summoner/spriteFrame`;\n\t\tdefault:\n\t\t\treturn `graphic/cards/class-tank/spriteFrame`;\n\t}\n};\n\ntype SkillColors = 'black' | 'green' | 'blue' | 'red' | 'magenta';\n\nconst colorMap: Record<SkillColors, string> = {\n\tblack: '#000000',\n\tgreen: '#066922',\n\tblue: '#1055BC',\n\tred: '#AA1D21',\n\tmagenta: '#6e13a4',\n};\n\nexport const getSkillDesc = (fragments: TemplateFragment[]): string => {\n\tconst inner = fragments\n\t\t.map((fragment) => {\n\t\t\tif (fragment.style) {\n\t\t\t\tconst color = colorMap[fragment.style.color] || '#111111';\n\t\t\t\treturn `<color=${color}>${fragment.text}</color>`;\n\t\t\t}\n\n\t\t\treturn fragment.text;\n\t\t})\n\t\t.join('');\n\n\treturn `<color=#222222>${inner}</color>`;\n};\n\nexport const setCursor = (cursor: string): void => {\n\tconst canvas = document?.getElementById?.('GameCanvas');\n\tif (!canvas) return;\n\tcanvas.style.cursor = cursor;\n};\n\nexport const designScreenSize = new Vec2(1280, 720);\n\nexport const extractMouseLocation = ({ x, y }: Vec2): Vec3 => {\n\treturn new Vec3(x - designScreenSize.x / 2, y - designScreenSize.y / 2, 0);\n};\n\nexport const getGroundSize = (): number => {\n\treturn system.duel.setting?.groundSize;\n};\n\nexport const selectDeckNode = (owner: string): Node => {\n\treturn system.playerIds.me === owner\n\t\t? system.globalNodes.playerDeck\n\t\t: system.globalNodes.enemyDeck;\n};\n\nexport const selectGroundNode = (owner: string): Node => {\n\treturn system.playerIds.me === owner\n\t\t? system.globalNodes.playerGround\n\t\t: system.globalNodes.enemyGround;\n};\n\nexport const selectGroundGuide = (owner: string): Node => {\n\treturn system.playerIds.me === owner\n\t\t? system.globalNodes.playerGroundGuide\n\t\t: system.globalNodes.enemyGroundGuide;\n};\n\nexport const selectHandNode = (owner: string): Node => {\n\treturn system.playerIds.me === owner\n\t\t? system.globalNodes.playerHand\n\t\t: system.globalNodes.enemyHand;\n};\n\nexport const selectHandGuide = (owner: string): Node => {\n\treturn system.playerIds.me === owner\n\t\t? system.globalNodes.playerHandGuide\n\t\t: system.globalNodes.enemyHandGuide;\n};\n\nexport const getHandSize = (owner: string): number => {\n\treturn selectHand(system.duel, owner)?.length;\n};\n\nexport const getMyHandSize = (): number => {\n\treturn getHandSize(system.playerIds.me);\n};\n\nexport const getMyGround = (): string[] => {\n\treturn selectGround(system.duel, system.playerIds.me);\n};\n\nconst positiveColor = Color.fromHEX(new Color(), '#1aab1a');\nconst negativeColor = Color.fromHEX(new Color(), '#FF0000');\n\nexport const getPositiveColor = (value: number, origin = 0): Color => {\n\tif (value > origin) {\n\t\treturn positiveColor;\n\t} else if (value < origin) {\n\t\treturn negativeColor;\n\t}\n\n\treturn Color.fromHEX(new Color(), '#FFFFFF');\n};\n\nexport const getInjectedCardId = (duel: DuelState, id: string): string => {\n\tif (id.indexOf('#') >= 0) return id;\n\n\treturn `${id}#${duel.uniqueCardCount}`;\n};\n","const eventRegx = /^(click)(\\s)*=|(param)(\\s)*=/;\r\nconst imageAttrReg = /(\\s)*src(\\s)*=|(\\s)*height(\\s)*=|(\\s)*width(\\s)*=|(\\s)*align(\\s)*=|(\\s)*offset(\\s)*=|(\\s)*click(\\s)*=|(\\s)*param(\\s)*=/;\r\n\r\nexport interface IHtmlTextParserResultObj {\r\n    text?: string;\r\n    style?: IHtmlTextParserStack;\r\n}\r\n\r\nexport interface IHtmlTextParserStack {\r\n    color?: string;\r\n    size?: number;\r\n    event?: { [k: string]: string };\r\n    isNewLine?: boolean;\r\n    isImage?: boolean;\r\n    src?: string;\r\n    imageWidth?: number;\r\n    imageHeight?: number;\r\n    imageOffset?: string;\r\n    imageAlign?: string;\r\n    underline?: boolean;\r\n    strikethrough?: boolean;\r\n    offset?: number;\r\n    italic?: boolean;\r\n    bold?: boolean;\r\n    colorGradient?: { lb: string; rb: string; lt: string; rt: string; };\r\n    face?: { color: string; dilate: number; softness: number; };\r\n    outline?: { color: string, thickness: number };\r\n    underlay?: { color: string; x: number; y: number; dilate: number; softness: number; };\r\n    glow?: { color: string; offset: number; inner: number; outer: number; power: number; };\r\n}\r\n\r\n/**\r\n * A utils class for parsing HTML texts. The parsed results will be an object array.\r\n */\r\nexport class HtmlTextParser {\r\n    private _specialSymbolArray: Array<[RegExp, string]> = [];\r\n    private _stack: IHtmlTextParserStack[] = [];\r\n    private _resultObjectArray: IHtmlTextParserResultObj[] = [];\r\n\r\n    constructor() {\r\n        this._specialSymbolArray.push([/&lt;/g, '<']);\r\n        this._specialSymbolArray.push([/&gt;/g, '>']);\r\n        this._specialSymbolArray.push([/&amp;/g, '&']);\r\n        this._specialSymbolArray.push([/&quot;/g, '\"']);\r\n        this._specialSymbolArray.push([/&apos;/g, '\\'']);\r\n        this._specialSymbolArray.push([/&nbsp;/g, ' ']);\r\n    }\r\n\r\n    public parse(htmlString: string) {\r\n        this._resultObjectArray.length = 0;\r\n        this._stack.length = 0;\r\n\r\n        let startIndex = 0;\r\n        const length = htmlString.length;\r\n        while (startIndex < length) {\r\n            let tagEndIndex = htmlString.indexOf('>', startIndex);\r\n            let tagBeginIndex = -1;\r\n            if (tagEndIndex >= 0) {\r\n                tagBeginIndex = htmlString.lastIndexOf('<', tagEndIndex);\r\n                const noTagBegin = tagBeginIndex < (startIndex - 1);\r\n\r\n                if (noTagBegin) {\r\n                    tagBeginIndex = htmlString.indexOf('<', tagEndIndex + 1);\r\n                    tagEndIndex = htmlString.indexOf('>', tagBeginIndex + 1);\r\n                }\r\n            }\r\n            if (tagBeginIndex < 0) {\r\n                this._stack.pop();\r\n                this._processResult(htmlString.substring(startIndex));\r\n                startIndex = length;\r\n            } else {\r\n                let newStr = htmlString.substring(startIndex, tagBeginIndex);\r\n                const tagStr = htmlString.substring(tagBeginIndex + 1, tagEndIndex);\r\n                if (tagStr === '') newStr = htmlString.substring(startIndex, tagEndIndex + 1);\r\n                this._processResult(newStr);\r\n                if (tagEndIndex === -1) {\r\n                    // cc.error('The HTML tag is invalid!');\r\n                    tagEndIndex = tagBeginIndex;\r\n                } else if (htmlString.charAt(tagBeginIndex + 1) === '/') {\r\n                    this._stack.pop();\r\n                } else {\r\n                    this._addToStack(tagStr);\r\n                }\r\n                startIndex = tagEndIndex + 1;\r\n            }\r\n        }\r\n\r\n        return this._resultObjectArray;\r\n    }\r\n\r\n    private _attributeToObject(attribute: string) {\r\n        attribute = attribute.trim();\r\n\r\n        const obj: IHtmlTextParserStack = {};\r\n        let header = /^(color|size)(\\s)*=/.exec(attribute);\r\n        let tagName = '';\r\n        let nextSpace = 0;\r\n        let eventHanlderString = '';\r\n        if (header) {\r\n            tagName = header[0];\r\n            attribute = attribute.substring(tagName.length).trim();\r\n            if (attribute === '') {\r\n                return obj;\r\n            }\r\n\r\n            // parse color\r\n            nextSpace = attribute.indexOf(' ');\r\n            switch (tagName[0]) {\r\n                case 'c':\r\n                    if (nextSpace > -1) {\r\n                        obj.color = attribute.substring(0, nextSpace).trim();\r\n                    } else {\r\n                        obj.color = attribute;\r\n                    }\r\n                    break;\r\n                case 's':\r\n                    obj.size = parseInt(attribute);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            // tag has event arguments\r\n            if (nextSpace > -1) {\r\n                eventHanlderString = attribute.substring(nextSpace + 1).trim();\r\n                obj.event = this._processEventHandler(eventHanlderString);\r\n            }\r\n            return obj;\r\n        }\r\n\r\n        header = /^(br(\\s)*\\/)/.exec(attribute);\r\n        if (header && header[0].length > 0) {\r\n            tagName = header[0].trim();\r\n            if (tagName.startsWith('br') && tagName[tagName.length - 1] === '/') {\r\n                obj.isNewLine = true;\r\n                this._resultObjectArray.push({ text: '', style: { isNewLine: true } as IHtmlTextParserStack });\r\n                return obj;\r\n            }\r\n        }\r\n\r\n        header = /^(img(\\s)*src(\\s)*=[^>]+\\/)/.exec(attribute);\r\n        let remainingArgument = '';\r\n        let rightQuot = -1;\r\n        if (header && header[0].length > 0) {\r\n            tagName = header[0].trim();\r\n            if (tagName.startsWith('img') && tagName[tagName.length - 1] === '/') {\r\n                header = imageAttrReg.exec(attribute);\r\n                let tagValue: string;\r\n                let isValidImageTag = false;\r\n                while (header) {\r\n                    // skip the invalid tags at first\r\n                    attribute = attribute.substring(attribute.indexOf(header[0]));\r\n                    tagName = attribute.substr(0, header[0].length);\r\n                    const originTagNameLength = tagName.length;\r\n                    tagName = tagName.replace(/[^a-zA-Z]/g, '').trim();\r\n                    tagName = tagName.toLowerCase();\r\n\r\n                    // remove space and = character\r\n                    remainingArgument = attribute.substring(originTagNameLength).trim();\r\n                    if (tagName === 'src') {\r\n                        rightQuot = this.getRightQuotationIndex(remainingArgument);\r\n                    } else {\r\n                        rightQuot = -1;\r\n                    }\r\n                    nextSpace = remainingArgument.indexOf(' ', rightQuot + 1 >= remainingArgument.length ? -1 : rightQuot + 1);\r\n                    tagValue = (nextSpace > -1) ? remainingArgument.substr(0, nextSpace) : remainingArgument;\r\n                    attribute = remainingArgument.substring(nextSpace).trim();\r\n\r\n                    if (tagValue.endsWith('/')) {\r\n                        tagValue = tagValue.slice(0, -1);\r\n                    }\r\n                    if (tagName === 'src') {\r\n                        switch (tagValue.charCodeAt(0)) {\r\n                            case 34: // \"\r\n                            case 39: // '\r\n                                isValidImageTag = true;\r\n                                tagValue = tagValue.slice(1, -1);\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                        obj.isImage = true;\r\n                        obj.src = tagValue;\r\n                    } else if (tagName === 'height') {\r\n                        obj.imageHeight = parseInt(tagValue);\r\n                    } else if (tagName === 'width') {\r\n                        obj.imageWidth = parseInt(tagValue);\r\n                    } else if (tagName === 'align') {\r\n                        switch (tagValue.charCodeAt(0)) {\r\n                            case 34: // \"\r\n                            case 39: // '\r\n                                tagValue = tagValue.slice(1, -1);\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                        obj.imageAlign = tagValue.toLowerCase();\r\n                    } else if (tagName === 'offset') {\r\n                        obj.imageOffset = tagValue;\r\n                    } else if (tagName === 'click') {\r\n                        obj.event = this._processEventHandler(`${tagName}=${tagValue}`);\r\n                    }\r\n\r\n                    if (obj.event && tagName === 'param') {\r\n                        obj.event[tagName] = tagValue.replace(/^\"|\"$/g, '');\r\n                    }\r\n\r\n                    header = imageAttrReg.exec(attribute);\r\n                }\r\n\r\n                if (isValidImageTag && obj.isImage) {\r\n                    this._resultObjectArray.push({ text: '', style: obj });\r\n                }\r\n\r\n                return {};\r\n            }\r\n        }\r\n\r\n        header = /^(cg(\\s)*[^>]*)/.exec(attribute);\r\n        if (header) {\r\n            attribute = header[0].substring(\"cg\".length).trim();\r\n            let defaultColorGradientObject = { lb: \"#ffffff\", rb: \"#ffffff\", lt: \"#ffffff\", rt: \"#ffffff\" };\r\n            if (attribute) {\r\n                let colorGradientAttrReg = /(\\s)*lb(\\s)*=|(\\s)*rb(\\s)*=|(\\s)*lt(\\s)*=|(\\s)*rt(\\s)*=/;\r\n                header = colorGradientAttrReg.exec(attribute);\r\n                let tagValue: string;\r\n                let remainingArgument;\r\n                while (header) {\r\n                    //skip the invalid tags at first\r\n                    attribute = attribute.substring(attribute.indexOf(header[0]));\r\n                    tagName = attribute.substr(0, header[0].length);\r\n                    //remove space and = character\r\n                    remainingArgument = attribute.substring(tagName.length).trim();\r\n                    nextSpace = remainingArgument.indexOf(' ');\r\n                    if (nextSpace > -1) {\r\n                        tagValue = remainingArgument.substr(0, nextSpace);\r\n                    } else {\r\n                        tagValue = remainingArgument;\r\n                    }\r\n                    tagName = tagName.replace(/[^a-zA-Z]/g, \"\").trim();\r\n                    tagName = tagName.toLocaleLowerCase();\r\n\r\n                    attribute = remainingArgument.substring(nextSpace).trim();\r\n                    if (tagName === \"lb\") {\r\n                        defaultColorGradientObject.lb = tagValue;\r\n                    } else if (tagName === \"rb\") {\r\n                        defaultColorGradientObject.rb = tagValue;\r\n                    } else if (tagName === \"lt\") {\r\n                        defaultColorGradientObject.lt = tagValue;\r\n                    } else if (tagName === \"rt\") {\r\n                        defaultColorGradientObject.rt = tagValue;\r\n                    }\r\n\r\n                    header = colorGradientAttrReg.exec(attribute);\r\n                }\r\n            }\r\n            obj.colorGradient = defaultColorGradientObject;\r\n        }\r\n\r\n        header = /^(face(\\s)*[^>]*)/.exec(attribute);\r\n        if (header) {\r\n            attribute = header[0].substring(\"face\".length).trim();\r\n            let defaultFaceObject = { color: \"#ffffff\", dilate: 0.5, softness: 0.01 };\r\n            if (attribute) {\r\n                let faceAttrReg = /(\\s)*color(\\s)*=|(\\s)*dilate(\\s)*=|(\\s)*softness(\\s)*=|(\\s)*click(\\s)*=|(\\s)*param(\\s)*=/;\r\n                header = faceAttrReg.exec(attribute);\r\n                let tagValue: string;\r\n                let remainingArgument;\r\n                while (header) {\r\n                    //skip the invalid tags at first\r\n                    attribute = attribute.substring(attribute.indexOf(header[0]));\r\n                    tagName = attribute.substr(0, header[0].length);\r\n                    //remove space and = character\r\n                    remainingArgument = attribute.substring(tagName.length).trim();\r\n                    nextSpace = remainingArgument.indexOf(' ');\r\n                    if (nextSpace > -1) {\r\n                        tagValue = remainingArgument.substr(0, nextSpace);\r\n                    } else {\r\n                        tagValue = remainingArgument;\r\n                    }\r\n                    tagName = tagName.replace(/[^a-zA-Z]/g, \"\").trim();\r\n                    tagName = tagName.toLocaleLowerCase();\r\n\r\n                    attribute = remainingArgument.substring(nextSpace).trim();\r\n                    if (tagName === \"click\") {\r\n                        obj.event = this._processEventHandler(`${tagName}=${tagValue}`);\r\n                    } else if (tagName === \"color\") {\r\n                        defaultFaceObject.color = tagValue;\r\n                    } else if (tagName === \"dilate\") {\r\n                        defaultFaceObject.dilate = Number(tagValue);\r\n                    } else if (tagName === \"softness\") {\r\n                        defaultFaceObject.softness = Number(tagValue);\r\n                    }\r\n\r\n                    if (obj.event && tagName === 'param') {\r\n                        obj.event.param = tagValue.replace(/^\\\"|\\\"$/g, '');\r\n                    }\r\n\r\n                    header = faceAttrReg.exec(attribute);\r\n                }\r\n            }\r\n            obj.face = defaultFaceObject;\r\n        }\r\n\r\n        header = /^(outline(\\s)*[^>]*)/.exec(attribute);\r\n        if (header) {\r\n            attribute = header[0].substring('outline'.length).trim();\r\n            const defaultOutlineObject = { color: '#ffffff', thickness: 0.1 };\r\n            if (attribute) {\r\n                const outlineAttrReg = /(\\s)*color(\\s)*=|(\\s)*thickness(\\s)*=|(\\s)*click(\\s)*=|(\\s)*param(\\s)*=/;\r\n                header = outlineAttrReg.exec(attribute);\r\n                let tagValue: string;\r\n                while (header) {\r\n                    // skip the invalid tags at first\r\n                    attribute = attribute.substring(attribute.indexOf(header[0]));\r\n                    tagName = attribute.substr(0, header[0].length);\r\n                    // remove space and = character\r\n                    remainingArgument = attribute.substring(tagName.length).trim();\r\n                    nextSpace = remainingArgument.indexOf(' ');\r\n                    if (nextSpace > -1) {\r\n                        tagValue = remainingArgument.substr(0, nextSpace);\r\n                    } else {\r\n                        tagValue = remainingArgument;\r\n                    }\r\n                    tagName = tagName.replace(/[^a-zA-Z]/g, '').trim();\r\n                    tagName = tagName.toLowerCase();\r\n\r\n                    attribute = remainingArgument.substring(nextSpace).trim();\r\n                    if (tagName === 'click') {\r\n                        obj.event = this._processEventHandler(`${tagName}=${tagValue}`);\r\n                    } else if (tagName === 'color') {\r\n                        defaultOutlineObject.color = tagValue;\r\n                    } else if (tagName === 'thickness') {\r\n                        defaultOutlineObject.thickness = Number(tagValue);\r\n                    }\r\n\r\n                    if (obj.event && tagName === 'param') {\r\n                        obj.event[tagName] = tagValue.replace(/^\"|\"$/g, '');\r\n                    }\r\n\r\n                    header = outlineAttrReg.exec(attribute);\r\n                }\r\n            }\r\n            obj.outline = defaultOutlineObject;\r\n        }\r\n\r\n        header = /^(underlay(\\s)*[^>]*)/.exec(attribute);\r\n        if (header) {\r\n            attribute = header[0].substring(\"underlay\".length).trim();\r\n            let defaultUnderlayObject = { color: \"#ffffff\", x: 0, y: 0, dilate: 0.5, softness: 0.1 };\r\n            if (attribute) {\r\n                let underlayAttrReg = /(\\s)*color(\\s)*=|(\\s)*x(\\s)*=|(\\s)*y(\\s)*=|(\\s)*dilate(\\s)*=|(\\s)*softness(\\s)*=|(\\s)*click(\\s)*=|(\\s)*param(\\s)*=/;\r\n                header = underlayAttrReg.exec(attribute);\r\n                let tagValue: string;\r\n                let remainingArgument;\r\n                while (header) {\r\n                    //skip the invalid tags at first\r\n                    attribute = attribute.substring(attribute.indexOf(header[0]));\r\n                    tagName = attribute.substr(0, header[0].length);\r\n                    //remove space and = character\r\n                    remainingArgument = attribute.substring(tagName.length).trim();\r\n                    nextSpace = remainingArgument.indexOf(' ');\r\n                    if (nextSpace > -1) {\r\n                        tagValue = remainingArgument.substr(0, nextSpace);\r\n                    } else {\r\n                        tagValue = remainingArgument;\r\n                    }\r\n                    tagName = tagName.replace(/[^a-zA-Z]/g, \"\").trim();\r\n                    tagName = tagName.toLocaleLowerCase();\r\n\r\n                    attribute = remainingArgument.substring(nextSpace).trim();\r\n                    if (tagName === \"click\") {\r\n                        obj.event = this._processEventHandler(`${tagName}=${tagValue}`);\r\n                    } else if (tagName === \"color\") {\r\n                        defaultUnderlayObject.color = tagValue;\r\n                    } else if (tagName === \"dilate\") {\r\n                        defaultUnderlayObject.dilate = Number(tagValue);\r\n                    } else if (tagName === \"softness\") {\r\n                        defaultUnderlayObject.softness = Number(tagValue);\r\n                    } else if (tagName === \"x\") {\r\n                        defaultUnderlayObject.x = Number(tagValue);\r\n                    } else if (tagName === \"y\") {\r\n                        defaultUnderlayObject.y = Number(tagValue);\r\n                    }\r\n\r\n                    if (obj.event && tagName === 'param') {\r\n                        obj.event.param = tagValue.replace(/^\\\"|\\\"$/g, '');\r\n                    }\r\n\r\n                    header = underlayAttrReg.exec(attribute);\r\n                }\r\n            }\r\n            obj.underlay = defaultUnderlayObject;\r\n        }\r\n\r\n        header = /^(glow(\\s)*[^>]*)/.exec(attribute);\r\n        if (header) {\r\n            attribute = header[0].substring(\"glow\".length).trim();\r\n            let defaultGlowObject = { color: \"#000000\", offset: 0.5, inner: 0.01, outer: 0.01, power: 1 };\r\n            if (attribute) {\r\n                let glowAttrReg = /(\\s)*color(\\s)*=|(\\s)*offset(\\s)*=|(\\s)*inner(\\s)*=|(\\s)*outer(\\s)*=|(\\s)*power(\\s)*=|(\\s)*click(\\s)*=|(\\s)*param(\\s)*=/;\r\n                header = glowAttrReg.exec(attribute);\r\n                let tagValue: string;\r\n                let remainingArgument;\r\n                while (header) {\r\n                    //skip the invalid tags at first\r\n                    attribute = attribute.substring(attribute.indexOf(header[0]));\r\n                    tagName = attribute.substr(0, header[0].length);\r\n                    //remove space and = character\r\n                    remainingArgument = attribute.substring(tagName.length).trim();\r\n                    nextSpace = remainingArgument.indexOf(' ');\r\n                    if (nextSpace > -1) {\r\n                        tagValue = remainingArgument.substr(0, nextSpace);\r\n                    } else {\r\n                        tagValue = remainingArgument;\r\n                    }\r\n                    tagName = tagName.replace(/[^a-zA-Z]/g, \"\").trim();\r\n                    tagName = tagName.toLocaleLowerCase();\r\n\r\n                    attribute = remainingArgument.substring(nextSpace).trim();\r\n                    if (tagName === \"click\") {\r\n                        obj.event = this._processEventHandler(`${tagName}=${tagValue}`);\r\n                    } else if (tagName === \"color\") {\r\n                        defaultGlowObject.color = tagValue;\r\n                    } else if (tagName === \"offset\") {\r\n                        defaultGlowObject.offset = Number(tagValue);\r\n                    } else if (tagName === \"inner\") {\r\n                        defaultGlowObject.inner = Number(tagValue);\r\n                    } else if (tagName === \"outer\") {\r\n                        defaultGlowObject.outer = Number(tagValue);\r\n                    } else if (tagName === \"power\") {\r\n                        defaultGlowObject.power = Number(tagValue);\r\n                    }\r\n\r\n                    if (obj.event && tagName === 'param') {\r\n                        obj.event.param = tagValue.replace(/^\\\"|\\\"$/g, '');\r\n                    }\r\n\r\n                    header = glowAttrReg.exec(attribute);\r\n                }\r\n            }\r\n            obj.glow = defaultGlowObject;\r\n        }\r\n\r\n        header = /^(on|u|s|b|i)(\\s)*/.exec(attribute);\r\n        if (header && header[0].length > 0) {\r\n            tagName = header[0];\r\n            attribute = attribute.substring(tagName.length).trim();\r\n            switch (tagName[0]) {\r\n                case 'u':\r\n                    obj.underline = true;\r\n                    obj.offset = attribute[0] === \"=\" ? Number(attribute.slice(1)) : 0;\r\n                    break;\r\n                case 's':\r\n                    obj.strikethrough = true;\r\n                    obj.offset = attribute[0] === \"=\" ? Number(attribute.slice(1)) : 0;\r\n                    break;\r\n                case 'i':\r\n                    obj.italic = true;\r\n                    break;\r\n                case 'b':\r\n                    obj.bold = true;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            if (attribute === '') {\r\n                return obj;\r\n            }\r\n\r\n            obj.event = this._processEventHandler(attribute);\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    // find the right part of the first pair of following quotations.\r\n    private getRightQuotationIndex(remainingArgument: string) {\r\n        let leftQuot = -1;\r\n        let rightQuot = -1;\r\n        // Skip a pair of quotations for avoiding spaces in image name are detected.\r\n        const leftSingleQuot = remainingArgument.indexOf('\\'');\r\n        const leftDoubleQuot = remainingArgument.indexOf('\"');\r\n\r\n        const useSingleQuot = leftSingleQuot > -1 && (leftSingleQuot < leftDoubleQuot || leftDoubleQuot === -1);\r\n        const useDoubleQuot = leftDoubleQuot > -1 && (leftDoubleQuot < leftSingleQuot || leftSingleQuot === -1);\r\n        if (useSingleQuot) {\r\n            leftQuot = leftSingleQuot;\r\n            rightQuot = remainingArgument.indexOf('\\'', leftQuot + 1 >= remainingArgument.length ? -1 : leftQuot + 1);\r\n        } else if (useDoubleQuot) {\r\n            leftQuot = leftDoubleQuot;\r\n            rightQuot = remainingArgument.indexOf('\"', leftQuot + 1 >= remainingArgument.length ? -1 : leftQuot + 1);\r\n        }\r\n\r\n        return rightQuot;\r\n    }\r\n\r\n    private _processEventHandler(eventString: string) {\r\n        const obj = {};\r\n        let index = 0;\r\n        let isValidTag = false;\r\n        let eventNames = eventRegx.exec(eventString);\r\n        while (eventNames) {\r\n            let eventName = eventNames[0];\r\n            let eventValue = '';\r\n            isValidTag = false;\r\n            eventString = eventString.substring(eventName.length).trim();\r\n            if (eventString.charAt(0) === '\"') {\r\n                index = eventString.indexOf('\"', 1);\r\n                if (index > -1) {\r\n                    eventValue = eventString.substring(1, index).trim();\r\n                    isValidTag = true;\r\n                }\r\n                index++;\r\n            } else if (eventString.charAt(0) === '\\'') {\r\n                index = eventString.indexOf('\\'', 1);\r\n                if (index > -1) {\r\n                    eventValue = eventString.substring(1, index).trim();\r\n                    isValidTag = true;\r\n                }\r\n                index++;\r\n            } else {\r\n                // skip the invalid attribute value\r\n                const match = /(\\S)+/.exec(eventString);\r\n                if (match) {\r\n                    eventValue = match[0];\r\n                } else {\r\n                    eventValue = '';\r\n                }\r\n                index = eventValue.length;\r\n            }\r\n\r\n            if (isValidTag) {\r\n                eventName = eventName.substring(0, eventName.length - 1).trim();\r\n                obj[eventName] = eventValue;\r\n            }\r\n\r\n            eventString = eventString.substring(index).trim();\r\n            eventNames = eventRegx.exec(eventString);\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    private _addToStack(attribute: string) {\r\n        const obj = this._attributeToObject(attribute);\r\n\r\n        if (this._stack.length === 0) {\r\n            this._stack.push(obj);\r\n        } else {\r\n            if (obj.isNewLine || obj.isImage) {\r\n                return;\r\n            }\r\n            // for nested tags\r\n            const previousTagObj = this._stack[this._stack.length - 1];\r\n            for (const key in previousTagObj) {\r\n                if (!(obj[key])) {\r\n                    obj[key] = previousTagObj[key];\r\n                }\r\n            }\r\n            this._stack.push(obj);\r\n        }\r\n    }\r\n\r\n    private _processResult(value: string) {\r\n        if (value.length === 0) {\r\n            return;\r\n        }\r\n\r\n        value = this._escapeSpecialSymbol(value);\r\n        if (this._stack.length > 0) {\r\n            this._resultObjectArray.push({ text: value, style: this._stack[this._stack.length - 1] });\r\n        } else {\r\n            this._resultObjectArray.push({ text: value } as IHtmlTextParserResultObj);\r\n        }\r\n    }\r\n\r\n    private _escapeSpecialSymbol(str: string) {\r\n        for (const symbolArr of this._specialSymbolArray) {\r\n            const key = symbolArr[0];\r\n            const value = symbolArr[1];\r\n\r\n            str = str.replace(key, value);\r\n        }\r\n\r\n        return str;\r\n    }\r\n}\r\n","import { Label, RichText, Sprite, tween, UIOpacity, Vec3 } from 'cc';\n\nimport { playBackgroundSound, playEffectSound } from '../util/resources';\nimport { system } from '../util/system';\n\nexport const showTurnRibbon = async (message: string): Promise<void> => {\n\tconst node = system.globalNodes.turnRibbon;\n\tconst uiOpacity = node.getComponent(UIOpacity);\n\n\tnode.getChildByPath('message').getComponent(Label).string = message;\n\treturn new Promise((resolve) => {\n\t\ttween(node)\n\t\t\t.set({\n\t\t\t\tscale: new Vec3(0, 0, 1),\n\t\t\t\tposition: new Vec3(0, 25, 0),\n\t\t\t})\n\t\t\t.call(() => playEffectSound('your-turn4', 0.2))\n\t\t\t.to(0.5, { scale: new Vec3(1, 1, 1) }, { easing: 'backOut' })\n\t\t\t.delay(1)\n\t\t\t.call(() => playEffectSound('your-turn3', 0.2))\n\t\t\t.call(() => {\n\t\t\t\ttween(uiOpacity)\n\t\t\t\t\t.to(0.25, { opacity: 0 })\n\t\t\t\t\t.call(() => {\n\t\t\t\t\t\tnode.setPosition(new Vec3(9999, 0, 0));\n\t\t\t\t\t\tuiOpacity.opacity = 255;\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t})\n\t\t\t\t\t.start();\n\t\t\t})\n\t\t\t.to(0.25, { scale: new Vec3(0, 0, 1) }, { easing: 'backIn' })\n\t\t\t.start();\n\t});\n};\n\nexport const showEndGameRibbon = async (\n\tisVictory: boolean,\n\tclaimedPoints: number,\n): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\tconst node = system.globalNodes.duelRibbon;\n\t\tconst sound = isVictory ? 'victory' : 'defeat';\n\n\t\tnode.getChildByPath('ribbon').getComponent(Sprite).grayscale = !isVictory;\n\t\tnode.getChildByPath('avatar/image').getComponent(Sprite).grayscale =\n\t\t\t!isVictory;\n\t\tnode.getChildByPath('message').getComponent(Label).string = isVictory\n\t\t\t? 'Victory!'\n\t\t\t: 'Defeat!';\n\n\t\tconst coinNode = node\n\t\t\t.getChildByPath('ribbon/coin/label')\n\t\t\t.getComponent(RichText);\n\n\t\tif (!claimedPoints) {\n\t\t\tcoinNode.fontSize = 24;\n\t\t\tcoinNode.lineHeight = 32;\n\t\t\tcoinNode.string = `<color=#F2E0C3>You have taken all the gold today.\\n Return once the sun rises again.</color>`;\n\t\t} else {\n\t\t\tcoinNode.string = claimedPoints.toString();\n\t\t}\n\n\t\tsystem.globalNodes.playerHand.parent =\n\t\t\tsystem.globalNodes.board.getChildByPath('Surface');\n\t\ttween(system.globalNodes.fog.getComponent(UIOpacity))\n\t\t\t.to(2, { opacity: 255 })\n\t\t\t.start();\n\n\t\ttween(node)\n\t\t\t.set({\n\t\t\t\tscale: new Vec3(0, 0, 1),\n\t\t\t\tposition: new Vec3(0, -34, 0),\n\t\t\t})\n\t\t\t.call(() => {\n\t\t\t\tplayBackgroundSound(sound, 0.5, false);\n\t\t\t})\n\t\t\t.to(0.5, { scale: new Vec3(1, 1, 1) }, { easing: 'backOut' })\n\t\t\t.call(resolve)\n\t\t\t.start();\n\t});\n};\n","import { system } from '../util/system';\nimport { GameEventType } from '../util/types';\n\nimport * as handlers from './handlers';\nimport { ws } from './util';\n\nconsole.log('Game network started');\n\nws.onmessage = (item) => {\n\tconst { userId, type, payload } = JSON.parse(item.data);\n\tconst isMyCommand = system.userId === userId;\n\n\tif (type === GameEventType.ConnectMatch) {\n\t\thandlers.connect(payload, isMyCommand);\n\t} else if (type === GameEventType.SendBundle) {\n\t\thandlers.incomingBundles(payload);\n\t} else if (type === GameEventType.CardHover) {\n\t\tif (!isMyCommand) {\n\t\t\thandlers.cardHover(payload);\n\t\t}\n\t} else if (type === GameEventType.GameOver) {\n\t\thandlers.gameOver(payload);\n\t}\n};\n\nws.onerror = (error) => {\n\tconsole.log(error);\n};\n\nws.onopen = () => {\n\tconsole.log('Websocket opened');\n\tsystem.isSocketReady = true;\n};\n\nws.onclose = () => {\n\tconsole.log('Websocket closed');\n};\n\nexport const waitForSocket = (maxRetry = 150): Promise<boolean> => {\n\tlet retryCount = 0;\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst waitInterval = setInterval(() => {\n\t\t\tif (system.isSocketReady) {\n\t\t\t\tresolve(true);\n\t\t\t\tclearInterval(waitInterval);\n\t\t\t} else if (retryCount > maxRetry) {\n\t\t\t\treject('too many retries, socket may not be ready');\n\t\t\t\tclearInterval(waitInterval);\n\t\t\t}\n\n\t\t\tretryCount += 1;\n\t\t}, 200);\n\t});\n};\n\nexport * from './sender';\n","import type { DuelCommandBundle } from '@underrealm/murg';\nimport Engine from '@underrealm/murg';\nimport lodash from 'lodash';\n\nimport { showTurnRibbon } from '../tween';\nimport { updateGroundUnits, updatePlayers } from '../util/attribute';\nimport { system } from '../util/system';\n\nimport { playDraw } from './draw';\nimport { playFight } from './fight';\nimport { playGeneric } from './generic';\nimport { playReinforce } from './reinforce';\nimport { replicateState } from './replicateState';\nimport { playSummon } from './summon';\n\nlet replaying = false;\nconst { BundleGroup, mergeFragmentToState, runCommand, move } = Engine;\n\nexport const minimumReplicateStep = 10;\nexport const fastReplay = async (): Promise<void> => {\n\tconst remoteHistoryLength = system.history.length;\n\tconst isUpToDate = system.historyLevel >= remoteHistoryLength;\n\n\tif (system.winner || replaying || isUpToDate) return;\n\n\treplaying = true;\n\n\tfor (let i = system.historyLevel; i < remoteHistoryLength; i += 1) {\n\t\tconst bundle = system.history[i];\n\t\tconst group = bundle?.group;\n\t\tconst isInitialDraw = group === BundleGroup.InitialDraw;\n\t\tconst isTurnDraw = group === BundleGroup.TurnDraw;\n\t\tconst isDraw = isInitialDraw || isTurnDraw;\n\t\tconst isMyPhase = bundle.phaseOf === system.playerIds.me;\n\n\t\trunCommandBundle(bundle);\n\n\t\tif (i >= remoteHistoryLength - minimumReplicateStep + 1) {\n\t\t\tif (!system.winner && isTurnDraw && isMyPhase) {\n\t\t\t\tawait showTurnRibbon('Your Turn');\n\t\t\t}\n\t\t\tif (isDraw) {\n\t\t\t\tawait playDraw(bundle);\n\t\t\t} else if (BundleGroup.Summon === group) {\n\t\t\t\tawait playSummon(bundle);\n\t\t\t} else if (BundleGroup.FightCombat === group) {\n\t\t\t\tawait playFight(bundle);\n\t\t\t} else if (BundleGroup.Reinforce === group) {\n\t\t\t\tawait playReinforce(bundle);\n\t\t\t} else {\n\t\t\t\tawait playGeneric(bundle);\n\t\t\t}\n\t\t} else if (i === remoteHistoryLength - minimumReplicateStep) {\n\t\t\treplicateState();\n\t\t}\n\n\t\tupdatePlayers();\n\t\tupdateGroundUnits();\n\t\tsystem.historyLevel += 1;\n\t}\n\n\treplaying = false;\n};\n\nexport const replay = async (): Promise<void> => {\n\tconst remoteHistoryLength = system.history.length;\n\tconst isUpToDate = system.historyLevel >= remoteHistoryLength;\n\n\tif (system.winner || replaying || isUpToDate) return;\n\n\treplaying = true;\n\n\tfor (let i = system.historyLevel; i < remoteHistoryLength; i += 1) {\n\t\tconst bundle = system.history[i];\n\t\tif (!bundle) {\n\t\t\tconsole.warn(`got undefined bundle at ${i} of duel ${system.matchId}`);\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst group = bundle?.group;\n\t\tconst isInitialDraw = group === BundleGroup.InitialDraw;\n\t\tconst isTurnDraw = group === BundleGroup.TurnDraw;\n\t\tconst isDraw = isInitialDraw || isTurnDraw;\n\t\tconst isMyPhase = bundle.phaseOf === system.playerIds.me;\n\n\t\trunCommandBundle(bundle);\n\n\t\tif (!system.winner && isTurnDraw && isMyPhase) {\n\t\t\tawait showTurnRibbon('Your Turn');\n\t\t}\n\n\t\tif (isDraw) {\n\t\t\tawait playDraw(bundle);\n\t\t} else if (BundleGroup.Summon === group) {\n\t\t\tawait playSummon(bundle);\n\t\t} else if (BundleGroup.FightCombat === group) {\n\t\t\tawait playFight(bundle);\n\t\t} else if (BundleGroup.Reinforce === group) {\n\t\t\tawait playReinforce(bundle);\n\t\t} else {\n\t\t\tawait playGeneric(bundle);\n\t\t}\n\n\t\tupdatePlayers();\n\t\tupdateGroundUnits();\n\t\tsystem.historyLevel += 1;\n\t}\n\n\treplaying = false;\n\n\tawait replay();\n};\n\nexport const runCommandBundle = (bundle: DuelCommandBundle): void => {\n\tbundle.commands.forEach((command) => {\n\t\tmergeFragmentToState(\n\t\t\tsystem.duel,\n\t\t\trunCommand({ duel: system.duel, command }),\n\t\t);\n\t});\n\n\tsystem.predict = move.fight(lodash.cloneDeep(system.duel)).duel;\n};\n","export * from './card';\nexport * from './common';\nexport * from './fight';\nexport * from './generic';\nexport * from './hud';\nexport * from './preview';\nexport * from './summon';\n","import type { Node } from 'cc';\nimport { Vec3 } from 'cc';\n\nimport { getGroundSize } from './helper';\nimport { system } from './system';\n\ntype ExpoAlign = 'left' | 'right';\n\nexport const getPositionExpos = (\n\tcenterNode: Node = system.globalNodes.centerExpo,\n\tsize: number,\n\tspacing = 220,\n\talign?: ExpoAlign,\n): Vec3[] => {\n\tconst positions: Vec3[] = [];\n\tconst center = centerNode.getPosition();\n\tconst totalSpace = spacing * size;\n\tconst totalRadius = totalSpace / 2;\n\tconst itemRadius = spacing / 2;\n\tconst alignOffset = getAlignOffset(size, spacing, align);\n\n\tfor (let i = 0; i < size; i += 1) {\n\t\tconst offset = i * spacing - totalRadius + itemRadius;\n\t\tpositions.push(new Vec3(center.x + offset + alignOffset, center.y, 0));\n\t}\n\n\treturn positions;\n};\n\nconst getAlignOffset = (\n\tsize: number,\n\tspacing: number,\n\talign?: ExpoAlign,\n): number => {\n\tif (!align) {\n\t\treturn 0;\n\t} else if (align === 'left') {\n\t\treturn (size * spacing) / 2;\n\t} else if (align === 'right') {\n\t\treturn (size * spacing) / -2;\n\t}\n};\n\nexport const getCenterExpos = (size: number): Vec3[] => {\n\treturn getPositionExpos(system.globalNodes.centerExpo, size, 210);\n};\n\nexport const getLeftExpos = (size: number): Vec3[] => {\n\treturn getPositionExpos(system.globalNodes.leftExpo, size, 210, 'left');\n};\n\nexport const getRightExpos = (size: number): Vec3[] => {\n\treturn getPositionExpos(system.globalNodes.rightExpo, size, 210, 'right');\n};\n\nexport const getHandExpos = (at: Node, size: number): Vec3[] => {\n\treturn getPositionExpos(at, size, 80);\n};\n\nexport const getGroundExpos = (at: Node): Vec3[] => {\n\treturn getPositionExpos(at, getGroundSize(), 100);\n};\n","import { _decorator, Component, director, ProgressBar } from 'cc';\n\nimport { waitForSocket } from './network';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('LoadingManager')\nexport class LoadingManager extends Component {\n\t@property(ProgressBar)\n\tprogressBar: ProgressBar;\n\n\tstart(): void {\n\t\tdirector.preloadScene(\n\t\t\t'Duel',\n\t\t\t(completedCount: number, totalCount: number) => {\n\t\t\t\tthis.progressBar.progress = completedCount / (totalCount + 2);\n\t\t\t},\n\t\t\tasync () => {\n\t\t\t\tawait waitForSocket();\n\t\t\t\tdirector.loadScene('Duel');\n\t\t\t},\n\t\t);\n\t}\n}\n","import type { Node } from 'cc';\nimport { tween, Vec3 } from 'cc';\n\nexport const raiseUnitPreview = async (\n\tnode: Node,\n\ttargetNode: Node,\n): Promise<void> => {\n\tconst at = targetNode.getPosition();\n\tconst xOffset = at.x > 0 ? -170 : 170;\n\tconst yOffset = at.y > 0 ? 26 : 26;\n\n\treturn new Promise((resolve) => {\n\t\tnode.setPosition(at.x + xOffset, at.y + yOffset);\n\t\ttween(node.getChildByPath('Card'))\n\t\t\t.set({ position: new Vec3(0, -15, 0), scale: new Vec3(0.6, 0.6, 1) })\n\t\t\t.to(0.15, { position: new Vec3(0, 0, 0) }, { easing: 'backOut' })\n\t\t\t.call(() => resolve())\n\t\t\t.start();\n\t});\n};\n\nexport const raiseHandPreview = async (\n\tnode: Node,\n\tfrom = -12,\n\tduration = 0.15,\n): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\ttween(node.getChildByPath('Card'))\n\t\t\t.set({ position: new Vec3(0, from, 0) })\n\t\t\t.to(duration, { position: new Vec3(0, 0, 0) }, { easing: 'backOut' })\n\t\t\t.call(() => resolve())\n\t\t\t.start();\n\t});\n};\n\nexport const raiseHandCard = async (\n\tnode: Node,\n\tto = 100,\n\tduration = 0.1,\n\tpath = 'front',\n): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\ttween(node.getChildByPath(path))\n\t\t\t.to(duration, { position: new Vec3(0, to, 0) }, { easing: 'cubicInOut' })\n\t\t\t.call(() => resolve())\n\t\t\t.start();\n\t});\n};\n","import Engine from '@underrealm/murg';\nimport type { EventMouse, UIOpacity } from 'cc';\nimport { _decorator, Component, Node, Vec2 } from 'cc';\n\nimport { cardIdFromNode, setCursor } from './util/helper';\nimport { system } from './util/system';\nimport { raiseHandCard } from './tween';\n\nconst { ccclass } = _decorator;\nconst NodeEvents = Node.EventType;\nconst { CardType, getCard, selectPlayer } = Engine;\n\ninterface Props {\n\tcard?: Node;\n\tdragging?: boolean;\n\tdragOffset?: Vec2;\n}\n\n@ccclass('PreviewManager')\nexport class PreviewManager extends Component {\n\tprops: Props = {};\n\n\tstart(): void {\n\t\tthis.props.card = this.node.getChildByPath('Card');\n\t\tthis.node.on(NodeEvents.MOUSE_ENTER, this.onMouseEnter.bind(this));\n\t\tthis.node.on(NodeEvents.MOUSE_LEAVE, this.onMouseLeave.bind(this));\n\t\tthis.node.on(NodeEvents.MOUSE_DOWN, this.onMouseDown.bind(this));\n\t\tthis.node.on(NodeEvents.MOUSE_UP, this.onMouseUp.bind(this));\n\t\tthis.node.on(NodeEvents.MOUSE_MOVE, this.onMouseMove.bind(this));\n\t}\n\n\tonMouseEnter(): void {\n\t\tthis.props.dragging = false;\n\t\tsetCursor('grab');\n\t}\n\n\tonMouseLeave(): void {\n\t\tsetCursor('auto');\n\t\tthis.hidePreview();\n\t}\n\n\tonMouseDown(e: EventMouse): void {\n\t\tthis.props.dragging = true;\n\t\tthis.props.dragOffset = e.getLocation();\n\t}\n\n\tonMouseUp(): void {\n\t\tthis.props.dragging = false;\n\t}\n\n\tonMouseMove(e: EventMouse): void {\n\t\tif (!this.props.dragging || !system.isCommandAble) return;\n\n\t\tconst location = e.getLocation();\n\t\tconst distance = Vec2.distance(location, this.props.dragOffset);\n\n\t\tif (distance > 5) {\n\t\t\tconst cardId = cardIdFromNode(system.activeCard);\n\t\t\tconst card = getCard(system.duel.cardMap, cardId);\n\t\t\tconst player = selectPlayer(system.duel, system.playerIds.me);\n\n\t\t\tif (card.kind === CardType.Hero && player.perTurnHero <= 0) return;\n\n\t\t\tthis.hidePreview();\n\t\t\tsystem.dragging = true;\n\t\t}\n\t}\n\n\thidePreview(): void {\n\t\tthis.node.setPosition(190, 740);\n\n\t\tif (system.activeCard) {\n\t\t\traiseHandCard(system.activeCard, 0, 0.02);\n\t\t\tconst uiOpacity = system.activeCard.getComponent(\n\t\t\t\t'cc.UIOpacity',\n\t\t\t) as UIOpacity;\n\t\t\tuiOpacity.opacity = 255;\n\t\t}\n\t}\n}\n","import type { DuelCommandBundle } from '@underrealm/murg';\nimport Engine from '@underrealm/murg';\n\nimport { animateRelocate } from '../tween';\nimport { getGroundExpos } from '../util/layout';\nimport { system } from '../util/system';\n\nconst { DuelCommandType } = Engine;\n\nexport const playReinforce = async ({\n\tcommands,\n}: DuelCommandBundle): Promise<void> => {\n\tconst relocatePromises = [];\n\tconst moveCommands = commands.filter(\n\t\t(i) => i.type === DuelCommandType.CardMove,\n\t);\n\n\tmoveCommands\n\t\t.filter((i) => i.type === DuelCommandType.CardMove)\n\t\t.forEach(({ owner, target }) => {\n\t\t\tconst cardNode = system.cardRefs[target?.from?.id];\n\n\t\t\tif (cardNode) {\n\t\t\t\tconst isMyCommand = system.playerIds.me === owner;\n\t\t\t\tconst expoNode = isMyCommand\n\t\t\t\t\t? system.globalNodes.playerGroundGuide\n\t\t\t\t\t: system.globalNodes.enemyGroundGuide;\n\t\t\t\tconst expos = getGroundExpos(expoNode);\n\n\t\t\t\trelocatePromises.push(\n\t\t\t\t\tanimateRelocate(cardNode, expos[target.to.index]),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\tawait Promise.all(relocatePromises);\n};\n","import Engine from '@underrealm/murg';\nimport type { Node } from 'cc';\nimport { instantiate, Quat, Vec3 } from 'cc';\n\nimport { CardManager } from '../CardManager';\nimport { UnitManager } from '../UnitManager';\nimport { selectGroundGuide } from '../util/helper';\nimport { getGroundExpos, getPositionExpos } from '../util/layout';\nimport { system } from '../util/system';\n\nconst { selectHand, selectGround } = Engine;\n\nexport const replicateState = () => {\n\tconst { globalNodes, playerIds } = system;\n\treplicateHandState({\n\t\thandGuide: globalNodes.playerHandGuide,\n\t\tparentNode: globalNodes.playerHand,\n\t\tplayerId: playerIds.me,\n\t\tscaleFactor: 0.4,\n\t\tspacing: 80,\n\t});\n\treplicateHandState({\n\t\thandGuide: globalNodes.enemyHandGuide,\n\t\tparentNode: globalNodes.enemyHand,\n\t\tplayerId: playerIds.enemy,\n\t\tscaleFactor: 0.28,\n\t\tspacing: 60,\n\t});\n\n\treplicateGroundState({\n\t\tplayerId: system.playerIds.me,\n\t\tparentNode: system.globalNodes.playerGround,\n\t});\n\treplicateGroundState({\n\t\tplayerId: system.playerIds.enemy,\n\t\tparentNode: system.globalNodes.enemyGround,\n\t});\n};\n\nconst replicateHandState = ({\n\tparentNode,\n\tplayerId,\n\thandGuide,\n\tscaleFactor,\n\tspacing,\n}: {\n\tparentNode: Node;\n\tplayerId: string;\n\thandGuide: Node;\n\tscaleFactor: number;\n\tspacing: number;\n}) => {\n\tconst hand = selectHand(system.duel, playerId);\n\tconst handPositions = getPositionExpos(handGuide, hand.length, spacing);\n\tconst isPlayerHand = playerId === system.playerIds.me;\n\n\tfor (let i = 0; i < hand.length; i++) {\n\t\tconst cardId = hand[i];\n\t\tconst node = instantiate(system.globalNodes.cardTemplate);\n\t\tnode.setPosition(handPositions[i]);\n\t\tnode.setScale(new Vec3(scaleFactor, scaleFactor, 1));\n\t\tif (!isPlayerHand) node.setRotation(Quat.fromEuler(new Quat(), 0, 0, 180));\n\t\tnode.getComponent(CardManager).setCardId(cardId);\n\t\tnode.getChildByPath('back').active = !isPlayerHand;\n\t\tnode.parent = parentNode;\n\t\tsystem.cardRefs[cardId] = node;\n\t}\n};\n\nconst replicateGroundState = ({\n\tparentNode,\n\tplayerId,\n}: {\n\tparentNode: Node;\n\tplayerId: string;\n}) => {\n\tconst groundGuide = selectGroundGuide(playerId);\n\tconst groundPositions = getGroundExpos(groundGuide);\n\tconst ground = selectGround(system.duel, playerId);\n\n\tfor (let i = 0; i < ground.length; i++) {\n\t\tconst cardId = ground[i];\n\t\tif (cardId) {\n\t\t\tconst node = instantiate(system.globalNodes.unitTemplate);\n\t\t\tnode.setPosition(groundPositions[i]);\n\t\t\tnode.getComponent(UnitManager).setCardId(cardId);\n\t\t\tnode.parent = parentNode;\n\t\t\tsystem.cardRefs[cardId] = node;\n\t\t}\n\t}\n};\n","import type { Asset, AudioClip, Node, Prefab } from 'cc';\nimport { instantiate, resources, sys } from 'cc';\n\nimport { delay } from './helper';\nimport { system } from './system';\n\nexport interface AudioSource {\n\tclip: AudioClip;\n\tbuffer?: AudioBuffer;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst backgroundSounds = ['bgm-dungeon-crawl', 'bgm-dungeon-peak'] as const;\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst effectSounds = [\n\t'attack',\n\t'ground-hit',\n\t'fire',\n\t'light-fire',\n\t'death',\n\t'hand-slide',\n\t'card-flip',\n\t'card-raise',\n\t'end-turn',\n\t'your-turn3',\n\t'your-turn4',\n\t'victory',\n\t'defeat',\n] as const;\n\nexport type GameSounds =\n\t| (typeof backgroundSounds)[number]\n\t| (typeof effectSounds)[number];\n\nconst audioCache: Partial<Record<GameSounds, AudioSource>> = {};\n\nconst useAudioContext = sys.isBrowser;\nlet audioContext: AudioContext;\nlet backgroundSource: AudioBufferSourceNode;\nlet backgroundGain: GainNode;\n\nif (useAudioContext) {\n\taudioContext = new AudioContext();\n\tbackgroundGain = audioContext.createGain();\n\tbackgroundGain.connect(audioContext.destination);\n\n\tdocument.addEventListener('click', () => {\n\t\tif (audioContext.state !== 'running') {\n\t\t\taudioContext.resume();\n\t\t}\n\t});\n}\n\nconst dimBackgroundVolume = async (): Promise<void> => {\n\tconst currentVolume = useAudioContext\n\t\t? backgroundGain.gain.value\n\t\t: system.audioSource.volume;\n\n\tfor (let i = currentVolume; i > 0; i -= 0.01) {\n\t\tif (useAudioContext) {\n\t\t\tbackgroundGain.gain.value = i;\n\t\t} else {\n\t\t\tsystem.audioSource.volume = i;\n\t\t}\n\n\t\tawait delay(100);\n\t}\n};\n\nconst raiseBackgroundVolume = async (volume = 1) => {\n\tfor (let i = 0; i < volume; i += 0.01) {\n\t\tif (useAudioContext) {\n\t\t\tbackgroundGain.gain.value = i;\n\t\t} else {\n\t\t\tsystem.audioSource.volume = i;\n\t\t}\n\n\t\tawait delay(50);\n\t}\n};\n\nexport const playBackgroundSound = async (\n\tname: GameSounds,\n\tvolume = 1,\n\tloop = true,\n): Promise<void> => {\n\tconst { clip, buffer } = await getAudioSource(name);\n\n\tif (useAudioContext) {\n\t\tif (backgroundSource) {\n\t\t\tbackgroundSource.stop();\n\t\t\tbackgroundSource.buffer = null;\n\t\t\tbackgroundSource.disconnect();\n\t\t}\n\n\t\tbackgroundSource = audioContext.createBufferSource();\n\t\tbackgroundSource.buffer = buffer;\n\t\tbackgroundSource.connect(backgroundGain);\n\t\tbackgroundSource.loop = loop;\n\t\tbackgroundSource.start(0);\n\t} else {\n\t\tsystem.audioSource.stop();\n\t\tsystem.audioSource.clip = clip;\n\t\tsystem.audioSource.play();\n\t}\n\n\tawait raiseBackgroundVolume(volume);\n};\n\nexport const switchBackgroundSound = async (\n\tname: GameSounds,\n\tvolume = 1,\n): Promise<void> => {\n\tawait dimBackgroundVolume();\n\tplayBackgroundSound(name, volume);\n};\n\nexport const playEffectSound = async (\n\tname: GameSounds,\n\tvolume = 1,\n): Promise<void> => {\n\tconst { clip } = await getAudioSource(name);\n\tsystem.audioSource.playOneShot(clip, volume);\n};\n\nexport const instantiatePrefab = (uri: string): Promise<Node> => {\n\treturn new Promise((resolve, reject) => {\n\t\tresources.load(uri, (err, prefab: Prefab) => {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\tresolve(instantiate(prefab));\n\t\t\t}\n\t\t});\n\t});\n};\n\nexport const bufferFromAsset = async (asset: Asset): Promise<ArrayBuffer> => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\n\t\trequest.open('GET', asset.nativeUrl, true);\n\t\trequest.responseType = 'arraybuffer';\n\t\trequest.onload = () => resolve(request.response);\n\t\trequest.onerror = () => reject();\n\t\trequest.send();\n\t});\n};\n\nexport const extractAudioBuffer = async (\n\tbuffer: ArrayBuffer,\n): Promise<AudioBuffer> => {\n\treturn new Promise((resolve, reject) => {\n\t\taudioContext.decodeAudioData(\n\t\t\tbuffer,\n\t\t\t(audio) => resolve(audio),\n\t\t\t(err) => reject(err),\n\t\t);\n\t});\n};\n\nexport const getAudioSource = async (\n\tname: GameSounds,\n): Promise<AudioSource> => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst cache = audioCache[name];\n\n\t\tif (cache) {\n\t\t\tresolve(cache);\n\t\t} else {\n\t\t\tresources.load(`sound/${name}`, async (err, clip: AudioClip) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t} else {\n\t\t\t\t\taudioCache[name] = { clip };\n\n\t\t\t\t\tif (useAudioContext) {\n\t\t\t\t\t\tconst buffer = await bufferFromAsset(clip);\n\t\t\t\t\t\taudioCache[name].buffer = await extractAudioBuffer(buffer);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(audioCache[name]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n};\n","import type { DuelCommandBundle } from '@underrealm/murg';\nimport Engine from '@underrealm/murg';\nimport lodash from 'lodash';\n\nimport { replay } from '../replay';\nimport { system } from '../util/system';\nimport type { CommandPayload, JwtPayload } from '../util/types';\nimport { GameEventType } from '../util/types';\n\nimport { ws } from './util';\n\nconst { getCardState, selectHand, move, DuelPlace } = Engine;\n\nexport const send = (type: GameEventType, payload?: unknown): void => {\n\tconst data: CommandPayload = {\n\t\taction: 'game',\n\t\tjwt: system.jwt,\n\t\ttype,\n\t\tpayload,\n\t};\n\tws.send(JSON.stringify(data));\n};\n\nexport const sendConnect = (): void => {\n\tconst searchParams = new URLSearchParams(location.search);\n\tconst searchJwt = searchParams.get('jwt');\n\tconst localStorageJwt = localStorage?.getItem('GAME_JWT');\n\n\tsystem.jwt = searchJwt || localStorageJwt;\n\tif (system.jwt) {\n\t\tconst { userId, matchId } = decodeJwt(system.jwt);\n\t\tsystem.userId = userId;\n\t\tsystem.matchId = matchId;\n\t}\n\n\tsend(GameEventType.ConnectMatch);\n};\n\nexport const sendBundles = (bundles: DuelCommandBundle[]): void => {\n\t// fix reading undefined bundle in `replay`\n\tbundles = bundles.filter(Boolean);\n\tsend(GameEventType.SendBundle, bundles);\n\n\t/* optimistic simulate command success, will be overrides by server response */\n\tbundles.forEach((bundle) => {\n\t\tsystem.history.push(bundle);\n\t});\n\n\treplay();\n};\n\nexport const sendCardSummon = (cardId: string, index: number): void => {\n\tconst state = getCardState(system.duel.stateMap, cardId);\n\tconst { commandBundles } = move.summonCard(lodash.cloneDeep(system.duel), {\n\t\tfrom: {\n\t\t\towner: state.owner,\n\t\t\tid: state.id,\n\t\t\tplace: DuelPlace.Hand,\n\t\t},\n\t\tto: {\n\t\t\towner: state.owner,\n\t\t\tindex,\n\t\t\tplace: DuelPlace.Ground,\n\t\t},\n\t});\n\n\tsendBundles(commandBundles);\n};\n\nexport const sendEndTurn = (): void => {\n\tsendBundles(move.endTurn(system.duel).commandBundles);\n};\n\nexport const internalSendCardHover = (\n\tcardId: string,\n\tisMouseIn: boolean,\n): void => {\n\tconst state = getCardState(system.duel.stateMap, cardId);\n\tconst hand = selectHand(system.duel, state.owner);\n\tconst index = hand.indexOf(cardId);\n\n\tsend(GameEventType.CardHover, { index, isMouseIn });\n};\n\nexport const sendCardHover = lodash.throttle(internalSendCardHover, 200);\n\nfunction decodeJwt(token: string): JwtPayload {\n\tconst base64UrlPayload = token.split('.')[1];\n\tconst base64 = base64UrlPayload.replace(/-/g, '+').replace(/_/g, '/');\n\tconst jsonPayload = decodeURIComponent(window.atob(base64));\n\treturn JSON.parse(jsonPayload);\n}\n","import type { DuelCommandBundle } from '@underrealm/murg';\nimport Engine from '@underrealm/murg';\nimport { instantiate } from 'cc';\n\nimport {\n\tanimateEnemySummon,\n\tanimateGlowOff,\n\tanimatePlayerSummon,\n} from '../tween';\nimport { UnitManager } from '../UnitManager';\nimport { selectGroundGuide } from '../util/helper';\nimport { getGroundExpos } from '../util/layout';\nimport { system } from '../util/system';\n\nconst { DuelCommandType } = Engine;\n\nexport const playSummon = async ({\n\tcommands,\n}: DuelCommandBundle): Promise<void> => {\n\tconst promises = [];\n\n\tfor (let i = 0; i < commands.length; i += 1) {\n\t\tconst { type, owner, target } = commands[i];\n\t\tconst isMoveCommand = type === DuelCommandType.CardMove;\n\n\t\tif (isMoveCommand) {\n\t\t\tconst cardId = target.from.id;\n\t\t\tconst isMyCommand = owner === system.playerIds.me;\n\t\t\tconst groundPositions = getGroundExpos(selectGroundGuide(owner));\n\t\t\tconst targetPosition = groundPositions[target.to.index];\n\t\t\tconst cardNode = system.cardRefs[cardId];\n\t\t\tconst unitNode = instantiate(system.globalNodes.unitTemplate);\n\n\t\t\tunitNode.getComponent(UnitManager).setCardId(cardId);\n\t\t\tsystem.cardRefs[cardId] = unitNode;\n\n\t\t\tif (isMyCommand) {\n\t\t\t\tunitNode.parent = system.globalNodes.playerGround;\n\t\t\t\tanimateGlowOff(cardNode);\n\t\t\t\tpromises.push(animatePlayerSummon(cardNode, unitNode, targetPosition));\n\t\t\t} else {\n\t\t\t\tunitNode.parent = system.globalNodes.enemyGround;\n\t\t\t\tunitNode.getChildByPath('front').active = false;\n\t\t\t\tunitNode.getChildByPath('back').active = true;\n\t\t\t\tpromises.push(animateEnemySummon(cardNode, unitNode, targetPosition));\n\t\t\t\tsetTimeout(() => cardNode.destroy(), 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tawait Promise.all(promises);\n};\n","import type { Node } from 'cc';\nimport { Quat, tween, Vec3 } from 'cc';\n\nimport { playEffectSound } from '../util/resources';\n\nimport { shakeGround } from './common';\n\nexport const animatePlayerSummon = (\n\tcardNode: Node,\n\tunitNode: Node,\n\tto: Vec3,\n): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\tconst from = cardNode.getPosition();\n\t\tconst xOffset = from.x > to.x ? 10 : -10;\n\t\tconst aboveTo = new Vec3(to.x + xOffset, to.y + 200, to.z);\n\n\t\ttween(cardNode)\n\t\t\t.to(0.1, { scale: new Vec3(0.52, 0.52, 1) }, { easing: 'backOut' })\n\t\t\t.call(() => playEffectSound('light-fire', 0.5))\n\t\t\t.to(\n\t\t\t\t0.4,\n\t\t\t\t{ scale: new Vec3(0.23, 0.23, 1), position: aboveTo },\n\t\t\t\t{ easing: 'expoOut' },\n\t\t\t)\n\t\t\t.call(() => {\n\t\t\t\tcardNode.destroy();\n\n\t\t\t\ttween(unitNode)\n\t\t\t\t\t.set({ position: aboveTo, scale: new Vec3(0.25, 0.25, 1) })\n\t\t\t\t\t.to(\n\t\t\t\t\t\t0.3,\n\t\t\t\t\t\t{ position: to, scale: new Vec3(0.24, 0.24, 1) },\n\t\t\t\t\t\t{ easing: 'expoOut' },\n\t\t\t\t\t)\n\t\t\t\t\t.call(() => {\n\t\t\t\t\t\tplayEffectSound('ground-hit');\n\t\t\t\t\t\tshakeGround();\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t})\n\t\t\t\t\t.start();\n\t\t\t})\n\t\t\t.start();\n\t});\n};\n\nexport const animateEnemySummon = (\n\tcardNode: Node,\n\tunitNode: Node,\n\tto: Vec3,\n): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\tconst from = cardNode.getPosition();\n\t\tconst aboveTo = new Vec3(to.x, to.y + 200, to.z);\n\t\tconst r1 = Quat.fromEuler(new Quat(), 180, 0, 0);\n\t\tconst r2 = Quat.fromEuler(new Quat(), 0, 0, 0);\n\n\t\ttween(unitNode)\n\t\t\t.set({ position: from, rotation: r1 })\n\t\t\t.to(0.1, { scale: new Vec3(0.5, 0.5, 1) }, { easing: 'backOut' })\n\t\t\t.call(() => playEffectSound('light-fire', 0.5))\n\t\t\t.to(\n\t\t\t\t0.4,\n\t\t\t\t{ position: aboveTo, scale: new Vec3(0.23, 0.23, 1), rotation: r2 },\n\t\t\t\t{ easing: 'expoOut' },\n\t\t\t)\n\t\t\t.to(0.3, { position: to }, { easing: 'expoOut' })\n\t\t\t.call(() => {\n\t\t\t\tplayEffectSound('ground-hit');\n\t\t\t\tshakeGround();\n\t\t\t\tresolve();\n\t\t\t})\n\t\t\t.start();\n\t});\n};\n\nexport const animateGroundAppear = (node: Node, from: Vec3): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\ttween(node)\n\t\t\t.set({ scale: new Vec3(0.25, 0.25, 1), position: from })\n\t\t\t.to(0.5, { scale: new Vec3(0.24, 0.24, 1) })\n\t\t\t.call(() => resolve())\n\t\t\t.start();\n\t});\n};\n\nexport const animateAirSummon = (unitNode: Node, to: Vec3): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\tconst randomOffset = Math.random() * 1280 - 640;\n\n\t\ttween(unitNode)\n\t\t\t.set({ position: new Vec3(randomOffset, to.y > 0 ? 600 : -600, 1) })\n\t\t\t.to(1, { position: to }, { easing: 'expoOut' })\n\t\t\t.call(() => {\n\t\t\t\tplayEffectSound('ground-hit');\n\t\t\t\tshakeGround();\n\t\t\t\tresolve();\n\t\t\t})\n\t\t\t.start();\n\t});\n};\n","import type {\n\tDuelCommandBundle,\n\tDuelConfig,\n\tDuelState,\n\tPlayerState,\n} from '@underrealm/murg';\nimport Engine from '@underrealm/murg';\nimport type { AudioSource, Node } from 'cc';\nimport lodash from 'lodash';\n\nimport type { JwtPayload, PlayerIds } from '../util/types';\n\nconst { defaultSetting, DuelPhases, nanoId } = Engine;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype ProxyListener = (value: any, lastValue?: any) => void;\n\ntype DuelProxy = DuelState & {\n\tsubscribe?: (\n\t\tkey: string,\n\t\tlistener: ProxyListener,\n\t\tinitialEmmit?: boolean,\n\t) => () => void;\n\tgetSubscriptionCount?: () => number;\n};\n\nexport const makeDuelProxy = (duel: DuelProxy): DuelProxy => {\n\tconst listenerMap: Record<string, Record<string, ProxyListener>> = {};\n\n\tduel.getSubscriptionCount = () => {\n\t\treturn Object.keys(listenerMap).reduce((acc, key) => {\n\t\t\treturn acc + Object.keys(listenerMap[key]).length;\n\t\t}, 0);\n\t};\n\n\tduel.subscribe = (key, listener, initialEmmit) => {\n\t\tconst subscriptionId = nanoId();\n\n\t\tif (listenerMap[key]) {\n\t\t\tlistenerMap[key][subscriptionId] = listener;\n\t\t} else {\n\t\t\tlistenerMap[key] = {\n\t\t\t\t[subscriptionId]: listener,\n\t\t\t};\n\t\t}\n\n\t\tif (initialEmmit) {\n\t\t\tif (key.startsWith('state#')) {\n\t\t\t\tlistener(duel.stateMap[key.substring(6)]);\n\t\t\t} else {\n\t\t\t\tlistener(duel[key]);\n\t\t\t}\n\t\t}\n\n\t\treturn () => {\n\t\t\tdelete listenerMap[key][subscriptionId];\n\t\t};\n\t};\n\n\tduel.stateMap = new Proxy(duel.stateMap, {\n\t\tset: (target, key, value) => {\n\t\t\tif (lodash.isEqual(target[key as string], value)) return true;\n\t\t\tconst registeredGroup = listenerMap[`state#${key as string}`];\n\n\t\t\tif (registeredGroup) {\n\t\t\t\tObject.keys(registeredGroup).forEach((subscriptionId) => {\n\t\t\t\t\tregisteredGroup[subscriptionId]?.(value, target[key as string]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttarget[key as string] = value;\n\n\t\t\treturn true;\n\t\t},\n\t});\n\n\treturn new Proxy(duel, {\n\t\tset: (target, key, value) => {\n\t\t\tif (lodash.isEqual(target[key as string], value)) return true;\n\t\t\tconst registeredGroup = listenerMap[key as string];\n\n\t\t\tif (registeredGroup) {\n\t\t\t\tObject.keys(registeredGroup).forEach((subscriptionId) => {\n\t\t\t\t\tregisteredGroup[subscriptionId]?.(value, target[key as string]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttarget[key as string] = value;\n\n\t\t\treturn true;\n\t\t},\n\t});\n};\n\nexport interface System {\n\tuserId: string;\n\tmatchId: string;\n\tjwt: string;\n\tisSocketReady: boolean;\n\twinner?: string;\n\tplayerIds: PlayerIds;\n\tduel?: DuelProxy;\n\tpredict?: DuelState;\n\tcontext?: JwtPayload;\n\tconfig?: DuelConfig;\n\thistory?: DuelCommandBundle[];\n\thistoryLevel: number;\n\tglobalNodes: {\n\t\tduel?: Node;\n\t\tboard?: Node;\n\t\tfog?: Node;\n\t\tturnRibbon?: Node;\n\t\tduelRibbon?: Node;\n\t\tcardTemplate?: Node;\n\t\tcardPreview?: Node;\n\t\tunitPreview?: Node;\n\t\tunitTemplate?: Node;\n\t\tplayerDeck?: Node;\n\t\tenemyDeck?: Node;\n\t\tcenterExpo?: Node /* <- reference position for Exposing cards */;\n\t\tleftExpo?: Node;\n\t\trightExpo?: Node;\n\t\tplayerHand?: Node;\n\t\tenemyHand?: Node;\n\t\tplayerGround?: Node;\n\t\tenemyGround?: Node;\n\t\tplayerHandGuide?: Node;\n\t\tplayerGroundGuide?: Node;\n\t\tenemyHandGuide?: Node;\n\t\tenemyGroundGuide?: Node;\n\t\tsummonZoneGuide?: Node;\n\t\tplayerHealth?: Node;\n\t\tplayerHealthPredict?: Node;\n\t\tenemyHealth?: Node;\n\t\tenemyHealthPredict?: Node;\n\t};\n\taudioSource?: AudioSource;\n\tcardRefs: Record<string, Node>;\n\tisCommandAble: boolean;\n\tpreviewing: boolean;\n\tdragging: boolean;\n\tactiveCard?: Node;\n}\n\nconst defaultPlayer: PlayerState = {\n\tid: 'default',\n\thealth: defaultSetting.initialPlayerHealth,\n\tattack: 0,\n\tdefense: 0,\n\tperTurnHero: defaultSetting.perTurnHero,\n\tperTurnTroop: defaultSetting.perTurnTroop,\n\tperTurnDraw: defaultSetting.perTurnDraw,\n\tperTurnSpell: defaultSetting.perTurnSpell,\n};\n\nconst defaultDuel = {\n\tcardMap: {},\n\tstateMap: {},\n\tturn: 0,\n\tphase: DuelPhases.Draw,\n\tphaseOf: '',\n\tuniqueCardCount: 0,\n\tsetting: defaultSetting,\n\tfirstMover: '',\n\tfirstPlayer: defaultPlayer,\n\tsecondPlayer: defaultPlayer,\n\tfirstDeck: [],\n\tsecondDeck: [],\n\tfirstHand: [],\n\tsecondHand: [],\n\tfirstGround: [],\n\tsecondGround: [],\n\tfirstGrave: [],\n\tsecondGrave: [],\n};\n\nexport const system: System = {\n\tuserId: '',\n\tmatchId: '',\n\tjwt: '',\n\tplayerIds: {\n\t\tme: '',\n\t\tenemy: '',\n\t},\n\tduel: makeDuelProxy(defaultDuel),\n\tpredict: defaultDuel,\n\tisSocketReady: false,\n\tisCommandAble: false,\n\tcardRefs: {},\n\tglobalNodes: {},\n\thistory: [],\n\thistoryLevel: 0,\n\tpreviewing: false,\n\tdragging: false,\n};\n\nglobalThis.system = system;\n","import { BaseRenderData, color, Color, Enum, error, gfx, HorizontalTextAlignment, JsonAsset, Material, RenderData, renderer, SpriteFrame, StencilManager, Texture2D, UIRenderer, Vec2, Vec3, VerticalTextAlignment, _decorator } from \"cc\";\r\nimport { EDITOR, JSB } from \"cc/env\";\r\nimport TmpAssembler, { TmpLetterInfo } from \"./utils/TmpAssembler\";\r\nimport TmpFontConfig from \"./utils/TmpFontConfig\";\r\nimport TmpUtils from \"./utils/TmpUtils\";\r\n\r\nconst { ccclass, property, executeInEditMode } = _decorator;\r\n\r\nconst vfmt = [\r\n    new gfx.Attribute(gfx.AttributeName.ATTR_POSITION, gfx.Format.RGB32F),\r\n    new gfx.Attribute(gfx.AttributeName.ATTR_TEX_COORD, gfx.Format.RG32F),\r\n    new gfx.Attribute(gfx.AttributeName.ATTR_COLOR, gfx.Format.RGBA32F),\r\n    new gfx.Attribute(gfx.AttributeName.ATTR_COLOR2, gfx.Format.RGBA32F),\r\n    new gfx.Attribute(\"a_texture_idx\", gfx.Format.R32F)\r\n];\r\n\r\n/**\r\n * TextMeshPro的排版方式\r\n */\r\nexport enum TmpOverflow {\r\n    NONE,\r\n    CLAMP,\r\n    ELLIPSIS,\r\n    SHRINK,\r\n    RESIZE_HEIGHT\r\n}\r\n\r\n/**\r\n * TextMeshPro Uniform参数\r\n */\r\n@ccclass(\"TmpUniform\")\r\nexport class TmpUniform {\r\n    @property(Color)\r\n    private _faceColor: Color = Color.WHITE.clone();\r\n    @property({ tooltip: \"文本主体颜色\", type: Color })\r\n    public get faceColor(): Color { return this._faceColor; }\r\n    public set faceColor(v: Color) {\r\n        if (!EDITOR && this._faceColor === v) { return; }\r\n        this._faceColor = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatFace(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property\r\n    private _faceDilate: number = 0.5;\r\n    @property({ tooltip: \"文本主体厚度\", range: [0, 1, 0.01] })\r\n    public get faceDilate(): number { return this._faceDilate; }\r\n    public set faceDilate(v: number) {\r\n        if (!EDITOR && this._faceDilate === v) { return; }\r\n        this._faceDilate = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatFace(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property\r\n    private _faceSoftness: number = 0.01;\r\n    @property({ tooltip: \"文本主体柔和度\", range: [0, 1, 0.01] })\r\n    public get faceSoftness(): number { return this._faceSoftness; }\r\n    public set faceSoftness(v: number) {\r\n        if (!EDITOR && this._faceSoftness === v) { return; }\r\n        this._faceSoftness = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatFace(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property\r\n    private _enableOutline: boolean = false;\r\n    @property({ tooltip: \"是否启用描边效果\" })\r\n    public get enableOutline(): boolean { return this._enableOutline; }\r\n    public set enableOutline(v: boolean) {\r\n        if (!EDITOR && this._enableOutline === v) { return; }\r\n        this._enableOutline = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatOutline(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property(Color)\r\n    private _outlineColor: Color = color(255, 0, 0, 255);\r\n    @property({\r\n        tooltip: \"描边颜色\",\r\n        type: Color,\r\n        visible() { return this._enableOutline; }\r\n    })\r\n    public get outlineColor(): Color { return this._outlineColor; }\r\n    public set outlineColor(v: Color) {\r\n        if (!EDITOR && this._outlineColor === v) { return; }\r\n        this._outlineColor = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatOutline(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property\r\n    private _outlineThickness: number = 0.1;\r\n    @property({\r\n        tooltip: \"描边厚度\",\r\n        range: [0, 1, 0.01],\r\n        visible() { return this._enableOutline; }\r\n    })\r\n    public get outlineThickness(): number { return this._outlineThickness; }\r\n    public set outlineThickness(v: number) {\r\n        if (!EDITOR && this._outlineThickness === v) { return; }\r\n        this._outlineThickness = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatOutline(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property\r\n    private _enableUnderlay: boolean = false;\r\n    @property({ tooltip: \"是否启用阴影效果\" })\r\n    public get enableUnderlay(): boolean { return this._enableUnderlay; }\r\n    public set enableUnderlay(v: boolean) {\r\n        if (!EDITOR && this._enableUnderlay === v) { return; }\r\n        this._enableUnderlay = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatUnderlay(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property(Color)\r\n    private _underlayColor: Color = color(0, 0, 0, 255);\r\n    @property({\r\n        tooltip: \"阴影颜色\",\r\n        type: Color,\r\n        visible() { return this._enableUnderlay; }\r\n    })\r\n    public get underlayColor(): Color { return this._underlayColor; }\r\n    public set underlayColor(v: Color) {\r\n        if (!EDITOR && this._underlayColor === v) { return; }\r\n        this._underlayColor = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatUnderlay(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property(Vec2)\r\n    private _underlayOffset: Vec2 = new Vec2(0, 0);\r\n    @property({\r\n        tooltip: \"阴影偏移\",\r\n        type: Vec2,\r\n        range: [-1, 1],\r\n        visible() { return this._enableUnderlay; }\r\n    })\r\n    public get underlayOffset(): Vec2 { return this._underlayOffset; }\r\n    public set underlayOffset(v: Vec2) {\r\n        if (!EDITOR && this._underlayOffset === v) { return; }\r\n        this._underlayOffset = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatUnderlay(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property\r\n    private _underlayDilate: number = 0.5;\r\n    @property({\r\n        tooltip: \"阴影厚度\",\r\n        range: [0, 1, 0.01],\r\n        visible() { return this._enableUnderlay; }\r\n    })\r\n    public get underlayDilate(): number { return this._underlayDilate; }\r\n    public set underlayDilate(v: number) {\r\n        if (!EDITOR && this._underlayDilate === v) { return; }\r\n        this._underlayDilate = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatUnderlay(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property\r\n    private _underlaySoftness: number = 0.1;\r\n    @property({\r\n        tooltip: \"阴影柔和度\",\r\n        range: [0, 1, 0.01],\r\n        visible() { return this._enableUnderlay; }\r\n    })\r\n    public get underlaySoftness(): number { return this._underlaySoftness; }\r\n    public set underlaySoftness(v: number) {\r\n        if (!EDITOR && this._underlaySoftness === v) { return; }\r\n        this._underlaySoftness = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatUnderlay(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property\r\n    private _enableGlow: boolean = false;\r\n    @property({ tooltip: \"是否启用辉光效果\" })\r\n    public get enableGlow(): boolean { return this._enableGlow; }\r\n    public set enableGlow(v: boolean) {\r\n        if (!EDITOR && this._enableGlow === v) { return; }\r\n        this._enableGlow = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatGlow(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property(Color)\r\n    private _glowColor: Color = color(0, 255, 0, 255);\r\n    @property({\r\n        tooltip: \"辉光颜色\",\r\n        type: Color,\r\n        visible() { return this._enableGlow; }\r\n    })\r\n    public get glowColor(): Color { return this._glowColor; }\r\n    public set glowColor(v: Color) {\r\n        if (!EDITOR && this._glowColor === v) { return; }\r\n        this._glowColor = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatGlow(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property\r\n    private _glowOffset: number = 0.5;\r\n    @property({\r\n        tooltip: \"辉光偏移\",\r\n        range: [0, 1, 0.01],\r\n        visible() { return this._enableGlow; }\r\n    })\r\n    public get glowOffset(): number { return this._glowOffset; }\r\n    public set glowOffset(v: number) {\r\n        if (!EDITOR && this._glowOffset === v) { return; }\r\n        this._glowOffset = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatGlow(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property\r\n    private _glowInner: number = 0.01;\r\n    @property({\r\n        tooltip: \"辉光向内的厚度\",\r\n        range: [0, 1, 0.01],\r\n        visible() { return this._enableGlow; }\r\n    })\r\n    public get glowInner(): number { return this._glowInner; }\r\n    public set glowInner(v: number) {\r\n        if (!EDITOR && this._glowInner === v) { return; }\r\n        this._glowInner = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatGlow(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property\r\n    private _glowOuter: number = 0.01;\r\n    @property({\r\n        tooltip: \"辉光向外的厚度\",\r\n        range: [0, 1, 0.01],\r\n        visible() { return this._enableGlow; }\r\n    })\r\n    public get glowOuter(): number { return this._glowOuter; }\r\n    public set glowOuter(v: number) {\r\n        if (!EDITOR && this._glowOuter === v) { return; }\r\n        this._glowOuter = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatGlow(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    @property\r\n    private _glowPower: number = 1;\r\n    @property({\r\n        tooltip: \"辉光强度\",\r\n        range: [0, 1, 0.01],\r\n        visible() { return this._enableGlow; }\r\n    })\r\n    public get glowPower(): number { return this._glowPower; }\r\n    public set glowPower(v: number) {\r\n        if (!EDITOR && this._glowPower === v) { return; }\r\n        this._glowPower = v;\r\n        if (!this._comp) { return; }\r\n        this._comp.updateTmpMatGlow(this._comp.getMaterialInstance(0));\r\n    }\r\n\r\n    private _comp: TextMeshPro = null;\r\n    public get comp(): TextMeshPro { return this._comp; }\r\n\r\n    public init(text: TextMeshPro) {\r\n        this._comp = text;\r\n\r\n        let material = this._comp.getMaterialInstance(0);\r\n        this._comp.updateTmpMatFace(material);\r\n        this._comp.updateTmpMatOutline(material);\r\n        this._comp.updateTmpMatUnderlay(material);\r\n        this._comp.updateTmpMatGlow(material);\r\n    }\r\n}\r\n\r\n@ccclass(\"TextMeshPro\")\r\n@executeInEditMode\r\nexport default class TextMeshPro extends UIRenderer {\r\n\r\n    @property\r\n    private _string: string = \"\";\r\n    @property({ multiline: true })\r\n    public get string(): string { return this._string; }\r\n    public set string(v: string) {\r\n        if (!EDITOR && this._string === v) { return; }\r\n        this._string = v;\r\n        this.markForUpdateRenderData();\r\n    }\r\n\r\n    @property(JsonAsset)\r\n    private _font: JsonAsset = null;\r\n    @property({ tooltip: \"字体资源\\n依赖的纹理请勿打入图集\\n在编辑器内拖拽此文件时，纹理必须和此文件处于同一目录下\", type: JsonAsset })\r\n    private get font(): JsonAsset { return this._font; }\r\n    private set font(v: JsonAsset) {\r\n        if (!EDITOR && this._font === v) { return; }\r\n        this._font = v;\r\n        if (EDITOR) {\r\n            this.editorInit();\r\n        } else {\r\n            if (this._renderData) {\r\n                this.destroyRenderData();\r\n                this._renderData = null;\r\n            }\r\n            this.updateRenderData(true);\r\n        }\r\n    }\r\n\r\n    @property({ type: HorizontalTextAlignment })\r\n    private _horizontalAlign: HorizontalTextAlignment = HorizontalTextAlignment.LEFT;\r\n    @property({ type: HorizontalTextAlignment })\r\n    public get horizontalAlign(): HorizontalTextAlignment { return this._horizontalAlign; }\r\n    public set horizontalAlign(v: HorizontalTextAlignment) {\r\n        if (!EDITOR && this._horizontalAlign === v) { return; }\r\n        this._horizontalAlign = v;\r\n        this.markForUpdateRenderData();\r\n    }\r\n\r\n    @property({ type: VerticalTextAlignment })\r\n    private _verticalAlign: VerticalTextAlignment = VerticalTextAlignment.TOP;\r\n    @property({ type: VerticalTextAlignment })\r\n    public get verticalAlign(): VerticalTextAlignment { return this._verticalAlign; }\r\n    public set verticalAlign(v: VerticalTextAlignment) {\r\n        if (!EDITOR && this._verticalAlign === v) { return; }\r\n        this._verticalAlign = v;\r\n        this.markForUpdateRenderData();\r\n    }\r\n\r\n    @property\r\n    private _actualFontSize: number = 0;\r\n    @property({ visible() { return this._overflow === TmpOverflow.SHRINK; } })\r\n    public get actualFontSize(): number { return this._actualFontSize; }\r\n\r\n    @property\r\n    public get bmfontOriginalSize(): number { return this.font ? this.font.json[\"size\"] : -1; }\r\n\r\n    @property\r\n    private _fontSize: number = 32;\r\n    @property({ range: [0, 1024] })\r\n    public get fontSize(): number { return this._fontSize; }\r\n    public set fontSize(v: number) {\r\n        if (!EDITOR && this._fontSize === v) { return; }\r\n        this._fontSize = v;\r\n        this.markForUpdateRenderData();\r\n    }\r\n\r\n    @property\r\n    private _lineHeight: number = 32;\r\n    @property\r\n    public get lineHeight(): number { return this._lineHeight; }\r\n    public set lineHeight(v: number) {\r\n        if (!EDITOR && this._lineHeight === v) { return; }\r\n        this._lineHeight = v;\r\n        this.markForUpdateRenderData();\r\n    }\r\n\r\n    @property\r\n    private _spacingX: number = 0;\r\n    @property\r\n    public get spacingX(): number { return this._spacingX; }\r\n    public set spacingX(v: number) {\r\n        if (!EDITOR && this._spacingX === v) { return; }\r\n        this._spacingX = v;\r\n        this.markForUpdateRenderData();\r\n    }\r\n\r\n    @property({ type: Enum(TmpOverflow) })\r\n    private _overflow: TmpOverflow = TmpOverflow.NONE;\r\n    @property({ tooltip: \"文本的排版方式\", type: Enum(TmpOverflow) })\r\n    public get overflow(): TmpOverflow { return this._overflow; }\r\n    public set overflow(v: TmpOverflow) {\r\n        if (!EDITOR && this._overflow === v) { return; }\r\n        this._overflow = v;\r\n        this.markForUpdateRenderData();\r\n    }\r\n\r\n    @property\r\n    private _enableWrapText: boolean = true;\r\n    @property({\r\n        tooltip: \"是否启用自动换行\",\r\n        visible() {\r\n            return this._overflow === TmpOverflow.CLAMP || this._overflow === TmpOverflow.ELLIPSIS;\r\n        }\r\n    })\r\n    public get enableWrapText(): boolean { return this._enableWrapText; }\r\n    public set enableWrapText(v: boolean) {\r\n        if (!EDITOR && this._enableWrapText === v) { return; }\r\n        this._enableWrapText = v;\r\n        this.markForUpdateRenderData();\r\n    }\r\n\r\n    @property\r\n    private _enableItalic: boolean = false;\r\n    @property({ tooltip: \"是否启用斜体\" })\r\n    public get enableItalic(): boolean { return this._enableItalic; }\r\n    public set enableItalic(v: boolean) {\r\n        if (!EDITOR && this._enableItalic === v) { return; }\r\n        this._enableItalic = v;\r\n        this.markForUpdateRenderData();\r\n    }\r\n\r\n    @property\r\n    private _enableUnderline: boolean = false;\r\n    @property({ tooltip: \"是否启用下划线\" })\r\n    public get enableUnderline(): boolean { return this._enableUnderline; }\r\n    public set enableUnderline(v: boolean) {\r\n        if (!EDITOR && this._enableUnderline === v) { return; }\r\n        this._enableUnderline = v;\r\n        this.markForUpdateRenderData();\r\n    }\r\n\r\n    @property\r\n    private _underlineOffset: number = 0;\r\n    @property({\r\n        tooltip: \"下划线高度偏移\",\r\n        visible() { return this._enableUnderline; }\r\n    })\r\n    public get underlineOffset(): number { return this._underlineOffset; }\r\n    public set underlineOffset(v: number) {\r\n        if (!EDITOR && this._underlineOffset === v) { return; }\r\n        this._underlineOffset = v;\r\n        this.markForUpdateRenderData();\r\n    }\r\n\r\n    @property\r\n    private _enableStrikethrough: boolean = false;\r\n    @property({ tooltip: \"是否启用删除线\" })\r\n    public get enableStrikethrough(): boolean { return this._enableStrikethrough; }\r\n    public set enableStrikethrough(v: boolean) {\r\n        if (!EDITOR && this._enableStrikethrough === v) { return; }\r\n        this._enableStrikethrough = v;\r\n        this.markForUpdateRenderData();\r\n    }\r\n\r\n    @property\r\n    private _strikethroughOffset: number = 0;\r\n    @property({\r\n        tooltip: \"删除线高度偏移\",\r\n        visible() { return this._enableStrikethrough; }\r\n    })\r\n    public get strikethroughOffset(): number { return this._strikethroughOffset; }\r\n    public set strikethroughOffset(v: number) {\r\n        if (!EDITOR && this._strikethroughOffset === v) { return; }\r\n        this._strikethroughOffset = v;\r\n        this.markForUpdateRenderData();\r\n    }\r\n\r\n    @property\r\n    private _colorGradient: boolean = false;\r\n    @property({ tooltip: \"是否启用颜色渐变，会和顶点颜色混合为最终的顶点颜色\" })\r\n    public get colorGradient(): boolean { return this._colorGradient; }\r\n    public set colorGradient(v: boolean) {\r\n        if (!EDITOR && this._colorGradient === v) { return; }\r\n        this._colorGradient = v;\r\n        this._colorExtraDirty = true;\r\n    }\r\n\r\n    @property(Color)\r\n    private _colorLB: Color = Color.WHITE.clone();\r\n    @property({\r\n        tooltip: \"左下顶点\", type: Color,\r\n        visible() { return this._colorGradient; }\r\n    })\r\n    public get colorLB(): Color { return this._colorLB; }\r\n    public set colorLB(v: Color) {\r\n        if (!EDITOR && this._colorLB === v) { return; }\r\n        this._colorLB = v;\r\n        this._colorExtraDirty = true;\r\n    }\r\n\r\n    @property(Color)\r\n    private _colorRB: Color = Color.WHITE.clone();\r\n    @property({\r\n        tooltip: \"右下顶点\", type: Color,\r\n        visible() { return this._colorGradient; }\r\n    })\r\n    public get colorRB(): Color { return this._colorRB; }\r\n    public set colorRB(v: Color) {\r\n        if (!EDITOR && this._colorRB === v) { return; }\r\n        this._colorRB = v;\r\n        this._colorExtraDirty = true;\r\n    }\r\n\r\n    @property(Color)\r\n    private _colorLT: Color = Color.WHITE.clone();\r\n    @property({\r\n        tooltip: \"左上顶点\", type: Color,\r\n        visible() { return this._colorGradient; }\r\n    })\r\n    public get colorLT(): Color { return this._colorLT; }\r\n    public set colorLT(v: Color) {\r\n        if (!EDITOR && this._colorLT === v) { return; }\r\n        this._colorLT = v;\r\n        this._colorExtraDirty = true;\r\n    }\r\n\r\n    @property(Color)\r\n    private _colorRT: Color = Color.WHITE.clone();\r\n    @property({\r\n        tooltip: \"右上顶点\", type: Color,\r\n        visible() { return this._colorGradient; }\r\n    })\r\n    public get colorRT(): Color { return this._colorRT; }\r\n    public set colorRT(v: Color) {\r\n        if (!EDITOR && this._colorRT === v) { return; }\r\n        this._colorRT = v;\r\n        this._colorExtraDirty = true;\r\n    }\r\n\r\n    @property({ tooltip: \"材质参数\", type: TmpUniform })\r\n    public tmpUniform: TmpUniform = new TmpUniform();\r\n\r\n    @property({ tooltip: \"字体所依赖的纹理\", type: Texture2D, readonly: true })\r\n    public textures: Texture2D[] = [];\r\n\r\n    private _fontConfig: TmpFontConfig = null;\r\n    /** 字体配置管理 */\r\n    public get fontConfig(): TmpFontConfig { return this._fontConfig; }\r\n\r\n    /** 每个字符的渲染数据，与string并不一定一一对应 */\r\n    private _lettersInfo: TmpLetterInfo[] = [];\r\n    public get lettersInfo(): TmpLetterInfo[] { return this._lettersInfo; }\r\n\r\n    protected _assembler: typeof TmpAssembler = null;\r\n    private _colorExtraDirty: boolean = false;\r\n\r\n    private _richTextDeltaX: number = 0;\r\n    /** 记录letterRight与nextTokenX的差值，供富文本排版使用 */\r\n    public get richTextDeltaX(): number { return this._richTextDeltaX; }\r\n\r\n    private editorInit(): void {\r\n        if (EDITOR) {\r\n            // 加载图集\r\n            if (!this._font || !this._font[\"_uuid\"]) {\r\n                this.textures = [];\r\n                this.updateRenderData(true);\r\n                return;\r\n            }\r\n            // log(this._font);\r\n            //@ts-ignore\r\n            Editor.Message.request(\"asset-db\", \"query-url\", this._font[\"_uuid\"]).then((url: string) => {\r\n                // log(url);\r\n                if (!url) {\r\n                    return;\r\n                }\r\n                let start = 12;\r\n                let end = url.lastIndexOf(\"/\");\r\n                let dir = url.slice(start, end + 1);\r\n                let arr: Promise<Texture2D>[] = [];\r\n                this._font.json[\"pageData\"].forEach((v) => {\r\n                    let imgUrl = dir + v.file + \"/texture\";\r\n                    arr.push(TmpUtils.load<Texture2D>(imgUrl));\r\n                });\r\n                Promise.all(arr).then((v) => {\r\n                    this.textures = v;\r\n                    this._fontConfig = new TmpFontConfig(this._font.json, this.textures);\r\n\r\n                    if (this._renderData) {\r\n                        this.destroyRenderData();\r\n                        this._renderData = null;\r\n                    }\r\n                    this.updateRenderData(true);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    public resetInEditor(): void {\r\n        if (EDITOR) {\r\n            TmpUtils.load<Material>(TmpUtils.TMP_MAT).then((mat) => {\r\n                if (mat) {\r\n                    this.customMaterial = mat;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public onLoad(): void {\r\n        super.onLoad();\r\n        if (!this.customMaterial) {\r\n            this.resetInEditor();\r\n        }\r\n        this.tmpUniform.init(this);\r\n        if (!this._fontConfig && this.font && this.textures.length > 0) {\r\n            this._fontConfig = new TmpFontConfig(this._font.json, this.textures);\r\n        }\r\n    }\r\n\r\n    public onEnable(): void {\r\n        super.onEnable();\r\n        this._applyFontTexture();\r\n    }\r\n\r\n    public lateUpdate(dt: number): void {\r\n        if (this._colorExtraDirty) {\r\n            this._colorExtraDirty = false;\r\n            this._assembler.updateColorExtra(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Request new render data object.\r\n     * @zh 请求新的渲染数据对象。\r\n     * @return The new render data\r\n     */\r\n    public requestRenderData(drawInfoType = 0) {\r\n        const data = RenderData.add(vfmt);\r\n        data.initRenderDrawInfo(this, drawInfoType);\r\n        this._renderData = data;\r\n        return data;\r\n    }\r\n\r\n    public updateRenderData(force: boolean = false) {\r\n        if (force) {\r\n            this._flushAssembler();\r\n            // Hack: Fixed the bug that richText wants to get the label length by _measureText,\r\n            // _assembler.updateRenderData will update the content size immediately.\r\n            if (this.renderData) { this.renderData.vertDirty = true; }\r\n            this._applyFontTexture();\r\n        }\r\n        if (this._assembler) {\r\n            this._assembler.updateRenderData(this);\r\n        }\r\n    }\r\n\r\n    protected _render(render: any) {\r\n        // render.commitComp(this, this.renderData, this.textures[0], this._assembler!, null);\r\n        this.commitComp(render, this, this.renderData, this.textures[0], this._assembler!, null);\r\n    }\r\n\r\n    /**\r\n     * 合批hack\r\n     */\r\n    private commitComp(render: any, comp: TextMeshPro, renderData: BaseRenderData | null, frame: Texture2D | SpriteFrame | null, assembler, transform: Node | null) {\r\n        let dataHash = 0;\r\n        let mat: Material;\r\n        let bufferID = -1;\r\n        if (renderData && renderData.chunk) {\r\n            if (!renderData.isValid()) return;\r\n            dataHash = renderData.dataHash;\r\n            mat = renderData.material;\r\n            bufferID = renderData.chunk.bufferId;\r\n        }\r\n        comp.stencilStage = StencilManager.sharedManager!.stage;\r\n        const depthStencilStateStage = comp.stencilStage;\r\n\r\n        // 判断材质宏与参数是否一致\r\n        let isMatEqual = true;\r\n        let tmpMatDefine = 0;\r\n        if (comp.tmpUniform.enableOutline) { tmpMatDefine |= 1 << 0; }\r\n        if (comp.tmpUniform.enableUnderlay) { tmpMatDefine |= 1 << 1; }\r\n        if (comp.tmpUniform.enableGlow) { tmpMatDefine |= 1 << 2; }\r\n        if (render._currMaterial !== mat) {\r\n            if (((mat instanceof renderer.MaterialInstance) && render._currMaterial.parent !== mat.parent) ||\r\n                (!(mat instanceof renderer.MaterialInstance) && render._currMaterial.parent !== mat) ||\r\n                render._currTmpMatDefine !== tmpMatDefine) {\r\n                isMatEqual = false\r\n            }\r\n            if (isMatEqual) {\r\n                let arr = [\"texture0\", \"texture1\", \"texture2\", \"texture3\", \"texture4\", \"texture5\", \"texture6\", \"texture7\",\r\n                    \"faceColor\", \"faceDilate\", \"faceSoftness\",\r\n                    \"outlineColor\", \"outlineThickness\",\r\n                    \"underlayColor\", \"underlayOffsetX\", \"underlayOffsetY\", \"underlayDilate\", \"underlaySoftness\",\r\n                    \"glowColor\", \"glowOffset\", \"glowInner\", \"glowOuter\", \"glowPower\"\r\n                ];\r\n                let renderMat = comp.getRenderMaterial(0);\r\n                for (let i = 0; i < arr.length; i++) {\r\n                    const propName = arr[i];\r\n                    let v1 = renderMat.getProperty(propName);\r\n                    let v2 = render._currMaterial.getProperty(propName);\r\n                    if (v1 instanceof Color && v2 instanceof Color && v1.equals(v2)) {\r\n                        continue;\r\n                    }\r\n                    if (v1 !== v2) {\r\n                        isMatEqual = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (render._currHash !== dataHash || dataHash === 0 || !isMatEqual//render._currMaterial !== mat\r\n            || render._currDepthStencilStateStage !== depthStencilStateStage) {\r\n            // Merge all previous data to a render batch, and update buffer for next render data\r\n            render.autoMergeBatches(render._currComponent!);\r\n            if (renderData && !renderData._isMeshBuffer) {\r\n                render.updateBuffer(renderData.vertexFormat, bufferID);\r\n            }\r\n\r\n            // 标记宏定义开关\r\n            render._currTmpMatDefine = tmpMatDefine;\r\n\r\n            render._currRenderData = renderData;\r\n            render._currHash = renderData ? renderData.dataHash : 0;\r\n            render._currComponent = comp;\r\n            render._currTransform = transform;\r\n            render._currMaterial = comp.getRenderMaterial(0)!;\r\n            render._currDepthStencilStateStage = depthStencilStateStage;\r\n            render._currLayer = comp.node.layer;\r\n            if (frame) {\r\n                render._currTexture = frame.getGFXTexture();\r\n                render._currSampler = frame.getGFXSampler();\r\n                render._currTextureHash = frame.getHash();\r\n                render._currSamplerHash = render._currSampler.hash;\r\n            } else {\r\n                render._currTexture = null;\r\n                render._currSampler = null;\r\n                render._currTextureHash = 0;\r\n                render._currSamplerHash = 0;\r\n            }\r\n        }\r\n\r\n        assembler.fillBuffers(comp, render);\r\n    }\r\n\r\n    // Cannot use the base class methods directly because BMFont and CHAR cannot be updated in assambler with just color.\r\n    protected _updateColor() {\r\n        super._updateColor();\r\n        this.markForUpdateRenderData();\r\n    }\r\n\r\n    public setEntityColor(color: Color) {\r\n        if (JSB) {\r\n            this._renderEntity.color = color;\r\n        }\r\n    }\r\n\r\n    protected _canRender() {\r\n        if (!super._canRender() || !this._string) {\r\n            return false;\r\n        }\r\n\r\n        if (!this.fontConfig || this.textures.length <= 0) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected _flushAssembler() {\r\n        const assembler = TmpAssembler;\r\n\r\n        if (this._assembler !== assembler) {\r\n            this.destroyRenderData();\r\n            this._assembler = assembler;\r\n        }\r\n\r\n        if (!this._renderData) {\r\n            if (this._assembler && this._assembler.createData) {\r\n                this._renderData = this._assembler.createData(this);\r\n                this._renderData!.material = this.material;\r\n                this._updateColor();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _applyFontTexture(): void {\r\n        this.markForUpdateRenderData();\r\n        if (this.textures.length > 0) {\r\n            if (this.renderData) {\r\n                // this.renderData.textureDirty = true;\r\n            }\r\n            this.changeMaterialForDefine();\r\n            if (this._assembler) {\r\n                this._assembler.updateRenderData(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected changeMaterialForDefine() {\r\n        if (this.textures.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.updateMaterial();\r\n    }\r\n\r\n    protected updateMaterial(): void {\r\n        if (!this._customMaterial) {\r\n            return;\r\n        }\r\n        this.setMaterial(this._customMaterial, 0);\r\n\r\n        // 更新材质参数\r\n        let material = this.getMaterialInstance(0);\r\n        this._updateTmpMatTexture(material);\r\n        if (!this.tmpUniform || !this.tmpUniform.comp) {\r\n            return;\r\n        }\r\n        this.updateTmpMatFace(material);\r\n        this.updateTmpMatOutline(material);\r\n        this.updateTmpMatUnderlay(material);\r\n        this.updateTmpMatGlow(material);\r\n    }\r\n\r\n    private _updateTmpMatTexture(material: renderer.MaterialInstance): void {\r\n        if (!material || this.textures.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        material.recompileShaders({\r\n            \"USE_TEXTURE_LEVEL_1\": this.textures.length > 0,\r\n            \"USE_TEXTURE_LEVEL_2\": this.textures.length > 1,\r\n            \"USE_TEXTURE_LEVEL_3\": this.textures.length > 2,\r\n            \"USE_TEXTURE_LEVEL_4\": this.textures.length > 4\r\n        });\r\n\r\n        for (let i = 0; i < this.textures.length; i++) {\r\n            material.setProperty(`texture${i}`, this.textures[i]);\r\n        }\r\n    }\r\n\r\n    public updateTmpMatFace(material: renderer.MaterialInstance): void {\r\n        if (!material) {\r\n            return;\r\n        }\r\n        material.setProperty(\"faceColor\", this.tmpUniform.faceColor);\r\n        material.setProperty(\"faceDilate\", this.tmpUniform.faceDilate);\r\n        material.setProperty(\"faceSoftness\", this.tmpUniform.faceSoftness);\r\n    }\r\n\r\n    public updateTmpMatOutline(material: renderer.MaterialInstance): void {\r\n        if (!material) {\r\n            return;\r\n        }\r\n\r\n        material.recompileShaders({ \"USE_OUTLINE\": this.tmpUniform.enableOutline });\r\n\r\n        if (this.tmpUniform.enableOutline) {\r\n            material.setProperty(\"outlineColor\", this.tmpUniform.outlineColor);\r\n            material.setProperty(\"outlineThickness\", this.tmpUniform.outlineThickness);\r\n        }\r\n    }\r\n\r\n    public updateTmpMatUnderlay(material: renderer.MaterialInstance): void {\r\n        if (!material) {\r\n            return;\r\n        }\r\n\r\n        material.recompileShaders({ \"USE_UNDERLAY\": this.tmpUniform.enableUnderlay });\r\n\r\n        if (this.tmpUniform.enableUnderlay) {\r\n            material.setProperty(\"underlayColor\", this.tmpUniform.underlayColor);\r\n            material.setProperty(\"underlayOffsetX\", this.tmpUniform.underlayOffset.x);\r\n            material.setProperty(\"underlayOffsetY\", this.tmpUniform.underlayOffset.y);\r\n            material.setProperty(\"underlayDilate\", this.tmpUniform.underlayDilate);\r\n            material.setProperty(\"underlaySoftness\", this.tmpUniform.underlaySoftness);\r\n        }\r\n    }\r\n\r\n    public updateTmpMatGlow(material: renderer.MaterialInstance): void {\r\n        if (!material) {\r\n            return;\r\n        }\r\n\r\n        material.recompileShaders({ \"USE_GLOW\": this.tmpUniform.enableGlow });\r\n\r\n        if (this.tmpUniform.enableGlow) {\r\n            material.setProperty(\"glowColor\", this.tmpUniform.glowColor);\r\n            material.setProperty(\"glowOffset\", this.tmpUniform.glowOffset);\r\n            material.setProperty(\"glowInner\", this.tmpUniform.glowInner);\r\n            material.setProperty(\"glowOuter\", this.tmpUniform.glowOuter);\r\n            material.setProperty(\"glowPower\", this.tmpUniform.glowPower);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 立即更新渲染数据\r\n     */\r\n    public forceUpdateRenderData(): void {\r\n        this.updateRenderData(true);\r\n    }\r\n\r\n    /**\r\n     * 设置字体，必须调用此接口去动态设置字体\r\n     */\r\n    public setFont(font: JsonAsset, textures: Texture2D[]): void {\r\n        if (!font || textures.length < 0) {\r\n            error(`params error!`);\r\n            return;\r\n        }\r\n\r\n        this._font = font;\r\n        this.textures = textures;\r\n        this._fontConfig = new TmpFontConfig(this._font.json, this.textures);\r\n        if (!this.enabledInHierarchy) { return; }\r\n        this.updateRenderData(true);\r\n    }\r\n\r\n    //#region 顶点数据操作接口，必须保证组件启用且节点激活才可使用这些接口\r\n    /**\r\n     * 根据字符下标判断此字符是否可见\r\n     */\r\n    public isVisible(index: number): boolean {\r\n        if (!this.enabledInHierarchy) { return false; }\r\n        return this._assembler.isVisble(this, index);\r\n    }\r\n\r\n    /**\r\n     * 根据字符下标设置字符是否可见\r\n     */\r\n    public setVisible(index: number, visible: boolean): void {\r\n        if (!this.enabledInHierarchy) { return; }\r\n        this._assembler.setVisible(this, index, visible);\r\n    }\r\n\r\n    /**\r\n     * 根据字符下标获取颜色顶点数据，顺序为[左下, 右下, 左上, 右上]\r\n     */\r\n    public getColorExtraVertices(index: number): [Color, Color, Color, Color] | null {\r\n        if (!this.enabledInHierarchy) { return null; }\r\n        return this._assembler.getColorExtraVertices(this, index);\r\n    }\r\n\r\n    /**\r\n     * 根据字符下标设置颜色顶点数据，会和节点颜色混合为最终的顶点颜色，顺序为[左下, 右下, 左上, 右上]\r\n     */\r\n    public setColorExtraVertices(index: number, data: [Color, Color, Color, Color]): void {\r\n        if (!this.enabledInHierarchy) { return; }\r\n        this._assembler.setColorExtraVertices(this, index, data);\r\n    }\r\n\r\n    /**\r\n     * 根据字符下标获取坐标顶点数据，顺序为[左下, 右下, 左上, 右上]\r\n     */\r\n    public getPosVertices(index: number): [Vec3, Vec3, Vec3, Vec3] | null {\r\n        if (!this.enabledInHierarchy) { return null; }\r\n        return this._assembler.getPosVertices(this, index);\r\n    }\r\n\r\n    /**\r\n     * 根据字符下标设置坐标顶点数据，顺序为[左下, 右下, 左上, 右上]\r\n     */\r\n    public setPosVertices(index: number, data: [Vec3, Vec3, Vec3, Vec3]): void {\r\n        if (!this.enabledInHierarchy) { return; }\r\n        this._assembler.setPosVertices(this, index, data);\r\n    }\r\n    //#endregion\r\n}\r\n","import { Color, HorizontalTextAlignment, log, Mat4, misc, Rect, rect, size, UITransform, v2, Vec2, Vec3, VerticalTextAlignment } from \"cc\";\r\nimport { JSB } from \"cc/env\";\r\nimport TextMeshPro, { TmpOverflow } from \"../TextMeshPro\";\r\nimport TmpFontConfig, { TmpFontLetter } from \"./TmpFontConfig\";\r\nimport TmpUtils from \"./TmpUtils\";\r\n\r\nconst tempColor = new Color(255, 255, 255, 255);\r\nconst vec3_temp = new Vec3();\r\nconst _worldMatrix = new Mat4();\r\n\r\nconst WHITE = Color.WHITE;\r\n/** 斜体倾斜弧度值 */\r\nconst ITALIC_REDIANS = misc.degreesToRadians(15);\r\n/** 下划线字符code */\r\nconst UNDERLINE_CODE = 95;\r\n/** 省略号字符code */\r\nconst ELLIPSIS_CODE = 46;\r\nconst ELLIPSIS_CHAR = \".\";\r\nconst ELLIPSIS_NUM = 3;\r\n\r\n// share data of bmfont\r\nlet shareLabelInfo = {\r\n    fontAtlas: null as TmpFontConfig,\r\n\r\n    fontSize: 0,\r\n    lineHeight: 0,\r\n    hAlign: 0,\r\n    vAlign: 0,\r\n\r\n    hash: \"\",\r\n    margin: 0,\r\n};\r\n\r\nlet _comp: TextMeshPro = null;\r\nlet _uiTrans: UITransform | null = null;\r\nlet _tmpUvRect = rect();\r\nlet _tmpPosRect = rect();\r\nlet _horizontalKernings = [];\r\nlet _linesWidth = [];\r\nlet _linesOffsetX = [];\r\n\r\nlet _fntConfig: TmpFontConfig = null;\r\nlet _numberOfLines = 0;\r\nlet _textDesiredHeight = 0;\r\nlet _letterOffsetY = 0;\r\nlet _tailoredTopY = 0;\r\nlet _tailoredBottomY = 0;\r\nlet _bmfontScale = 1.0;\r\n\r\nlet _lineBreakWithoutSpaces = false;\r\nlet _lineSpacing = 0;\r\nlet _contentSize = size(0, 0);\r\nlet _string = \"\";\r\nlet _fontSize = 0;\r\nlet _originFontSize = 0;\r\nlet _hAlign = 0;\r\nlet _vAlign = 0;\r\nlet _spacingX = 0;\r\nlet _lineHeight = 0;\r\nlet _overflow: TmpOverflow = 0;\r\nlet _isWrapText = false;\r\nlet _labelWidth = 0;\r\nlet _labelHeight = 0;\r\nlet _maxLineWidth = 0;\r\nlet QUAD_INDICES;\r\n\r\n/** 斜体计算向量 */\r\nlet _italicVec = v2();\r\n/** 画下划线、删除线所需的数据 */\r\nlet _extraLinesData: { [lineIndex: number]: { lineIndex: number, first: any, last: any } } = {};\r\nlet _extraLineDef: TmpFontLetter = null;\r\n/** 省略号所需的数据 */\r\nlet _ellipsisDef: TmpFontLetter = null;\r\nlet _ellipsisWidth: number = 0;\r\n\r\n/**\r\n * 字符渲染数据\r\n */\r\nexport class TmpLetterInfo {\r\n    /** 标记字符是否需要渲染 */\r\n    public valid = true;\r\n    public char = \"\";\r\n    public x = 0;\r\n    public y = 0;\r\n    public line = 0;\r\n    public hash = \"\";\r\n    /** 标记处于需要渲染的字符中的第几位 */\r\n    public quadsIndex = 0;\r\n    /** 主动设置字符是否可见 */\r\n    public visible = true;\r\n}\r\n\r\n/**\r\n * TextMeshPro顶点数据管理\r\n */\r\nexport default class TmpAssembler {\r\n    /** 每个顶点的数据长度 */\r\n    protected static floatsPerVert: number = 14;\r\n    protected static verticesCount: number = 4;\r\n    protected static indicesCount: number = 6;\r\n    protected static uvOffset: number = 3;\r\n    protected static colorOffset: number = 5;\r\n    protected static colorExtraOffset: number = 9;\r\n    protected static textureIdxOffset: number = 13;\r\n\r\n    static createData(comp: TextMeshPro) {\r\n        return comp.requestRenderData();\r\n    }\r\n\r\n    static fillBuffers(comp: TextMeshPro, renderer: any) {\r\n        const node = comp.node;\r\n        tempColor.set(comp.color);\r\n        tempColor.a = node._uiProps.opacity * 255;\r\n        // Fill All\r\n        const chunk = comp.renderData.chunk;\r\n        const dataList = comp.renderData.data;\r\n        const vData = chunk.vb;\r\n        const vertexCount = comp.renderData.vertexCount;\r\n\r\n        node.getWorldMatrix(_worldMatrix);\r\n\r\n        let vertexOffset = 0;\r\n        for (let i = 0; i < vertexCount; i++) {\r\n            const vert = dataList[i];\r\n            Vec3.set(vec3_temp, vert.x, vert.y, 0);\r\n            Vec3.transformMat4(vec3_temp, vec3_temp, _worldMatrix);\r\n            vData[vertexOffset++] = vec3_temp.x;\r\n            vData[vertexOffset++] = vec3_temp.y;\r\n            vData[vertexOffset++] = vec3_temp.z;\r\n            Color.toArray(vData, tempColor, vertexOffset + 2);\r\n            Color.toArray(vData, vert[\"colorExtra\"], vertexOffset + 6);\r\n            vertexOffset += 11;\r\n        }\r\n\r\n        // fill index data\r\n        const bid = chunk.bufferId;\r\n        const vid = chunk.vertexOffset;\r\n        const meshBuffer = chunk.meshBuffer;\r\n        const ib = chunk.meshBuffer.iData;\r\n        let indexOffset = meshBuffer.indexOffset;\r\n        for (let i = 0, count = vertexCount / 4; i < count; i++) {\r\n            const start = vid + i * 4;\r\n            ib[indexOffset++] = start;\r\n            ib[indexOffset++] = start + 1;\r\n            ib[indexOffset++] = start + 2;\r\n            ib[indexOffset++] = start + 1;\r\n            ib[indexOffset++] = start + 3;\r\n            ib[indexOffset++] = start + 2;\r\n        }\r\n        meshBuffer.indexOffset += comp.renderData.indexCount;\r\n        meshBuffer.setDirty();\r\n    }\r\n\r\n    /**\r\n     * 执行一次渲染数据更新\r\n     */\r\n    public static updateRenderData(comp: TextMeshPro): void {\r\n        if (!comp.renderData) { return; }\r\n        if (_comp === comp) { return; }\r\n        if (!comp.fontConfig) { return; }\r\n\r\n        if (comp.renderData.vertDirty) {\r\n            _comp = comp;\r\n            _uiTrans = _comp.node._uiProps.uiTransformComp!;\r\n\r\n            comp.lettersInfo.length = 0;\r\n            this._updateProperties(comp);\r\n            this._updateContent();\r\n\r\n            this.updateUVs(comp);\r\n            this.updateColor(comp);\r\n            this.updateTextureIdx(comp);\r\n\r\n            _comp[\"_actualFontSize\"] = _fontSize;\r\n            _uiTrans.setContentSize(_contentSize);\r\n\r\n            _comp.renderData!.vertDirty = false;\r\n            _comp.markForUpdateRenderData(false);\r\n\r\n            _comp = null;\r\n            this._resetProperties();\r\n        }\r\n        if (comp.textures.length > 0) {\r\n            const renderData = comp.renderData;\r\n            renderData.textureDirty = false;\r\n            renderData.updateRenderData(comp, comp.textures[0]);\r\n        }\r\n    }\r\n\r\n    static updateColor(comp: TextMeshPro) {\r\n        if (JSB) {\r\n            const renderData = comp.renderData!;\r\n            const vertexCount = renderData.vertexCount;\r\n            if (vertexCount === 0) return;\r\n            const vData = renderData.chunk.vb;\r\n            const stride = renderData.floatStride;\r\n            let colorOffset = this.colorOffset;\r\n            const color = comp.color;\r\n            const colorR = color.r / 255;\r\n            const colorG = color.g / 255;\r\n            const colorB = color.b / 255;\r\n            const colorA = color.a / 255;\r\n            for (let i = 0; i < vertexCount; i++) {\r\n                vData[colorOffset] = colorR;\r\n                vData[colorOffset + 1] = colorG;\r\n                vData[colorOffset + 2] = colorB;\r\n                vData[colorOffset + 3] = colorA;\r\n                colorOffset += stride;\r\n            }\r\n        }\r\n    }\r\n\r\n    static updateUVs(comp: TextMeshPro) {\r\n        const renderData = comp.renderData!;\r\n        const vData = renderData.chunk.vb;\r\n        const vertexCount = renderData.vertexCount;\r\n        const dataList = renderData.data;\r\n        let vertexOffset = this.uvOffset;\r\n        for (let i = 0; i < vertexCount; i++) {\r\n            const vert = dataList[i];\r\n            vData[vertexOffset] = vert.u;\r\n            vData[vertexOffset + 1] = vert.v;\r\n            vertexOffset += this.floatsPerVert;\r\n        }\r\n    }\r\n\r\n    static updateTextureIdx(comp: TextMeshPro) {\r\n        const renderData = comp.renderData!;\r\n        const vData = renderData.chunk.vb;\r\n        const vertexCount = renderData.vertexCount;\r\n        const dataList = renderData.data;\r\n        let vertexOffset = this.textureIdxOffset;\r\n        for (let i = 0; i < vertexCount; i++) {\r\n            const vert = dataList[i];\r\n            vData[vertexOffset] = vert[\"textureIdx\"];\r\n            vertexOffset += this.floatsPerVert;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新渲染所需的前置数据\r\n     */\r\n    private static _updateProperties(comp: TextMeshPro): void {\r\n        _fntConfig = comp.fontConfig;\r\n        _string = comp.string.toString();\r\n        _fontSize = comp.fontSize;\r\n        _originFontSize = _fntConfig ? _fntConfig.json.size : comp.fontSize;\r\n        _bmfontScale = _fontSize / _originFontSize;\r\n        _hAlign = comp.horizontalAlign;\r\n        _vAlign = comp.verticalAlign;\r\n        _spacingX = comp.spacingX;\r\n        _overflow = comp.overflow;\r\n        _lineHeight = comp.lineHeight;\r\n\r\n        const contentSize = _uiTrans!.contentSize;\r\n        _contentSize.width = contentSize.width;\r\n        _contentSize.height = contentSize.height;\r\n\r\n        shareLabelInfo.fontAtlas = comp.fontConfig;\r\n        shareLabelInfo.lineHeight = _lineHeight;\r\n        shareLabelInfo.fontSize = _fontSize;\r\n        shareLabelInfo.hash = \"\";\r\n        shareLabelInfo.margin = 0;\r\n\r\n        // should wrap text\r\n        if (_overflow === TmpOverflow.NONE) {\r\n            _isWrapText = false;\r\n            _contentSize.width += shareLabelInfo.margin * 2;\r\n            _contentSize.height += shareLabelInfo.margin * 2;\r\n        } else if (_overflow === TmpOverflow.RESIZE_HEIGHT) {\r\n            _isWrapText = true;\r\n            _contentSize.height += shareLabelInfo.margin * 2;\r\n        } else if (_overflow === TmpOverflow.SHRINK) {\r\n            _isWrapText = false;\r\n        } else {\r\n            _isWrapText = comp.enableWrapText;\r\n        }\r\n\r\n        this._setupBMFontOverflowMetrics();\r\n\r\n        // 斜体计算\r\n        if (comp.enableItalic) {\r\n            _italicVec.x = 0;\r\n            _italicVec.y = _contentSize.height / 2;\r\n            _italicVec = _italicVec.rotate(ITALIC_REDIANS);\r\n            _contentSize.width += Math.abs(_italicVec.x) * 2;\r\n            _contentSize.height -= Math.abs(_contentSize.height / 2 - _italicVec.y) * 2;\r\n        }\r\n        // 下划线、删除线\r\n        if (comp.enableUnderline || comp.enableStrikethrough) {\r\n            _extraLineDef = shareLabelInfo.fontAtlas.getLetter(UNDERLINE_CODE + shareLabelInfo.hash);\r\n            if (!_extraLineDef) {\r\n                log(`Can't find letter definition in textures. letter: _`);\r\n            }\r\n        }\r\n        // 省略号\r\n        if (comp.overflow === TmpOverflow.ELLIPSIS) {\r\n            _ellipsisDef = shareLabelInfo.fontAtlas.getLetter(ELLIPSIS_CODE + shareLabelInfo.hash);\r\n            if (_ellipsisDef) {\r\n                _ellipsisWidth = (_ellipsisDef.xAdvance * _bmfontScale + _spacingX) * ELLIPSIS_NUM;\r\n            } else {\r\n                _ellipsisWidth = 0;\r\n                log(`Can't find letter definition in textures. letter: ${ELLIPSIS_CHAR}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static _resetProperties(): void {\r\n        _fntConfig = null;\r\n        shareLabelInfo.hash = \"\";\r\n        shareLabelInfo.margin = 0;\r\n    }\r\n\r\n    private static _updateContent(): void {\r\n        this._computeHorizontalKerningForText();\r\n        this._alignText();\r\n    }\r\n\r\n    private static _computeHorizontalKerningForText(): void {\r\n        let string = _string;\r\n        let stringLen = string.length;\r\n\r\n        let horizontalKernings = _horizontalKernings;\r\n        let kerningDict;\r\n        // _fntConfig && (kerningDict = _fntConfig.kerningDict);\r\n        // if (kerningDict && !cc.js.isEmptyObject(kerningDict)) {\r\n        //     let prev = -1;\r\n        //     for (let i = 0; i < stringLen; ++i) {\r\n        //         let key = string.charCodeAt(i);\r\n        //         let kerningAmount = kerningDict[(prev << 16) | (key & 0xffff)] || 0;\r\n        //         if (i < stringLen - 1) {\r\n        //             horizontalKernings[i] = kerningAmount;\r\n        //         } else {\r\n        //             horizontalKernings[i] = 0;\r\n        //         }\r\n        //         prev = key;\r\n        //     }\r\n        // } else {\r\n        horizontalKernings.length = 0;\r\n        // }\r\n    }\r\n\r\n    private static _alignText(): void {\r\n        _textDesiredHeight = 0;\r\n        _linesWidth.length = 0;\r\n        _extraLinesData = {};\r\n\r\n        if (!_lineBreakWithoutSpaces) {\r\n            this._multilineTextWrapByWord();\r\n        } else {\r\n            this._multilineTextWrapByChar();\r\n        }\r\n\r\n        // shrink\r\n        if (_overflow === TmpOverflow.SHRINK && _fontSize > 0) {\r\n            let scaleHeight = _bmfontScale;\r\n            let scaleWidth = _bmfontScale;\r\n            let needReset = false;\r\n            if (_textDesiredHeight > _contentSize.height) {\r\n                scaleHeight = (_contentSize.height / _textDesiredHeight) * _bmfontScale;\r\n                needReset = true;\r\n            }\r\n\r\n            let maxWidth = 0;\r\n            _linesWidth.forEach((v) => {\r\n                if (v > maxWidth) {\r\n                    maxWidth = v;\r\n                }\r\n            });\r\n            if (maxWidth > _contentSize.width) {\r\n                scaleWidth = (_contentSize.width / maxWidth) * _bmfontScale;\r\n                needReset = true;\r\n            }\r\n            _bmfontScale = Math.min(scaleHeight, scaleWidth);\r\n\r\n            if (needReset) {\r\n                _fontSize = _bmfontScale * _originFontSize;\r\n                _textDesiredHeight = 0;\r\n                _linesWidth.length = 0;\r\n                _extraLinesData = {};\r\n                if (!_lineBreakWithoutSpaces) {\r\n                    this._multilineTextWrapByWord();\r\n                } else {\r\n                    this._multilineTextWrapByChar();\r\n                }\r\n            }\r\n        }\r\n\r\n        this._computeAlignmentOffset();\r\n\r\n        // 顶点数据填充\r\n        this._updateQuads();\r\n    }\r\n\r\n    private static _multilineTextWrapByWord(): boolean {\r\n        return this._multilineTextWrap(this._getFirstWordLen);\r\n    }\r\n\r\n    private static _multilineTextWrapByChar(): boolean {\r\n        return this._multilineTextWrap(this._getFirstCharLen);\r\n    }\r\n\r\n    private static _multilineTextWrap(nextTokenFunc: Function): boolean {\r\n        // 省略号处理\r\n        let ellipsisMaxLines = 0;\r\n        let useEllipsis = false;\r\n        if (_overflow === TmpOverflow.ELLIPSIS && _ellipsisDef) {\r\n            ellipsisMaxLines = Math.max(1, Math.floor(_contentSize.height / _lineHeight));\r\n        }\r\n\r\n        let textLen = _string.length;\r\n\r\n        let lineIndex = 0;\r\n        let nextTokenX = 0;\r\n        let nextTokenY = 0;\r\n        let longestLine = 0;\r\n        let letterRight = 0;\r\n\r\n        let highestY = 0;\r\n        let lowestY = 0;\r\n        let letterDef: TmpFontLetter = null;\r\n        let letterPosition = v2(0, 0);\r\n\r\n        for (let index = 0; index < textLen;) {\r\n            let character = _string.charAt(index);\r\n            if (character === \"\\n\") {\r\n                // 省略号处理\r\n                if (_overflow === TmpOverflow.ELLIPSIS && _ellipsisDef && lineIndex + 1 >= ellipsisMaxLines) {\r\n                    this._recordEllipsis(nextTokenY, letterPosition, lineIndex);\r\n                    useEllipsis = true;\r\n                    // 更新_linesWidth\r\n                    let ellipsisInfo = _comp.lettersInfo[_comp.lettersInfo.length - 1];\r\n                    // letterRight = ellipsisInfo.x + (_ellipsisDef.w) * _bmfontScale - shareLabelInfo.margin;\r\n                    letterRight = ellipsisInfo.x + (_ellipsisDef.xAdvance - _ellipsisDef.offsetX) * _bmfontScale + _spacingX - shareLabelInfo.margin * 2;\r\n                    break;\r\n                }\r\n\r\n                _linesWidth.push(letterRight);\r\n                letterRight = 0;\r\n                lineIndex++;\r\n                nextTokenX = 0;\r\n                nextTokenY -= _lineHeight * this._getFontScale() + _lineSpacing;\r\n                this._recordPlaceholderInfo(index, character);\r\n                index++;\r\n                continue;\r\n            }\r\n\r\n            let tokenLen = nextTokenFunc(_string, index, textLen);\r\n            let tokenHighestY = highestY;\r\n            let tokenLowestY = lowestY;\r\n            let tokenRight = letterRight;\r\n            let nextLetterX = nextTokenX;\r\n            let newLine = false;\r\n\r\n            for (let tmp = 0; tmp < tokenLen; ++tmp) {\r\n                let letterIndex = index + tmp;\r\n                character = _string.charAt(letterIndex);\r\n                if (character === \"\\r\") {\r\n                    this._recordPlaceholderInfo(letterIndex, character);\r\n                    continue;\r\n                }\r\n                letterDef = shareLabelInfo.fontAtlas.getLetterDefinitionForChar(character);\r\n                if (!letterDef) {\r\n                    this._recordPlaceholderInfo(letterIndex, character);\r\n                    log(`Can't find letter definition in textures. letter: ${character}`);\r\n                    continue;\r\n                }\r\n\r\n                let letterX = nextLetterX + letterDef.offsetX * _bmfontScale - shareLabelInfo.margin;\r\n\r\n                // 斜边处理\r\n                if ((_comp as TextMeshPro).enableItalic) {\r\n                    _italicVec.x = 0;\r\n                    _italicVec.y = letterDef.h * _bmfontScale / 2;\r\n                    _italicVec = _italicVec.rotate(ITALIC_REDIANS);\r\n                    letterX += Math.abs(_italicVec.x);\r\n                }\r\n\r\n                // 省略号处理\r\n                if (_overflow === TmpOverflow.ELLIPSIS && _ellipsisDef) {\r\n                    if (letterX + (letterDef.xAdvance - letterDef.offsetX) * _bmfontScale > _maxLineWidth) {\r\n                        if (!_isWrapText || lineIndex + 1 >= ellipsisMaxLines) {\r\n                            this._recordEllipsis(nextTokenY, letterPosition, lineIndex);\r\n                            useEllipsis = true;\r\n                            // 更新_linesWidth\r\n                            let ellipsisInfo = _comp.lettersInfo[_comp.lettersInfo.length - 1];\r\n                            // letterRight = ellipsisInfo.x + (_ellipsisDef.w) * _bmfontScale - shareLabelInfo.margin;\r\n                            letterRight = ellipsisInfo.x + (_ellipsisDef.xAdvance - _ellipsisDef.offsetX) * _bmfontScale + _spacingX - shareLabelInfo.margin * 2;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (_isWrapText\r\n                    && _maxLineWidth > 0\r\n                    && nextTokenX > 0\r\n                    && letterX + (letterDef.xAdvance - letterDef.offsetX) * _bmfontScale > _maxLineWidth\r\n                    && !TmpUtils.isUnicodeSpace(character)) {\r\n                    _linesWidth.push(letterRight);\r\n                    letterRight = 0;\r\n                    lineIndex++;\r\n                    nextTokenX = 0;\r\n                    nextTokenY -= (_lineHeight * this._getFontScale() + _lineSpacing);\r\n                    newLine = true;\r\n                    break;\r\n                } else {\r\n                    letterPosition.x = letterX;\r\n                }\r\n\r\n                letterPosition.y = nextTokenY - letterDef.offsetY * _bmfontScale + shareLabelInfo.margin;\r\n                this._recordLetterInfo(letterPosition, character, letterIndex, lineIndex);\r\n\r\n                if (letterIndex + 1 < _horizontalKernings.length && letterIndex < textLen - 1) {\r\n                    nextLetterX += _horizontalKernings[letterIndex + 1];\r\n                }\r\n\r\n                nextLetterX += letterDef.xAdvance * _bmfontScale + _spacingX - shareLabelInfo.margin * 2;\r\n\r\n                tokenRight = nextLetterX; //letterPosition.x + letterDef.w * _bmfontScale - shareLabelInfo.margin;\r\n                // 斜边处理\r\n                if ((_comp as TextMeshPro).enableItalic) {\r\n                    _italicVec.x = 0;\r\n                    _italicVec.y = letterDef.h * _bmfontScale / 2;\r\n                    _italicVec = _italicVec.rotate(ITALIC_REDIANS);\r\n                    tokenRight += Math.abs(_italicVec.x);\r\n                }\r\n\r\n                if (tokenHighestY < letterPosition.y) {\r\n                    tokenHighestY = letterPosition.y;\r\n                }\r\n\r\n                if (tokenLowestY > letterPosition.y - letterDef.h * _bmfontScale) {\r\n                    tokenLowestY = letterPosition.y - letterDef.h * _bmfontScale;\r\n                }\r\n\r\n            } //end of for loop\r\n\r\n            if (useEllipsis) { break; }\r\n\r\n            if (newLine) { continue; }\r\n\r\n            nextTokenX = nextLetterX;\r\n            letterRight = tokenRight;\r\n\r\n            if (highestY < tokenHighestY) {\r\n                highestY = tokenHighestY;\r\n            }\r\n            if (lowestY > tokenLowestY) {\r\n                lowestY = tokenLowestY;\r\n            }\r\n            if (longestLine < letterRight) {\r\n                longestLine = letterRight;\r\n            }\r\n\r\n            index += tokenLen;\r\n        } //end of for loop\r\n\r\n        _linesWidth.push(letterRight);\r\n\r\n        _numberOfLines = lineIndex + 1;\r\n        _textDesiredHeight = _numberOfLines * _lineHeight * this._getFontScale();\r\n        if (_numberOfLines > 1) {\r\n            _textDesiredHeight += (_numberOfLines - 1) * _lineSpacing;\r\n        }\r\n\r\n        _contentSize.width = _labelWidth;\r\n        _contentSize.height = _labelHeight;\r\n        if (_labelWidth <= 0) {\r\n            _contentSize.width = parseFloat(longestLine.toFixed(2)) + shareLabelInfo.margin * 2;\r\n        }\r\n        if (_labelHeight <= 0) {\r\n            _contentSize.height = parseFloat(_textDesiredHeight.toFixed(2)) + shareLabelInfo.margin * 2;\r\n        }\r\n\r\n        _tailoredTopY = _contentSize.height;\r\n        _tailoredBottomY = 0;\r\n\r\n        if (_overflow !== TmpOverflow.CLAMP) {\r\n            if (highestY > 0) {\r\n                _tailoredTopY = _contentSize.height + highestY;\r\n            }\r\n\r\n            if (lowestY < -_textDesiredHeight) {\r\n                _tailoredBottomY = _textDesiredHeight + lowestY;\r\n            }\r\n        }\r\n\r\n        // 记录letterRight与nextTokenX的差值，供富文本排版使用\r\n        _comp[\"_richTextDeltaX\"] = nextTokenX - letterRight;\r\n\r\n        return true;\r\n    }\r\n\r\n    private static _getFirstCharLen(): number {\r\n        return 1;\r\n    }\r\n\r\n    private static _getFontScale(): number {\r\n        return _overflow === TmpOverflow.SHRINK ? _bmfontScale : 1;\r\n    }\r\n\r\n    private static _getFirstWordLen(text: string, startIndex: number, textLen: number): number {\r\n        let character = text.charAt(startIndex);\r\n        if (TmpUtils.isUnicodeCJK(character)\r\n            || character === \"\\n\"\r\n            || TmpUtils.isUnicodeSpace(character)) {\r\n            return 1;\r\n        }\r\n\r\n        let len = 1;\r\n        let letterDef = shareLabelInfo.fontAtlas.getLetterDefinitionForChar(character);\r\n        if (!letterDef) {\r\n            return len;\r\n        }\r\n        let nextLetterX = letterDef.xAdvance * _bmfontScale + _spacingX;\r\n        let letterX;\r\n        for (let index = startIndex + 1; index < textLen; ++index) {\r\n            character = text.charAt(index);\r\n\r\n            letterDef = shareLabelInfo.fontAtlas.getLetterDefinitionForChar(character);\r\n            if (!letterDef) {\r\n                break;\r\n            }\r\n            letterX = nextLetterX + letterDef.offsetX * _bmfontScale;\r\n\r\n            if (letterX + (letterDef.xAdvance - letterDef.offsetX) * _bmfontScale > _maxLineWidth\r\n                && !TmpUtils.isUnicodeSpace(character)\r\n                && _maxLineWidth > 0) {\r\n                return len;\r\n            }\r\n            nextLetterX += letterDef.xAdvance * _bmfontScale + _spacingX;\r\n            if (character === \"\\n\"\r\n                || TmpUtils.isUnicodeSpace(character)\r\n                || TmpUtils.isUnicodeCJK(character)) {\r\n                break;\r\n            }\r\n            len++;\r\n        }\r\n\r\n        return len;\r\n    }\r\n\r\n    /**\r\n     * 从已记录的字符中倒退，直到能放下省略号\r\n     */\r\n    private static _recordEllipsis(nextTokenY: number, letterPosition: Vec2, lineIndex: number): void {\r\n        let nextX = 0;\r\n        let lastIndex = _comp.lettersInfo.length - 1;\r\n        while (lastIndex >= 0) {\r\n            let lastInfo = _comp.lettersInfo[lastIndex];\r\n            let lastDef = shareLabelInfo.fontAtlas.getLetterDefinitionForChar(lastInfo.char);\r\n            let lastW = lastDef ? lastDef.w : 0;\r\n            let lastXAdvance = lastDef ? lastDef.xAdvance : 0;\r\n            let lastOffsetX = lastDef ? lastDef.offsetX : 0;\r\n            let lastRightX = lastInfo.x + lastW * _bmfontScale - shareLabelInfo.margin;\r\n            nextX = lastInfo.x + (lastXAdvance - lastOffsetX) * _bmfontScale + _spacingX - shareLabelInfo.margin * 2;\r\n            if (_maxLineWidth >= lastRightX + _ellipsisWidth) {\r\n                break;\r\n            }\r\n            lastIndex--;\r\n            _comp.lettersInfo.pop();\r\n        }\r\n        if (lastIndex < 0) {\r\n            nextX = 0;\r\n        }\r\n        // 记录省略号\r\n        letterPosition.y = nextTokenY - _ellipsisDef.offsetY * _bmfontScale + shareLabelInfo.margin;\r\n        for (let i = 1; i <= ELLIPSIS_NUM; i++) {\r\n            letterPosition.x = nextX + _ellipsisDef.offsetX * _bmfontScale - shareLabelInfo.margin;\r\n            this._recordLetterInfo(letterPosition, ELLIPSIS_CHAR, lastIndex + i, lineIndex);\r\n            nextX += _ellipsisDef.xAdvance * _bmfontScale + _spacingX - shareLabelInfo.margin * 2;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 记录无需渲染的占位符\r\n     */\r\n    private static _recordPlaceholderInfo(letterIndex: number, char: string): void {\r\n        if (letterIndex >= _comp.lettersInfo.length) {\r\n            let tmpInfo = new TmpLetterInfo();\r\n            _comp.lettersInfo.push(tmpInfo);\r\n        }\r\n\r\n        _comp.lettersInfo[letterIndex].char = char;\r\n        _comp.lettersInfo[letterIndex].hash = char.charCodeAt(0) + shareLabelInfo.hash;\r\n        _comp.lettersInfo[letterIndex].valid = false;\r\n    }\r\n\r\n    /**\r\n     * 记录需要渲染的字符\r\n     */\r\n    private static _recordLetterInfo(letterPosition: Vec2, character: string, letterIndex: number, lineIndex: number): void {\r\n        if (letterIndex >= _comp.lettersInfo.length) {\r\n            let tmpInfo = new TmpLetterInfo();\r\n            _comp.lettersInfo.push(tmpInfo);\r\n        }\r\n        let char = character.charCodeAt(0);\r\n        let key = char + shareLabelInfo.hash;\r\n\r\n        _comp.lettersInfo[letterIndex].line = lineIndex;\r\n        _comp.lettersInfo[letterIndex].char = character;\r\n        _comp.lettersInfo[letterIndex].hash = key;\r\n        _comp.lettersInfo[letterIndex].valid = shareLabelInfo.fontAtlas.getLetter(key).valid;\r\n        _comp.lettersInfo[letterIndex].x = letterPosition.x;\r\n        _comp.lettersInfo[letterIndex].y = letterPosition.y;\r\n    }\r\n\r\n    private static _computeAlignmentOffset(): void {\r\n        _linesOffsetX.length = 0;\r\n\r\n        switch (_hAlign) {\r\n            case HorizontalTextAlignment.LEFT:\r\n                for (let i = 0; i < _numberOfLines; ++i) {\r\n                    _linesOffsetX.push(0);\r\n                }\r\n                break;\r\n            case HorizontalTextAlignment.CENTER:\r\n                for (let i = 0, l = _linesWidth.length; i < l; i++) {\r\n                    _linesOffsetX.push((_contentSize.width - _linesWidth[i]) / 2);\r\n                }\r\n                break;\r\n            case HorizontalTextAlignment.RIGHT:\r\n                for (let i = 0, l = _linesWidth.length; i < l; i++) {\r\n                    _linesOffsetX.push(_contentSize.width - _linesWidth[i]);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // TOP\r\n        _letterOffsetY = _contentSize.height;\r\n        if (_vAlign !== VerticalTextAlignment.TOP) {\r\n            let blank = _contentSize.height - _textDesiredHeight + _lineHeight * this._getFontScale() - _originFontSize * _bmfontScale;\r\n            if (_vAlign === VerticalTextAlignment.BOTTOM) {\r\n                // BOTTOM\r\n                _letterOffsetY -= blank;\r\n            } else {\r\n                // CENTER:\r\n                _letterOffsetY -= blank / 2;\r\n            }\r\n        }\r\n    }\r\n\r\n    private static _setupBMFontOverflowMetrics(): void {\r\n        let newWidth = _contentSize.width;\r\n        let newHeight = _contentSize.height;\r\n\r\n        if (_overflow === TmpOverflow.RESIZE_HEIGHT) {\r\n            newHeight = 0;\r\n        }\r\n\r\n        if (_overflow === TmpOverflow.NONE) {\r\n            newWidth = 0;\r\n            newHeight = 0;\r\n        }\r\n\r\n        _labelWidth = newWidth;\r\n        _labelHeight = newHeight;\r\n        _maxLineWidth = newWidth;\r\n    }\r\n\r\n    /**\r\n     * 更新所有顶点数据\r\n     */\r\n    private static _updateQuads(): void {\r\n        const renderData = _comp.renderData!;\r\n        renderData.dataLength = 0;\r\n        renderData.resize(0, 0);\r\n        const anchorPoint = _uiTrans!.anchorPoint;\r\n        const contentSize = _contentSize;\r\n        const appX = anchorPoint.x * contentSize.width;\r\n        const appY = anchorPoint.y * contentSize.height;\r\n\r\n        let quadsIndex = 0;\r\n        for (let i = 0, l = _comp.lettersInfo.length; i < l; ++i) {\r\n            let letterInfo = _comp.lettersInfo[i];\r\n            if (!letterInfo) break;\r\n            if (!letterInfo.valid) continue;\r\n            letterInfo.quadsIndex = quadsIndex;\r\n            let letterDef = shareLabelInfo.fontAtlas.getLetter(letterInfo.hash);\r\n\r\n            _tmpUvRect.height = letterDef.h;\r\n            _tmpUvRect.width = letterDef.w;\r\n            _tmpUvRect.x = letterDef.u;\r\n            _tmpUvRect.y = letterDef.v;\r\n\r\n            let py = letterInfo.y + _letterOffsetY;\r\n\r\n            if (_labelHeight > 0) {\r\n                if (_overflow === TmpOverflow.CLAMP) {\r\n                    if (py > _tailoredTopY) {\r\n                        let clipTop = py - _tailoredTopY;\r\n                        _tmpUvRect.y += clipTop / _bmfontScale;\r\n                        _tmpUvRect.height -= clipTop / _bmfontScale;\r\n                        py = py - clipTop;\r\n                    }\r\n\r\n                    if ((py - _tmpUvRect.height * _bmfontScale < _tailoredBottomY)) {\r\n                        _tmpUvRect.height = (py < _tailoredBottomY) ? 0 : (py - _tailoredBottomY) / _bmfontScale;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let px = letterInfo.x + _linesOffsetX[letterInfo.line];\r\n            if (_labelWidth > 0) {\r\n                if (_overflow === TmpOverflow.CLAMP) {\r\n                    if (px < 0) {\r\n                        _tmpUvRect.x += -px / _bmfontScale;\r\n                        _tmpUvRect.width -= -px / _bmfontScale;\r\n                        px = 0;\r\n                    }\r\n                    if (px + _tmpUvRect.width * _bmfontScale > _contentSize.width) {\r\n                        let clipRight = px + _tmpUvRect.width * _bmfontScale - _contentSize.width;\r\n                        _tmpUvRect.width -= clipRight / _bmfontScale;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (_tmpUvRect.height > 0 && _tmpUvRect.width > 0) {\r\n                _tmpPosRect.x = px - appX;\r\n                _tmpPosRect.y = py - appY;\r\n                _tmpPosRect.width = _tmpUvRect.width * _bmfontScale;\r\n                _tmpPosRect.height = _tmpUvRect.height * _bmfontScale;\r\n                this.appendQuad(_comp, letterDef.textureId, _tmpUvRect, _tmpPosRect);\r\n\r\n                quadsIndex++;\r\n                // 下划线数据记录\r\n                if (_extraLineDef && ((_comp as TextMeshPro).enableUnderline || (_comp as TextMeshPro).enableStrikethrough)) {\r\n                    if (!TmpUtils.isUnicodeSpace(letterInfo.char)) {\r\n                        let lineData = _extraLinesData[letterInfo.line];\r\n                        if (!lineData) {\r\n                            _extraLinesData[letterInfo.line] = {\r\n                                lineIndex: letterInfo.line,\r\n                                first: i,\r\n                                last: i\r\n                            }\r\n                        } else {\r\n                            if (lineData.last < i) {\r\n                                lineData.last = i;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (_extraLineDef) {\r\n            // 下划线\r\n            if ((_comp as TextMeshPro).enableUnderline) {\r\n                this._updateLineQuads(appX, appY, -_fontSize + (_comp as TextMeshPro).underlineOffset * _bmfontScale);\r\n            }\r\n            // 删除线\r\n            if ((_comp as TextMeshPro).enableStrikethrough) {\r\n                this._updateLineQuads(appX, appY, -_fontSize / 2 + (_comp as TextMeshPro).strikethroughOffset * _bmfontScale);\r\n            }\r\n        }\r\n\r\n        this.updateColorExtra(_comp);\r\n\r\n        const indexCount = renderData.indexCount;\r\n        this.createQuadIndices(indexCount);\r\n        renderData.chunk.setIndexBuffer(QUAD_INDICES);\r\n    }\r\n\r\n    private static createQuadIndices(indexCount) {\r\n        if (indexCount % 6 !== 0) {\r\n            console.error('illegal index count!');\r\n            return;\r\n        }\r\n        const quadCount = indexCount / 6;\r\n        QUAD_INDICES = null;\r\n        QUAD_INDICES = new Uint16Array(indexCount);\r\n        let offset = 0;\r\n        for (let i = 0; i < quadCount; i++) {\r\n            QUAD_INDICES[offset++] = 0 + i * 4;\r\n            QUAD_INDICES[offset++] = 1 + i * 4;\r\n            QUAD_INDICES[offset++] = 2 + i * 4;\r\n            QUAD_INDICES[offset++] = 1 + i * 4;\r\n            QUAD_INDICES[offset++] = 3 + i * 4;\r\n            QUAD_INDICES[offset++] = 2 + i * 4;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新下划线、删除线的顶点数据\r\n     */\r\n    private static _updateLineQuads(appx: number, appy: number, offsetY: number): void {\r\n        for (let key in _extraLinesData) {\r\n            let underlineInfo = _extraLinesData[key];\r\n            let lineIdx = underlineInfo.lineIndex;\r\n            let first = underlineInfo.first;\r\n            let last = underlineInfo.last > 0 ? underlineInfo.last : first;\r\n            let firstInfo = _comp.lettersInfo[first];\r\n            if (!firstInfo.valid) {\r\n                continue;\r\n            }\r\n            let lastInfo = _comp.lettersInfo[last];\r\n            let firstDef = shareLabelInfo.fontAtlas.getLetter(firstInfo.hash);\r\n            let lastDef = shareLabelInfo.fontAtlas.getLetter(lastInfo.hash);\r\n\r\n            let maxWidth = lastInfo.x + lastDef.w * _bmfontScale - firstInfo.x;\r\n\r\n            let wLeft = maxWidth >= _extraLineDef.w * _bmfontScale ? _extraLineDef.w * _bmfontScale / 3 : maxWidth / 2;\r\n            let wRight = wLeft;\r\n            let wMid = maxWidth - wLeft - wRight;\r\n            let leftX = firstInfo.x + _linesOffsetX[lineIdx];\r\n            let rightX = leftX + wLeft + wMid;\r\n            let midX = leftX + wLeft;\r\n\r\n            // 左\r\n            _tmpUvRect.height = _extraLineDef.h;\r\n            _tmpUvRect.width = wLeft / _bmfontScale;\r\n            _tmpUvRect.x = _extraLineDef.u;\r\n            _tmpUvRect.y = _extraLineDef.v;\r\n\r\n            let py = firstInfo.y + _letterOffsetY + firstDef.offsetY * _bmfontScale + offsetY;\r\n\r\n            if (_labelHeight > 0) {\r\n                if (py > _tailoredTopY) {\r\n                    let clipTop = py - _tailoredTopY;\r\n                    _tmpUvRect.y += clipTop;\r\n                    _tmpUvRect.height -= clipTop;\r\n                    py = py - clipTop;\r\n                }\r\n\r\n                if ((py - _extraLineDef.h * _bmfontScale < _tailoredBottomY) && _overflow === TmpOverflow.CLAMP) {\r\n                    _tmpUvRect.height = (py < _tailoredBottomY) ? 0 : (py - _tailoredBottomY) / _bmfontScale;\r\n                }\r\n            }\r\n\r\n            if (_tmpUvRect.height > 0 && _tmpUvRect.width > 0) {\r\n                _tmpPosRect.x = leftX - appx;\r\n                _tmpPosRect.y = py - appy;\r\n                _tmpPosRect.width = wLeft;\r\n                _tmpPosRect.height = _tmpUvRect.height * _bmfontScale;\r\n                this.appendQuad(_comp, _extraLineDef.textureId, _tmpUvRect, _tmpPosRect);\r\n            }\r\n\r\n            // 右\r\n            _tmpUvRect.width = wRight / _bmfontScale;\r\n            _tmpUvRect.x = _extraLineDef.u + _extraLineDef.w - _tmpUvRect.width;\r\n\r\n            if (_tmpUvRect.height > 0 && _tmpUvRect.width > 0) {\r\n                _tmpPosRect.x = rightX - appx;\r\n                _tmpPosRect.y = py - appy;\r\n                _tmpPosRect.width = wRight;\r\n                _tmpPosRect.height = _tmpUvRect.height * _bmfontScale;\r\n                this.appendQuad(_comp, _extraLineDef.textureId, _tmpUvRect, _tmpPosRect);\r\n            }\r\n\r\n            // 中\r\n            if (wMid > 0) {\r\n                _tmpUvRect.width = _extraLineDef.w - wLeft * 2 / _bmfontScale;\r\n                _tmpUvRect.x = _extraLineDef.u + _tmpUvRect.width;\r\n\r\n                if (_tmpUvRect.height > 0 && _tmpUvRect.width > 0) {\r\n                    _tmpPosRect.x = midX - appx;\r\n                    _tmpPosRect.y = py - appy;\r\n                    _tmpPosRect.width = wMid;\r\n                    _tmpPosRect.height = _tmpUvRect.height * _bmfontScale;\r\n                    this.appendQuad(_comp, _extraLineDef.textureId, _tmpUvRect, _tmpPosRect);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加一组顶点数据（4个顶点）\r\n     * @param comp\r\n     * @param textureId 渲染的字符所需纹理id\r\n     * @param uvRect 顶点uv数据\r\n     * @param posRect 顶点坐标数据\r\n     */\r\n    private static appendQuad(comp: TextMeshPro, textureId: number, uvRect: Rect, posRect: Rect): void {\r\n        const renderData = comp.renderData;\r\n        if (!renderData) {\r\n            return;\r\n        }\r\n\r\n        // 此处会将renderData.chunk.vb置0\r\n        const dataOffset = renderData.dataLength;\r\n        renderData.dataLength += 4;\r\n        renderData.resize(renderData.dataLength, renderData.dataLength / 2 * 3);\r\n        const dataList = renderData.data;\r\n\r\n        let texture = shareLabelInfo.fontAtlas.getTexture(textureId);\r\n        let texw = texture.width,\r\n            texh = texture.height,\r\n            rectWidth = uvRect.width,\r\n            rectHeight = uvRect.height;\r\n\r\n        let l, b, r, t;\r\n        // uvs\r\n        l = (uvRect.x) / texw;\r\n        r = (uvRect.x + rectWidth) / texw;\r\n        b = (uvRect.y + rectHeight) / texh;\r\n        t = (uvRect.y) / texh;\r\n        dataList[dataOffset].u = l;\r\n        dataList[dataOffset].v = b;\r\n        dataList[dataOffset + 1].u = r;\r\n        dataList[dataOffset + 1].v = b;\r\n        dataList[dataOffset + 2].u = l;\r\n        dataList[dataOffset + 2].v = t;\r\n        dataList[dataOffset + 3].u = r;\r\n        dataList[dataOffset + 3].v = t;\r\n\r\n        // positions\r\n        l = posRect.x;\r\n        r = posRect.x + posRect.width;\r\n        b = posRect.y - posRect.height;\r\n        t = posRect.y;\r\n        this.appendVerts(comp, dataList, dataOffset, l, r, b, t);\r\n\r\n        // colorExtra\r\n        for (let i = 0; i < 4; i++) {\r\n            dataList[dataOffset + i][\"colorExtra\"] = WHITE.clone();\r\n        }\r\n\r\n        // textureId\r\n        for (let i = 0; i < 4; i++) {\r\n            dataList[dataOffset + i][\"textureIdx\"] = textureId;\r\n        }\r\n    }\r\n\r\n    private static appendVerts(comp: TextMeshPro, dataList, dataOffset, l, r, b, t): void {\r\n        if (comp.enableItalic) {\r\n            _italicVec.x = 0;\r\n            _italicVec.y = (t - b) / 2;\r\n            _italicVec = _italicVec.rotate(ITALIC_REDIANS);\r\n\r\n            dataList[dataOffset].x = l - Math.abs(_italicVec.x);\r\n            dataList[dataOffset].y = b + Math.abs((t - b) / 2 - _italicVec.y);\r\n            dataList[dataOffset + 1].x = r - Math.abs(_italicVec.x);\r\n            dataList[dataOffset + 1].y = b + Math.abs((t - b) / 2 - _italicVec.y);\r\n            dataList[dataOffset + 2].x = l + Math.abs(_italicVec.x);\r\n            dataList[dataOffset + 2].y = t - Math.abs((t - b) / 2 - _italicVec.y);\r\n            dataList[dataOffset + 3].x = r + Math.abs(_italicVec.x);\r\n            dataList[dataOffset + 3].y = t - Math.abs((t - b) / 2 - _italicVec.y);\r\n        } else {\r\n            dataList[dataOffset].x = l;\r\n            dataList[dataOffset].y = b;\r\n            dataList[dataOffset + 1].x = r;\r\n            dataList[dataOffset + 1].y = b;\r\n            dataList[dataOffset + 2].x = l;\r\n            dataList[dataOffset + 2].y = t;\r\n            dataList[dataOffset + 3].x = r;\r\n            dataList[dataOffset + 3].y = t;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新额外顶点颜色，不对下划线、删除线生效\r\n     */\r\n    public static updateColorExtra(comp: TextMeshPro): void {\r\n        const dataList = comp.renderData.data;\r\n        if (!dataList || dataList.length <= 0) { return; }\r\n\r\n        if (!JSB) {\r\n            for (let i = 0; i < comp.lettersInfo.length; i++) {\r\n                let info = comp.lettersInfo[i];\r\n                if (!info.valid || TmpUtils.isUnicodeSpace(info.char)) {\r\n                    continue;\r\n                }\r\n                let alpha = info.visible ? 1 : 0;\r\n                let offset = info.quadsIndex * 4;\r\n                if (dataList.length < offset + 4) {\r\n                    break;\r\n                }\r\n\r\n                tempColor.set(WHITE);\r\n                tempColor.a *= alpha;\r\n                comp.colorGradient && tempColor.multiply(comp.colorLB);\r\n                dataList[offset][\"colorExtra\"].set(tempColor);\r\n\r\n                tempColor.set(WHITE);\r\n                tempColor.a *= alpha;\r\n                comp.colorGradient && tempColor.multiply(comp.colorRB);\r\n                dataList[offset + 1][\"colorExtra\"].set(tempColor);\r\n\r\n                tempColor.set(WHITE);\r\n                tempColor.a *= alpha;\r\n                comp.colorGradient && tempColor.multiply(comp.colorLT);\r\n                dataList[offset + 2][\"colorExtra\"].set(tempColor);\r\n\r\n                tempColor.set(WHITE);\r\n                tempColor.a *= alpha;\r\n                comp.colorGradient && tempColor.multiply(comp.colorRT);\r\n                dataList[offset + 3][\"colorExtra\"].set(tempColor);\r\n            }\r\n        } else {\r\n            const renderData = comp.renderData!;\r\n            const vData = comp.renderData.chunk.vb;\r\n            const vertexCount = renderData.vertexCount;\r\n            let quadCount = vertexCount / 4;\r\n            let letterIndex = 0;\r\n            for (let i = 0; i < quadCount; i++) {\r\n                while (letterIndex < comp.lettersInfo.length && !comp.lettersInfo[letterIndex].valid) {\r\n                    letterIndex++;\r\n                }\r\n                if (letterIndex < comp.lettersInfo.length) {\r\n                    let info = comp.lettersInfo[letterIndex];\r\n                    let alpha = info.visible ? 1 : 0;\r\n                    let offset = i * 4;\r\n                    if (dataList.length < offset + 4) {\r\n                        break;\r\n                    }\r\n\r\n                    tempColor.set(WHITE);\r\n                    tempColor.a *= alpha;\r\n                    comp.colorGradient && tempColor.multiply(comp.colorLB);\r\n                    dataList[offset][\"colorExtra\"].set(tempColor);\r\n\r\n                    tempColor.set(WHITE);\r\n                    tempColor.a *= alpha;\r\n                    comp.colorGradient && tempColor.multiply(comp.colorRB);\r\n                    dataList[offset + 1][\"colorExtra\"].set(tempColor);\r\n\r\n                    tempColor.set(WHITE);\r\n                    tempColor.a *= alpha;\r\n                    comp.colorGradient && tempColor.multiply(comp.colorLT);\r\n                    dataList[offset + 2][\"colorExtra\"].set(tempColor);\r\n\r\n                    tempColor.set(WHITE);\r\n                    tempColor.a *= alpha;\r\n                    comp.colorGradient && tempColor.multiply(comp.colorRT);\r\n                    dataList[offset + 3][\"colorExtra\"].set(tempColor);\r\n\r\n                    let colorExtraOffset = offset * this.floatsPerVert + this.colorExtraOffset;\r\n                    for (let i = 0; i < 4; i++) {\r\n                        const colorR = dataList[offset + i][\"colorExtra\"].r / 255;\r\n                        const colorG = dataList[offset + i][\"colorExtra\"].g / 255;\r\n                        const colorB = dataList[offset + i][\"colorExtra\"].b / 255;\r\n                        const colorA = dataList[offset + i][\"colorExtra\"].a / 255;\r\n                        vData[colorExtraOffset] = colorR;\r\n                        vData[colorExtraOffset + 1] = colorG;\r\n                        vData[colorExtraOffset + 2] = colorB;\r\n                        vData[colorExtraOffset + 3] = colorA;\r\n                        colorExtraOffset += this.floatsPerVert;\r\n                    }\r\n                } else {\r\n                    let colorExtraOffset = i * 4 * this.floatsPerVert + this.colorExtraOffset;\r\n                    for (let i = 0; i < 4; i++) {\r\n                        vData[colorExtraOffset] = 1;\r\n                        vData[colorExtraOffset + 1] = 1;\r\n                        vData[colorExtraOffset + 2] = 1;\r\n                        vData[colorExtraOffset + 3] = 1;\r\n                        colorExtraOffset += this.floatsPerVert;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //#region 顶点数据操作接口\r\n\r\n    /**\r\n     * 根据字符下标判断此字符是否可见\r\n     */\r\n    public static isVisble(comp: TextMeshPro, index: number): boolean {\r\n        let info = comp.lettersInfo[index];\r\n        return info && info.valid && info.visible && !TmpUtils.isUnicodeSpace(info.char);\r\n    }\r\n\r\n    /**\r\n     * 根据字符下标设置字符是否可见\r\n     */\r\n    public static setVisible(comp: TextMeshPro, index: number, visible: boolean): void {\r\n        let info = comp.lettersInfo[index];\r\n        if (!info || this.isVisble(comp, index) === visible || info.visible === visible || TmpUtils.isUnicodeSpace(info.char)) {\r\n            return;\r\n        }\r\n\r\n        let offset = info.quadsIndex * 4;\r\n        const dataList = comp.renderData.data;\r\n        if (!dataList || dataList.length < offset + 4) { return; }\r\n\r\n        info.visible = visible;\r\n        let alpha = (visible ? 1 : 0);\r\n\r\n        tempColor.set(WHITE);\r\n        tempColor.a *= alpha;\r\n        comp.colorGradient && tempColor.multiply(comp.colorLB);\r\n        dataList[offset][\"colorExtra\"].set(tempColor);\r\n\r\n        tempColor.set(WHITE);\r\n        tempColor.a *= alpha;\r\n        comp.colorGradient && tempColor.multiply(comp.colorRB);\r\n        dataList[offset + 1][\"colorExtra\"].set(tempColor);\r\n\r\n        tempColor.set(WHITE);\r\n        tempColor.a *= alpha;\r\n        comp.colorGradient && tempColor.multiply(comp.colorLT);\r\n        dataList[offset + 2][\"colorExtra\"].set(tempColor);\r\n\r\n        tempColor.set(WHITE);\r\n        tempColor.a *= alpha;\r\n        comp.colorGradient && tempColor.multiply(comp.colorRT);\r\n        dataList[offset + 3][\"colorExtra\"].set(tempColor);\r\n\r\n        if (JSB) {\r\n            const vData = comp.renderData.chunk.vb;\r\n            let colorExtraOffset = offset * this.floatsPerVert + this.colorExtraOffset;\r\n            for (let i = 0; i < 4; i++) {\r\n                const colorR = dataList[offset + i][\"colorExtra\"].r / 255;\r\n                const colorG = dataList[offset + i][\"colorExtra\"].g / 255;\r\n                const colorB = dataList[offset + i][\"colorExtra\"].b / 255;\r\n                const colorA = dataList[offset + i][\"colorExtra\"].a / 255;\r\n                vData[colorExtraOffset] = colorR;\r\n                vData[colorExtraOffset + 1] = colorG;\r\n                vData[colorExtraOffset + 2] = colorB;\r\n                vData[colorExtraOffset + 3] = colorA;\r\n                colorExtraOffset += this.floatsPerVert;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据字符下标获取颜色顶点数据，顺序为[左下, 右下, 左上, 右上]\r\n     */\r\n    public static getColorExtraVertices(comp: TextMeshPro, index: number): [Color, Color, Color, Color] | null {\r\n        let info = comp.lettersInfo[index];\r\n        if (!info || !info.valid) {\r\n            return null;\r\n        }\r\n\r\n        let offset = info.quadsIndex * 4;\r\n        const dataList = comp.renderData.data;\r\n        if (!dataList || dataList.length < offset + 4) { return; }\r\n\r\n        let result: [Color, Color, Color, Color] = [] as any;\r\n        for (let i = 0; i < 4; i++) {\r\n            let rColor: Color = dataList[offset + i][\"colorExtra\"].clone();\r\n            result.push(rColor);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 根据字符下标设置颜色顶点数据，顺序为[左下, 右下, 左上, 右上]\r\n     */\r\n    public static setColorExtraVertices(comp: TextMeshPro, index: number, data: [Color, Color, Color, Color]): void {\r\n        let info = comp.lettersInfo[index];\r\n        if (!info || !info.valid || data.length !== 4 || TmpUtils.isUnicodeSpace(info.char)) {\r\n            return;\r\n        }\r\n\r\n        let offset = info.quadsIndex * 4;\r\n        const dataList = comp.renderData.data;\r\n        if (!dataList || dataList.length < offset + 4) { return; }\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            dataList[offset + i][\"colorExtra\"].set(data[i]);\r\n        }\r\n\r\n        if (JSB) {\r\n            const vData = comp.renderData.chunk.vb;\r\n            let colorExtraOffset = offset * this.floatsPerVert + this.colorExtraOffset;\r\n            for (let i = 0; i < 4; i++) {\r\n                const colorR = dataList[offset + i][\"colorExtra\"].r / 255;\r\n                const colorG = dataList[offset + i][\"colorExtra\"].g / 255;\r\n                const colorB = dataList[offset + i][\"colorExtra\"].b / 255;\r\n                const colorA = dataList[offset + i][\"colorExtra\"].a / 255;\r\n                vData[colorExtraOffset] = colorR;\r\n                vData[colorExtraOffset + 1] = colorG;\r\n                vData[colorExtraOffset + 2] = colorB;\r\n                vData[colorExtraOffset + 3] = colorA;\r\n                colorExtraOffset += this.floatsPerVert;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据字符下标获取坐标顶点数据，顺序为[左下, 右下, 左上, 右上]\r\n     */\r\n    public static getPosVertices(comp: TextMeshPro, index: number): [Vec3, Vec3, Vec3, Vec3] | null {\r\n        let info = comp.lettersInfo[index];\r\n        if (!info || !info.valid) {\r\n            return null;\r\n        }\r\n\r\n        let offset = info.quadsIndex * 4;\r\n        const dataList = comp.renderData.data;\r\n        if (!dataList || dataList.length < offset + 4) { return; }\r\n\r\n        let result: [Vec3, Vec3, Vec3, Vec3] = [] as any;\r\n        for (let i = 0; i < 4; i++) {\r\n            result.push(new Vec3(dataList[offset + i].x, dataList[offset + i].y, dataList[offset + i].z));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 根据字符下标设置坐标顶点数据，顺序为[左下, 右下, 左上, 右上]\r\n     */\r\n    public static setPosVertices(comp: TextMeshPro, index: number, data: [Vec3, Vec3, Vec3, Vec3]): void {\r\n        let info = comp.lettersInfo[index];\r\n        if (!info || !info.valid || data.length !== 4 || TmpUtils.isUnicodeSpace(info.char)) {\r\n            return;\r\n        }\r\n\r\n        let offset = info.quadsIndex * 4;\r\n        const dataList = comp.renderData.data;\r\n        if (!dataList || dataList.length < offset + 4) { return; }\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            dataList[offset + i].x = data[i].x;\r\n            dataList[offset + i].y = data[i].y;\r\n            dataList[offset + i].z = data[i].z;\r\n        }\r\n\r\n        if (JSB) {\r\n            comp.renderData.renderDrawInfo.nativeObj[\"vertDirty\"] = true;\r\n            comp.renderData.renderDrawInfo.fillRender2dBuffer(comp.renderData.data);\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n}\r\n","import { js, Texture2D } from \"cc\";\r\n\r\n/**\r\n * 字体配置JSON\r\n */\r\nexport interface TmpFontJson {\r\n    size: number;\r\n    bold: number;\r\n    italic: number;\r\n    padding: [number, number, number, number];\r\n    spacing: [number, number];\r\n    outline: number;\r\n    lineHeight: number;\r\n    base: number;\r\n    scaleW: number;\r\n    scaleH: number;\r\n    pages: number;\r\n    packed: number;\r\n    alphaChnl: number;\r\n    redChnl: number;\r\n    greenChnl: number;\r\n    blueChnl: number;\r\n    pageData: Array<{ id: number, file: string }>;\r\n    charData: Array<any>;\r\n}\r\n\r\n/**\r\n * BitmapFont字符数据\r\n */\r\nexport class TmpFontLetter {\r\n    public u: number = 0;\r\n    public v: number = 0;\r\n    public w: number = 0;\r\n    public h: number = 0;\r\n    public offsetX: number = 0;\r\n    public offsetY: number = 0;\r\n    public textureId: number = 0;\r\n    public valid: boolean = false;\r\n    public xAdvance: number = 0;\r\n}\r\n\r\n/**\r\n * BitmapFont配置管理类\r\n */\r\nexport default class TmpFontConfig {\r\n    private _letterDefinitions: { [id: number]: TmpFontLetter } = {};\r\n    private _textures: { [id: number]: Texture2D } = {};\r\n    private _json: TmpFontJson = null;\r\n    public get json(): TmpFontJson { return this._json; }\r\n\r\n    public constructor(json: any, textures: Texture2D[]) {\r\n        this._json = json;\r\n        textures.forEach((v, id) => {\r\n            this._textures[id] = v;\r\n        });\r\n\r\n        json.charData.forEach((v) => {\r\n            let letter = new TmpFontLetter();\r\n\r\n            letter.offsetX = v.xoffset;\r\n            letter.offsetY = v.yoffset;\r\n            letter.w = v.width;\r\n            letter.h = v.height;\r\n            letter.u = v.x;\r\n            letter.v = v.y;\r\n            letter.textureId = v.page;\r\n            letter.valid = true;\r\n            letter.xAdvance = v.xadvance;\r\n\r\n            this.addLetterDefinitions(v.id, letter);\r\n        });\r\n    }\r\n\r\n    public addTexture(id: number, texture: Texture2D): void {\r\n        this._textures[id] = texture;\r\n    }\r\n\r\n    public addLetterDefinitions(letter: number, letterDefinition: TmpFontLetter): void {\r\n        this._letterDefinitions[letter] = letterDefinition;\r\n    }\r\n\r\n    public cloneLetterDefinition(): { [id: number]: TmpFontLetter } {\r\n        let copyLetterDefinitions = {};\r\n        for (let key in this._letterDefinitions) {\r\n            let value = new TmpFontLetter();\r\n            js.mixin(value, this._letterDefinitions[key]);\r\n            copyLetterDefinitions[key] = value;\r\n        }\r\n        return copyLetterDefinitions;\r\n    }\r\n\r\n    public getTexture(id: number): Texture2D {\r\n        return this._textures[id];\r\n    }\r\n\r\n    public getLetter(key: string): TmpFontLetter {\r\n        return this._letterDefinitions[key];\r\n    }\r\n\r\n    public getLetterDefinitionForChar(char: string): TmpFontLetter {\r\n        let key = char.charCodeAt(0);\r\n        let hasKey = this._letterDefinitions.hasOwnProperty(key);\r\n        let letter;\r\n        if (hasKey) {\r\n            letter = this._letterDefinitions[key];\r\n        } else {\r\n            letter = null;\r\n        }\r\n        return letter;\r\n    }\r\n\r\n    public clear(): void {\r\n        this._letterDefinitions = {};\r\n    }\r\n}\r\n","import { assert, CCObject, Color, Component, EventTouch, HorizontalTextAlignment, isValid, js, JsonAsset, Material, Node, NodeEventType, Sprite, SpriteAtlas, SpriteFrame, Texture2D, UITransform, v2, Vec2, VerticalTextAlignment, warnID, _decorator } from \"cc\";\r\nimport { DEV, EDITOR } from \"cc/env\";\r\nimport TextMeshPro from \"./TextMeshPro\";\r\nimport { HtmlTextParser, IHtmlTextParserResultObj, IHtmlTextParserStack } from \"./utils/HtmlParser\";\r\nimport TmpUtils from \"./utils/TmpUtils\";\r\n\r\nconst { ccclass, property, disallowMultiple, executeInEditMode } = _decorator;\r\n\r\nconst RichTextChildName = \"RICHTEXT_CHILD\";\r\nconst RichTextChildImageName = \"RICHTEXT_Image_CHILD\";\r\nconst _htmlTextParser = new HtmlTextParser();\r\n\r\nconst BASELINE_RATIO = 0.26;\r\n\r\ninterface ISegment {\r\n    node: Node;\r\n    comp: TextMeshPro | Sprite | null;\r\n    lineCount: number;\r\n    styleIndex: number;\r\n    imageOffset: string;\r\n    clickParam: string;\r\n    clickHandler: string;\r\n    type: string,\r\n}\r\n\r\n/**\r\n * 富文本池\r\n */\r\nconst labelPool: any = new js.Pool((seg: ISegment) => {\r\n    if (DEV) {\r\n        assert(!seg.node.parent, \"Recycling node\\'s parent should be null!\");\r\n    }\r\n    if (!isValid(seg.node)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}, 20);\r\n\r\nconst imagePool: any = new js.Pool((seg: ISegment) => {\r\n    if (DEV) {\r\n        assert(!seg.node.parent, \"Recycling node\\'s parent should be null!\");\r\n    }\r\n    return isValid(seg.node) as boolean;\r\n}, 10);\r\n\r\nfunction createSegment(type: string): ISegment {\r\n    return {\r\n        node: new Node(type),\r\n        comp: null,\r\n        lineCount: 0,\r\n        styleIndex: 0,\r\n        imageOffset: \"\",\r\n        clickParam: \"\",\r\n        clickHandler: \"\",\r\n        type,\r\n    };\r\n}\r\n\r\nfunction getSegmentByPool(type: string, content: string | SpriteFrame, mat?: Material) {\r\n    let seg;\r\n    if (type === RichTextChildName) {\r\n        seg = labelPool[\"_get\"]();\r\n    } else if (type === RichTextChildImageName) {\r\n        seg = imagePool[\"_get\"]();\r\n    }\r\n    seg = seg || createSegment(type);\r\n    let node = seg.node as Node;\r\n    if (!node) {\r\n        node = new Node(type);\r\n    }\r\n    node.hideFlags |= CCObject.Flags.DontSave | CCObject.Flags.HideInHierarchy;\r\n    if (type === RichTextChildImageName) {\r\n        seg.comp = node.getComponent(Sprite) || node.addComponent(Sprite);\r\n        seg.comp.spriteFrame = content as SpriteFrame;\r\n        seg.comp.type = Sprite.Type.SLICED;\r\n        seg.comp.sizeMode = Sprite.SizeMode.CUSTOM;\r\n    } else { // RichTextChildName\r\n        seg.comp = node.getComponent(TextMeshPro) || node.addComponent(TextMeshPro);\r\n        if (mat) {\r\n            seg.comp.customMaterial = mat;\r\n        }\r\n        seg.comp.string = content as string;\r\n        seg.comp.horizontalAlign = HorizontalTextAlignment.LEFT;\r\n        seg.comp.verticalAlign = VerticalTextAlignment.TOP;\r\n        seg.comp.underlineHeight = 2;\r\n    }\r\n    node.setPosition(0, 0, 0);\r\n    const trans = node._uiProps.uiTransformComp!;\r\n    trans.setAnchorPoint(0.5, 0.5);\r\n\r\n    seg.node = node;\r\n    seg.lineCount = 0;\r\n    seg.styleIndex = 0;\r\n    seg.imageOffset = \"\";\r\n    seg.clickParam = \"\";\r\n    seg.clickHandler = \"\";\r\n    return seg as ISegment | null;\r\n}\r\n\r\n/**\r\n * TextMeshPro富文本组件\r\n */\r\n@ccclass\r\n@disallowMultiple\r\n@executeInEditMode\r\nexport default class TmpRichText extends Component {\r\n\r\n    @property\r\n    private _string: string = \"\";\r\n    @property({ multiline: true })\r\n    public get string(): string { return this._string; }\r\n    public set string(v: string) {\r\n        if (this._string === v) { return; }\r\n        this._string = v;\r\n        // this._layoutDirty = true;\r\n        this._updateRichText();\r\n    }\r\n\r\n    @property(JsonAsset)\r\n    private _font: JsonAsset = null;\r\n    @property({ tooltip: DEV && \"字体资源\\n依赖的纹理请勿打入图集\\n在编辑器内拖拽此文件时，纹理必须和此文件处于同一目录下\", type: JsonAsset })\r\n    private get font(): JsonAsset { return this._font; }\r\n    private set font(v: JsonAsset) {\r\n        if (this._font === v) { return; }\r\n        this._font = v;\r\n        if (EDITOR) {\r\n            this.editorInit();\r\n        } else {\r\n            this._layoutDirty = true;\r\n            this._updateRichText();\r\n        }\r\n    }\r\n\r\n    @property({ type: HorizontalTextAlignment })\r\n    private _horizontalAlign: HorizontalTextAlignment = HorizontalTextAlignment.LEFT;\r\n    @property({ type: HorizontalTextAlignment })\r\n    public get horizontalAlign(): HorizontalTextAlignment { return this._horizontalAlign; }\r\n    public set horizontalAlign(v: HorizontalTextAlignment) {\r\n        if (this._horizontalAlign === v) { return; }\r\n        this._horizontalAlign = v;\r\n        this._layoutDirty = true;\r\n        this._updateRichText();\r\n    }\r\n\r\n    @property({ type: VerticalTextAlignment })\r\n    private _verticalAlign: VerticalTextAlignment = VerticalTextAlignment.TOP;\r\n    @property({ type: VerticalTextAlignment })\r\n    public get verticalAlign(): VerticalTextAlignment { return this._verticalAlign; }\r\n    public set verticalAlign(v: VerticalTextAlignment) {\r\n        if (this._verticalAlign === v) { return; }\r\n        this._verticalAlign = v;\r\n        this._layoutDirty = true;\r\n        this._updateRichText();\r\n    }\r\n\r\n    @property\r\n    private _fontSize: number = 32;\r\n    @property({ range: [0, 1024] })\r\n    public get fontSize(): number { return this._fontSize; }\r\n    public set fontSize(v: number) {\r\n        if (this._fontSize === v) { return; }\r\n        this._fontSize = v;\r\n        this._layoutDirty = true;\r\n        this._updateRichText();\r\n    }\r\n\r\n    @property\r\n    private _maxWidth: number = 0;\r\n    @property({ tooltip: DEV && \"富文本的最大宽度\" })\r\n    public get maxWidth(): number { return this._maxWidth; }\r\n    public set maxWidth(v: number) {\r\n        if (this._maxWidth === v) { return; }\r\n        this._maxWidth = v;\r\n        this._layoutDirty = true;\r\n        this._updateRichText();\r\n    }\r\n\r\n    @property\r\n    private _lineHeight: number = 32;\r\n    @property\r\n    public get lineHeight(): number { return this._lineHeight; }\r\n    public set lineHeight(v: number) {\r\n        if (this._lineHeight === v) { return; }\r\n        this._lineHeight = v;\r\n        this._layoutDirty = true;\r\n        this._updateRichText();\r\n    }\r\n\r\n    @property(SpriteAtlas)\r\n    private _imageAtlas: SpriteAtlas = null;\r\n    @property(SpriteAtlas)\r\n    public get imageAtlas(): SpriteAtlas { return this._imageAtlas; }\r\n    public set imageAtlas(v: SpriteAtlas) {\r\n        if (this._imageAtlas === v) { return; }\r\n        this._imageAtlas = v;\r\n        this._layoutDirty = true;\r\n        this._updateRichText();\r\n    }\r\n\r\n    @property\r\n    private _handleTouchEvent: boolean = true;\r\n    @property\r\n    public get handleTouchEvent(): boolean { return this._handleTouchEvent; }\r\n    public set handleTouchEvent(v: boolean) {\r\n        if (this._handleTouchEvent === v) { return; }\r\n        this._handleTouchEvent = v;\r\n        if (this.enabledInHierarchy) {\r\n            this.handleTouchEvent ? this._addEventListeners() : this._removeEventListeners();\r\n        }\r\n    }\r\n\r\n    @property(Material)\r\n    public material: Material = null;\r\n\r\n    @property({ tooltip: DEV && \"字体所依赖的纹理\", type: Texture2D, readonly: true })\r\n    public textures: Texture2D[] = [];\r\n\r\n    private _textArray: IHtmlTextParserResultObj[] = [];\r\n    private _segments: ISegment[] = [];\r\n    private _labelSegmentsCache: ISegment[] = [];\r\n    private _linesWidth: number[] = [];\r\n    private _lineOffsetX: number = 0;\r\n    private _lineCount: number = 1;\r\n    private _labelWidth: number = 0;\r\n    private _labelHeight: number = 0;\r\n    private _layoutDirty: boolean = true;\r\n    private _labelChildrenNum = 0;\r\n\r\n    // 文本父节点\r\n    private _labelContent: Node = null;\r\n    private get labelContent(): Node {\r\n        if (!this._labelContent) {\r\n            const content = \"TMP_LABEL_CONTENT\";\r\n            this._labelContent = this.node.getChildByName(content) ?? new Node(content);\r\n            this._labelContent.hideFlags |= CCObject.Flags.DontSave | CCObject.Flags.HideInHierarchy;\r\n            this.node.insertChild(this._labelContent, this._imageContent ? 1 : 0);\r\n        }\r\n        return this._labelContent;\r\n    }\r\n    // 图片父节点\r\n    private _imageContent: Node = null;\r\n    private get imageContent(): Node {\r\n        if (!this._imageContent) {\r\n            const content = \"TMP_IMAGE_CONTENT\";\r\n            this._imageContent = this.node.getChildByName(content) ?? new Node(content);\r\n            this._imageContent.hideFlags |= CCObject.Flags.DontSave | CCObject.Flags.HideInHierarchy;\r\n            this.node.insertChild(this._imageContent, 0);\r\n        }\r\n        return this._imageContent;\r\n    }\r\n\r\n    private editorInit(): void {\r\n        if (EDITOR) {\r\n            // 加载图集\r\n            if (!this._font || !this._font[\"_uuid\"]) {\r\n                this.textures = [];\r\n                this._layoutDirty = true;\r\n                this._updateRichText();\r\n                return;\r\n            }\r\n            Editor.Message.request(\"asset-db\", \"query-url\", this._font[\"_uuid\"]).then((url: string) => {\r\n                if (!url) {\r\n                    return;\r\n                }\r\n                let start = 12;\r\n                let end = url.lastIndexOf(\"/\");\r\n                let dir = url.slice(start, end + 1);\r\n                let arr: Promise<Texture2D>[] = [];\r\n                this._font.json[\"pageData\"].forEach((v) => {\r\n                    let imgUrl = dir + v.file + \"/texture\";\r\n                    arr.push(TmpUtils.load<Texture2D>(imgUrl));\r\n                });\r\n                Promise.all(arr).then((v) => {\r\n                    this.textures = v;\r\n                    this._layoutDirty = true;\r\n                    this._updateRichText();\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    public resetInEditor(): void {\r\n        if (EDITOR) {\r\n            TmpUtils.load<Material>(TmpUtils.TMP_MAT).then((mat) => {\r\n                if (mat) {\r\n                    this.material = mat;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public onRestore(): void {\r\n        if (EDITOR) {\r\n            // Because undo/redo will not call onEnable/onDisable,\r\n            // we need call onEnable/onDisable manually to active/disactive children nodes.\r\n            if (this.enabledInHierarchy) {\r\n                this.onEnable();\r\n            }\r\n            else {\r\n                this.onDisable();\r\n            }\r\n        }\r\n    }\r\n\r\n    public onEnable(): void {\r\n        if (this.handleTouchEvent) {\r\n            this._addEventListeners();\r\n        }\r\n        this._onFontLoaded();\r\n        this._activateChildren(true);\r\n    }\r\n\r\n    public onDisable(): void {\r\n        if (this.handleTouchEvent) {\r\n            this._removeEventListeners();\r\n        }\r\n        this._activateChildren(false);\r\n    }\r\n\r\n    public onLoad() {\r\n        this.node.on(NodeEventType.LAYER_CHANGED, this._applyLayer, this);\r\n    }\r\n\r\n    public onDestroy(): void {\r\n        for (const seg of this._segments) {\r\n            seg.node.removeFromParent();\r\n            if (seg.type === RichTextChildName) {\r\n                labelPool.put(seg);\r\n            } else if (seg.type === RichTextChildImageName) {\r\n                imagePool.put(seg);\r\n            }\r\n        }\r\n\r\n        this.node.off(NodeEventType.ANCHOR_CHANGED, this._updateRichTextPosition, this);\r\n        this.node.off(NodeEventType.LAYER_CHANGED, this._applyLayer, this);\r\n    }\r\n\r\n    public start() {\r\n        this._onFontLoaded();\r\n        this.node.on(NodeEventType.ANCHOR_CHANGED, this._updateRichTextPosition, this);\r\n    }\r\n\r\n    private _addEventListeners(): void {\r\n        this.node.on(Node.EventType.TOUCH_END, this._onTouchEnded, this);\r\n    }\r\n\r\n    private _removeEventListeners(): void {\r\n        this.node.off(Node.EventType.TOUCH_END, this._onTouchEnded, this);\r\n    }\r\n\r\n    private _updateLabelSegmentTextAttributes(): void {\r\n        this._segments.forEach((item) => {\r\n            this._applyTextAttribute(item);\r\n        });\r\n    }\r\n\r\n    private _createFontLabel(str: string): ISegment {\r\n        return getSegmentByPool(RichTextChildName, str, this.material)!;\r\n    }\r\n\r\n    protected _createImage(spriteFrame: SpriteFrame): ISegment {\r\n        return getSegmentByPool(RichTextChildImageName, spriteFrame)!;\r\n    }\r\n\r\n    private _onFontLoaded(): void {\r\n        this._layoutDirty = true;\r\n        this._updateRichText();\r\n    }\r\n\r\n    protected SplitLongStringApproximatelyIn2048(text: string, styleIndex: number) {\r\n        const labelSize = this._calculateSize(styleIndex, text);\r\n        const partStringArr: string[] = [];\r\n        if (labelSize.x < 2048) {\r\n            partStringArr.push(text);\r\n        } else {\r\n            const multilineTexts = text.split(\"\\n\");\r\n            for (let i = 0; i < multilineTexts.length; i++) {\r\n                const thisPartSize = this._calculateSize(styleIndex, multilineTexts[i]);\r\n                if (thisPartSize.x < 2048) {\r\n                    partStringArr.push(multilineTexts[i]);\r\n                } else {\r\n                    const thisPartSplitResultArr = this.splitLongStringOver2048(multilineTexts[i], styleIndex);\r\n                    partStringArr.push(...thisPartSplitResultArr);\r\n                }\r\n            }\r\n        }\r\n        return partStringArr;\r\n    }\r\n\r\n    /**\r\n    * @engineInternal\r\n    */\r\n    protected splitLongStringOver2048(text: string, styleIndex: number) {\r\n        const partStringArr: string[] = [];\r\n        const longStr = text;\r\n\r\n        let curStart = 0;\r\n        let curEnd = longStr.length / 2;\r\n        let curString = longStr.substring(curStart, curEnd);\r\n        let leftString = longStr.substring(curEnd);\r\n        let curStringSize = this._calculateSize(styleIndex, curString);\r\n        let leftStringSize = this._calculateSize(styleIndex, leftString);\r\n\r\n        // a line should be an unit to split long string\r\n        const lineCountForOnePart = 1;\r\n        const sizeForOnePart = lineCountForOnePart * this.maxWidth;\r\n\r\n        // divide text into some pieces of which the size is less than sizeForOnePart\r\n        while (curStringSize.x > sizeForOnePart) {\r\n            curEnd /= 2;\r\n            // at least one char can be an entity, step back.\r\n            if (curEnd < 1) {\r\n                curEnd *= 2;\r\n                break;\r\n            }\r\n\r\n            curString = curString.substring(curStart, curEnd);\r\n            leftString = longStr.substring(curEnd);\r\n            curStringSize = this._calculateSize(styleIndex, curString);\r\n        }\r\n\r\n        // avoid too many loops\r\n        let leftTryTimes = 1000;\r\n        // the minimum step of expansion or reduction\r\n        let curWordStep = 1;\r\n        while (leftTryTimes && curStart < text.length) {\r\n            while (leftTryTimes && curStringSize.x < sizeForOnePart) {\r\n                const nextPartExec = TmpUtils.getEnglishWordPartAtFirst(leftString);\r\n                // add a character, unless there is a complete word at the beginning of the next line\r\n                if (nextPartExec && nextPartExec.length > 0) {\r\n                    curWordStep = nextPartExec[0].length;\r\n                }\r\n                curEnd += curWordStep;\r\n\r\n                curString = longStr.substring(curStart, curEnd);\r\n                leftString = longStr.substring(curEnd);\r\n                curStringSize = this._calculateSize(styleIndex, curString);\r\n\r\n                leftTryTimes--;\r\n            }\r\n\r\n            // reduce condition：size > maxwidth && curString.length >= 2\r\n            while (leftTryTimes && curString.length >= 2 && curStringSize.x > sizeForOnePart) {\r\n                curEnd -= curWordStep;\r\n                curString = longStr.substring(curStart, curEnd);\r\n                curStringSize = this._calculateSize(styleIndex, curString);\r\n                // after the first reduction, the step should be 1.\r\n                curWordStep = 1;\r\n\r\n                leftTryTimes--;\r\n            }\r\n\r\n            // consider there is a part of a word at the end of this line, it should be moved to the next line\r\n            if (curString.length >= 2) {\r\n                const lastWordExec = TmpUtils.getEnglishWordPartAtLast(curString);\r\n                if (lastWordExec && lastWordExec.length > 0\r\n                    // to avoid endless loop when there is only one word in this line\r\n                    && curString !== lastWordExec[0]) {\r\n                    curEnd -= lastWordExec[0].length;\r\n                    curString = longStr.substring(curStart, curEnd);\r\n                }\r\n            }\r\n\r\n            // curStart and curEnd can be float since they are like positions of pointer,\r\n            // but step must be integer because we split the complete characters of which the unit is integer.\r\n            // it is reasonable that using the length of this result to estimate the next result.\r\n            partStringArr.push(curString);\r\n            const partStep = curString.length;\r\n            curStart = curEnd;\r\n            curEnd += partStep;\r\n\r\n            curString = longStr.substring(curStart, curEnd);\r\n            leftString = longStr.substring(curEnd);\r\n            leftStringSize = this._calculateSize(styleIndex, leftString);\r\n\r\n            leftTryTimes--;\r\n\r\n            // Exit: If the left part string size is less than 2048, the method will finish.\r\n            if (leftStringSize.x < 2048) {\r\n                curStart = text.length;\r\n                curEnd = text.length;\r\n                curString = leftString;\r\n                partStringArr.push(curString);\r\n                break;\r\n            } else {\r\n                curStringSize = this._calculateSize(styleIndex, curString);\r\n            }\r\n        }\r\n\r\n        return partStringArr;\r\n    }\r\n\r\n    private _measureText(styleIndex: number, string?: string): number | ((s: string) => number) {\r\n        const func = (s: string) => {\r\n            const labelSize = this._calculateSize(styleIndex, s);\r\n            return labelSize.width;\r\n        };\r\n        if (string) {\r\n            return func(string);\r\n        } else {\r\n            return func;\r\n        }\r\n    }\r\n\r\n    protected _calculateSize(styleIndex: number, s: string) {\r\n        let label: ISegment;\r\n        if (this._labelSegmentsCache.length === 0) {\r\n            label = this._createFontLabel(s);\r\n            this._labelSegmentsCache.push(label);\r\n        } else {\r\n            label = this._labelSegmentsCache[0];\r\n            label.node.getComponent(TextMeshPro)!.string = s;\r\n        }\r\n        label.styleIndex = styleIndex;\r\n        this._applyTextAttribute(label);\r\n        const labelSize = label.node._uiProps.uiTransformComp!.contentSize;\r\n        return labelSize;\r\n    }\r\n\r\n    private _onTouchEnded(event: EventTouch): void {\r\n        const components = this.node.getComponents(Component);\r\n\r\n        for (const seg of this._segments) {\r\n            const clickHandler = seg.clickHandler;\r\n            const clickParam = seg.clickParam;\r\n            if (clickHandler && this._containsTouchLocation(seg, event.touch!.getUILocation())) {\r\n                components.forEach((component) => {\r\n                    const func = component[clickHandler];\r\n                    if (component.enabledInHierarchy && func) {\r\n                        func.call(component, event, clickParam);\r\n                    }\r\n                });\r\n                event.propagationStopped = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _containsTouchLocation(label: ISegment, point: Vec2) {\r\n        const comp = label.node.getComponent(UITransform);\r\n        if (!comp) {\r\n            return false;\r\n        }\r\n\r\n        const myRect = comp.getBoundingBoxToWorld();\r\n        return myRect.contains(point);\r\n    }\r\n\r\n    private _resetContent(node: Node): void {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        const children = node.children;\r\n        for (let i = children.length - 1; i >= 0; i--) {\r\n            const child = children[i];\r\n            if (child.name === RichTextChildName || child.name === RichTextChildImageName) {\r\n                if (child.parent === node) {\r\n                    child.parent = null;\r\n                } else {\r\n                    // In case child.parent !== this.node, child cannot be removed from children\r\n                    children.splice(i, 1);\r\n                }\r\n\r\n                const segment = createSegment(child.name);\r\n                segment.node = child;\r\n                if (child.name === RichTextChildName) {\r\n                    segment.comp = child.getComponent(TextMeshPro);\r\n                    labelPool.put(segment);\r\n                } else {\r\n                    segment.comp = child.getComponent(Sprite);\r\n                    imagePool.put(segment);\r\n                }\r\n                this._labelChildrenNum--;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _resetState(): void {\r\n        this._resetContent(this._labelContent);\r\n        this._resetContent(this._imageContent);\r\n\r\n        this._segments.length = 0;\r\n        this._labelSegmentsCache.length = 0;\r\n        this._linesWidth.length = 0;\r\n        this._lineOffsetX = 0;\r\n        this._lineCount = 1;\r\n        this._labelWidth = 0;\r\n        this._labelHeight = 0;\r\n        this._layoutDirty = true;\r\n    }\r\n\r\n    private _activateChildren(active: boolean): void {\r\n        this.node.children.forEach((content) => {\r\n            for (let i = content.children.length - 1; i >= 0; i--) {\r\n                const child = content.children[i];\r\n                if (child.name === RichTextChildName || child.name === RichTextChildImageName) {\r\n                    child.active = active;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private _addLabelSegment(stringToken: string, styleIndex: number): ISegment {\r\n        let labelSegment: ISegment;\r\n        if (this._labelSegmentsCache.length === 0) {\r\n            labelSegment = this._createFontLabel(stringToken);\r\n        } else {\r\n            labelSegment = this._labelSegmentsCache.pop()!;\r\n            const label = labelSegment.node.getComponent(TextMeshPro);\r\n            if (label) {\r\n                label.string = stringToken;\r\n            }\r\n        }\r\n\r\n        // set vertical alignments\r\n        // because horizontal alignment is applied with line offsets in method \"_updateRichTextPosition\"\r\n        const labelComp: TextMeshPro = labelSegment.comp as TextMeshPro;\r\n        if (labelComp.verticalAlign !== this._verticalAlign) {\r\n            labelComp.verticalAlign = this._verticalAlign;\r\n        }\r\n\r\n        labelSegment.styleIndex = styleIndex;\r\n        labelSegment.lineCount = this._lineCount;\r\n        labelSegment.node._uiProps.uiTransformComp!.setAnchorPoint(0, 0);\r\n        labelSegment.node.layer = this.node.layer;\r\n        this.labelContent.insertChild(labelSegment.node, this._labelChildrenNum++);\r\n        this._applyTextAttribute(labelSegment);\r\n        this._segments.push(labelSegment);\r\n\r\n        return labelSegment;\r\n    }\r\n\r\n    private _updateRichTextWithMaxWidth(labelString, labelWidth, styleIndex): void {\r\n        let fragmentWidth = labelWidth;\r\n        let labelSegment: ISegment;\r\n\r\n        if (this._lineOffsetX > 0 && fragmentWidth + this._lineOffsetX > this._maxWidth) {\r\n            // concat previous line\r\n            let checkStartIndex = 0;\r\n            while (this._lineOffsetX <= this._maxWidth) {\r\n                const checkEndIndex = this._getFirstWordLen(labelString, checkStartIndex, labelString.length);\r\n                const checkString = labelString.substr(checkStartIndex, checkEndIndex);\r\n                const checkStringWidth = this._measureText(styleIndex, checkString) as number;\r\n\r\n                if (this._lineOffsetX + checkStringWidth <= this._maxWidth) {\r\n                    this._lineOffsetX += checkStringWidth;\r\n                    checkStartIndex += checkEndIndex;\r\n                } else {\r\n                    if (checkStartIndex > 0) {\r\n                        const remainingString = labelString.substr(0, checkStartIndex);\r\n                        this._addLabelSegment(remainingString, styleIndex);\r\n                        labelString = labelString.substr(checkStartIndex, labelString.length);\r\n                        fragmentWidth = this._measureText(styleIndex, labelString) as number;\r\n                    }\r\n                    this._updateLineInfo();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (fragmentWidth > this._maxWidth) {\r\n            const fragments = TmpUtils.fragmentText(labelString, fragmentWidth, this._maxWidth,\r\n                this._measureText(styleIndex) as unknown as (s: string) => number);\r\n            for (let k = 0; k < fragments.length; ++k) {\r\n                const splitString = fragments[k];\r\n                labelSegment = this._addLabelSegment(splitString, styleIndex);\r\n                const labelSize = labelSegment.node._uiProps.uiTransformComp!.contentSize;\r\n                this._lineOffsetX += labelSize.width;\r\n                if (fragments.length > 1 && k < fragments.length - 1) {\r\n                    this._updateLineInfo();\r\n                }\r\n            }\r\n        } else {\r\n            this._lineOffsetX += fragmentWidth;\r\n            this._addLabelSegment(labelString, styleIndex);\r\n        }\r\n    }\r\n\r\n    private _isLastComponentCR(stringToken: string): boolean {\r\n        return stringToken.length - 1 === stringToken.lastIndexOf(\"\\n\");\r\n    }\r\n\r\n    private _updateLineInfo(): void {\r\n        this._linesWidth.push(this._lineOffsetX);\r\n        this._lineOffsetX = 0;\r\n        this._lineCount++;\r\n    }\r\n\r\n    private _needsUpdateTextLayout(newTextArray): boolean {\r\n        if (this._layoutDirty || !this._textArray || !newTextArray) {\r\n            return true;\r\n        }\r\n\r\n        if (this._textArray.length !== newTextArray.length) {\r\n            return true;\r\n        }\r\n\r\n        for (let i = 0; i < this._textArray.length; i++) {\r\n            const oldItem = this._textArray[i];\r\n            const newItem = newTextArray[i];\r\n            if (oldItem.text !== newItem.text) {\r\n                return true;\r\n            } else {\r\n                const oldStyle = oldItem.style; const newStyle = newItem.style;\r\n                if (oldStyle) {\r\n                    if (newStyle) {\r\n                        if (!!newStyle.outline !== !!oldStyle.outline) {\r\n                            return true;\r\n                        }\r\n                        if (oldStyle.size !== newStyle.size\r\n                            || oldStyle.italic !== newStyle.italic\r\n                            || oldStyle.isImage !== newStyle.isImage) {\r\n                            return true;\r\n                        }\r\n                        if (oldStyle.src !== newStyle.src\r\n                            || oldStyle.imageAlign !== newStyle.imageAlign\r\n                            || oldStyle.imageHeight !== newStyle.imageHeight\r\n                            || oldStyle.imageWidth !== newStyle.imageWidth\r\n                            || oldStyle.imageOffset !== newStyle.imageOffset) {\r\n                            return true;\r\n                        }\r\n                    } else if (oldStyle.size || oldStyle.italic || oldStyle.isImage || oldStyle.outline) {\r\n                        return true;\r\n                    }\r\n                } else if (newStyle) {\r\n                    if (newStyle.size || newStyle.italic || newStyle.isImage || newStyle.outline) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _addRichTextImageElement(richTextElement): void {\r\n        if (!richTextElement.style) {\r\n            return;\r\n        }\r\n\r\n        const style = richTextElement.style;\r\n        const spriteFrameName = style.src;\r\n        const spriteFrame = this._imageAtlas && spriteFrameName && this._imageAtlas.getSpriteFrame(spriteFrameName);\r\n        if (!spriteFrame) {\r\n            warnID(4400);\r\n        } else {\r\n            const segment = this._createImage(spriteFrame);\r\n            const sprite = segment.comp;\r\n            switch (style.imageAlign) {\r\n                case \"top\":\r\n                    segment.node._uiProps.uiTransformComp!.setAnchorPoint(0, 1);\r\n                    break;\r\n                case \"center\":\r\n                    segment.node._uiProps.uiTransformComp!.setAnchorPoint(0, 0.5);\r\n                    break;\r\n                default:\r\n                    segment.node._uiProps.uiTransformComp!.setAnchorPoint(0, 0);\r\n                    break;\r\n            }\r\n\r\n            if (style.imageOffset) {\r\n                segment.imageOffset = style.imageOffset;\r\n            }\r\n            segment.node.layer = this.node.layer;\r\n            this.imageContent.insertChild(segment.node, this._labelChildrenNum++);\r\n            this._segments.push(segment);\r\n\r\n            const spriteRect = spriteFrame.rect.clone();\r\n            let scaleFactor = 1;\r\n            let spriteWidth = spriteRect.width;\r\n            let spriteHeight = spriteRect.height;\r\n            const expectWidth = style.imageWidth || 0;\r\n            const expectHeight = style.imageHeight || 0;\r\n\r\n            if (expectHeight > 0) {\r\n                scaleFactor = expectHeight / spriteHeight;\r\n                spriteWidth *= scaleFactor;\r\n                spriteHeight *= scaleFactor;\r\n            } else {\r\n                scaleFactor = this._lineHeight / spriteHeight;\r\n                spriteWidth *= scaleFactor;\r\n                spriteHeight *= scaleFactor;\r\n            }\r\n\r\n            if (expectWidth > 0) {\r\n                spriteWidth = expectWidth;\r\n            }\r\n\r\n            if (this._maxWidth > 0) {\r\n                if (this._lineOffsetX + spriteWidth > this._maxWidth) {\r\n                    this._updateLineInfo();\r\n                }\r\n                this._lineOffsetX += spriteWidth;\r\n            } else {\r\n                this._lineOffsetX += spriteWidth;\r\n                if (this._lineOffsetX > this._labelWidth) {\r\n                    this._labelWidth = this._lineOffsetX;\r\n                }\r\n            }\r\n            segment.node._uiProps.uiTransformComp!.setContentSize(spriteWidth, spriteHeight);\r\n            segment.lineCount = this._lineCount;\r\n\r\n            segment.clickHandler = \"\";\r\n            segment.clickParam = \"\";\r\n            const event = style.event;\r\n            if (event) {\r\n                segment.clickHandler = event.click;\r\n                segment.clickParam = event.param;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _updateRichText(): void {\r\n        if (!this.enabledInHierarchy) {\r\n            return;\r\n        }\r\n\r\n        const newTextArray = _htmlTextParser.parse(this._string);\r\n        if (!this._needsUpdateTextLayout(newTextArray)) {\r\n            this._textArray = newTextArray.slice();\r\n            this._updateLabelSegmentTextAttributes();\r\n            return;\r\n        }\r\n\r\n        this._textArray = newTextArray.slice();\r\n        this._resetState();\r\n\r\n        let lastEmptyLine = false;\r\n        let label: ISegment;\r\n\r\n        for (let i = 0; i < this._textArray.length; ++i) {\r\n            const richTextElement = this._textArray[i];\r\n            let text = richTextElement.text;\r\n            if (text === undefined) {\r\n                continue;\r\n            }\r\n\r\n            // handle <br/> <img /> tag\r\n            if (text === \"\") {\r\n                if (richTextElement.style && richTextElement.style.isNewLine) {\r\n                    this._updateLineInfo();\r\n                    continue;\r\n                }\r\n                if (richTextElement.style && richTextElement.style.isImage && this._imageAtlas) {\r\n                    this._addRichTextImageElement(richTextElement);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            const splitArr: string[] = this.SplitLongStringApproximatelyIn2048(text, i);\r\n            text = splitArr.join(\"\\n\");\r\n\r\n            const multilineTexts = text.split(\"\\n\");\r\n\r\n            for (let j = 0; j < multilineTexts.length; ++j) {\r\n                const labelString = multilineTexts[j];\r\n                if (labelString === \"\") {\r\n                    // for continues \\n\r\n                    if (this._isLastComponentCR(text) && j === multilineTexts.length - 1) {\r\n                        continue;\r\n                    }\r\n                    this._updateLineInfo();\r\n                    lastEmptyLine = true;\r\n                    continue;\r\n                }\r\n                lastEmptyLine = false;\r\n\r\n                if (this._maxWidth > 0) {\r\n                    const labelWidth = this._measureText(i, labelString) as number;\r\n                    this._updateRichTextWithMaxWidth(labelString, labelWidth, i);\r\n\r\n                    if (multilineTexts.length > 1 && j < multilineTexts.length - 1) {\r\n                        this._updateLineInfo();\r\n                    }\r\n                } else {\r\n                    label = this._addLabelSegment(labelString, i);\r\n\r\n                    this._lineOffsetX += label.node._uiProps.uiTransformComp!.width;\r\n                    if (this._lineOffsetX > this._labelWidth) {\r\n                        this._labelWidth = this._lineOffsetX;\r\n                    }\r\n\r\n                    if (multilineTexts.length > 1 && j < multilineTexts.length - 1) {\r\n                        this._updateLineInfo();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (!lastEmptyLine) {\r\n            this._linesWidth.push(this._lineOffsetX);\r\n        }\r\n\r\n        if (this._maxWidth > 0) {\r\n            this._labelWidth = this._maxWidth;\r\n        }\r\n        this._labelHeight = (this._lineCount + BASELINE_RATIO) * this._lineHeight;\r\n\r\n        // trigger \"size-changed\" event\r\n        this.node._uiProps.uiTransformComp!.setContentSize(this._labelWidth, this._labelHeight);\r\n\r\n        this._updateRichTextPosition();\r\n        this._layoutDirty = false;\r\n    }\r\n\r\n    private _getFirstWordLen(text, startIndex, textLen): number {\r\n        let character = text.charAt(startIndex);\r\n        if (TmpUtils.isUnicodeCJK(character) || TmpUtils.isUnicodeSpace(character)) {\r\n            return 1;\r\n        }\r\n\r\n        let len = 1;\r\n        for (let index = startIndex + 1; index < textLen; ++index) {\r\n            character = text.charAt(index);\r\n            if (TmpUtils.isUnicodeSpace(character) || TmpUtils.isUnicodeCJK(character)) {\r\n                break;\r\n            }\r\n\r\n            len++;\r\n        }\r\n\r\n        return len;\r\n    }\r\n\r\n    private _updateRichTextPosition(): void {\r\n        let nextTokenX = 0;\r\n        let nextLineIndex = 1;\r\n        const totalLineCount = this._lineCount;\r\n        const trans = this.node._uiProps.uiTransformComp!;\r\n        const anchorX = trans.anchorX;\r\n        const anchorY = trans.anchorY;\r\n        for (let i = 0; i < this._segments.length; ++i) {\r\n            const segment = this._segments[i];\r\n            const lineCount = segment.lineCount;\r\n            if (lineCount > nextLineIndex) {\r\n                nextTokenX = 0;\r\n                nextLineIndex = lineCount;\r\n            }\r\n\r\n            let lineOffsetX = this._labelWidth * (this._horizontalAlign * 0.5 - anchorX);\r\n            switch (this._horizontalAlign) {\r\n                case HorizontalTextAlignment.LEFT:\r\n                    break;\r\n                case HorizontalTextAlignment.CENTER:\r\n                    lineOffsetX -= this._linesWidth[lineCount - 1] / 2;\r\n                    break;\r\n                case HorizontalTextAlignment.RIGHT:\r\n                    lineOffsetX -= this._linesWidth[lineCount - 1];\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            const pos = segment.node.position;\r\n            segment.node.setPosition(nextTokenX + lineOffsetX,\r\n                this._lineHeight * (totalLineCount - lineCount) - this._labelHeight * anchorY,\r\n                pos.z);\r\n\r\n            if (lineCount === nextLineIndex) {\r\n                nextTokenX += segment.node._uiProps.uiTransformComp!.width;\r\n                // 排版根据TextMeshPro字符信息适配\r\n                let tmp: TextMeshPro = segment.node.getComponent(TextMeshPro);\r\n                if (tmp && tmp.richTextDeltaX) {\r\n                    nextTokenX += tmp.richTextDeltaX;\r\n                }\r\n            }\r\n\r\n            const sprite = segment.node.getComponent(Sprite);\r\n            if (sprite) {\r\n                const position = segment.node.position.clone();\r\n                // adjust img align (from <img align=top|center|bottom>)\r\n                const lineHeightSet = this._lineHeight;\r\n                const lineHeightReal = this._lineHeight * (1 + BASELINE_RATIO); // single line node height\r\n                switch (segment.node._uiProps.uiTransformComp!.anchorY) {\r\n                    case 1:\r\n                        position.y += (lineHeightSet + ((lineHeightReal - lineHeightSet) / 2));\r\n                        break;\r\n                    case 0.5:\r\n                        position.y += (lineHeightReal / 2);\r\n                        break;\r\n                    default:\r\n                        position.y += ((lineHeightReal - lineHeightSet) / 2);\r\n                        break;\r\n                }\r\n                // adjust img offset (from <img offset=12|12,34>)\r\n                if (segment.imageOffset) {\r\n                    const offsets = segment.imageOffset.split(\",\");\r\n                    if (offsets.length === 1 && offsets[0]) {\r\n                        const offsetY = parseFloat(offsets[0]);\r\n                        if (Number.isInteger(offsetY)) position.y += offsetY;\r\n                    } else if (offsets.length === 2) {\r\n                        const offsetX = parseFloat(offsets[0]);\r\n                        const offsetY = parseFloat(offsets[1]);\r\n                        if (Number.isInteger(offsetX)) position.x += offsetX;\r\n                        if (Number.isInteger(offsetY)) position.y += offsetY;\r\n                    }\r\n                }\r\n                segment.node.position = position;\r\n            }\r\n\r\n            // // adjust y for label with outline\r\n            // const outline = segment.node.getComponent(LabelOutline);\r\n            // if (outline) {\r\n            //     const position = segment.node.position.clone();\r\n            //     position.y -= outline.width;\r\n            //     segment.node.position = position;\r\n            // }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 16进制颜色转换\r\n     * @param color \r\n     */\r\n    private _convertLiteralColorValue(color: string): Color {\r\n        const colorValue = color.toUpperCase();\r\n        if (Color[colorValue]) {\r\n            const colorUse: Color = Color[colorValue];\r\n            return colorUse;\r\n        }\r\n        else {\r\n            let hexString = (color.indexOf(\"#\") === 0) ? color.substring(1) : color;\r\n            let r = parseInt(hexString.substring(0, 2), 16) || 0;\r\n            let g = parseInt(hexString.substring(2, 4), 16) || 0;\r\n            let b = parseInt(hexString.substring(4, 6), 16) || 0;\r\n            let a = parseInt(hexString.substring(6, 8), 16);\r\n            if (Number.isNaN(a)) {\r\n                a = 255;\r\n            }\r\n            return new Color(r, g, b, a);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新字体样式\r\n     */\r\n    private _applyTextAttribute(labelSeg: ISegment): void {\r\n        let labelComponent: TextMeshPro = labelSeg.node.getComponent(TextMeshPro);\r\n        if (!labelComponent) {\r\n            return;\r\n        }\r\n\r\n        const index = labelSeg.styleIndex;\r\n\r\n        let textStyle: IHtmlTextParserStack = null;\r\n        if (this._textArray[index]) {\r\n            textStyle = this._textArray[index].style;\r\n        }\r\n\r\n        if (textStyle && textStyle.color) {\r\n            labelComponent.color = this._convertLiteralColorValue(textStyle.color);\r\n        } else {\r\n            labelComponent.color = Color.WHITE;\r\n        }\r\n\r\n        labelComponent.setFont(this.font, this.textures);\r\n        labelComponent.lineHeight = this.lineHeight;\r\n\r\n        labelComponent.colorGradient = Boolean(textStyle && textStyle.colorGradient);\r\n        if (labelComponent.colorGradient) {\r\n            labelComponent.colorLB = this._convertLiteralColorValue(textStyle.colorGradient.lb);\r\n            labelComponent.colorRB = this._convertLiteralColorValue(textStyle.colorGradient.rb);\r\n            labelComponent.colorLT = this._convertLiteralColorValue(textStyle.colorGradient.lt);\r\n            labelComponent.colorRT = this._convertLiteralColorValue(textStyle.colorGradient.rt);\r\n        }\r\n\r\n        if (textStyle && textStyle.face) {\r\n            labelComponent.tmpUniform.faceColor = this._convertLiteralColorValue(textStyle.face.color);\r\n            labelComponent.tmpUniform.faceDilate = textStyle.face.dilate;\r\n            labelComponent.tmpUniform.faceSoftness = textStyle.face.softness;\r\n        } else {\r\n            labelComponent.tmpUniform.faceColor = Color.WHITE;\r\n            labelComponent.tmpUniform.faceDilate = 0.5;\r\n            labelComponent.tmpUniform.faceSoftness = 0.01;\r\n        }\r\n\r\n        labelComponent.enableItalic = Boolean(textStyle && textStyle.italic);\r\n        labelComponent.enableUnderline = Boolean(textStyle && textStyle.underline);\r\n        if (labelComponent.enableUnderline) {\r\n            labelComponent.underlineOffset = textStyle.offset || 0;\r\n        }\r\n        labelComponent.enableStrikethrough = Boolean(textStyle && textStyle.strikethrough);\r\n        if (labelComponent.enableStrikethrough) {\r\n            labelComponent.strikethroughOffset = textStyle.offset || 0;\r\n        }\r\n\r\n        labelComponent.tmpUniform.enableOutline = Boolean(textStyle && textStyle.outline);\r\n        if (textStyle && textStyle.outline) {\r\n            labelComponent.tmpUniform.outlineColor = this._convertLiteralColorValue(textStyle.outline.color);\r\n            labelComponent.tmpUniform.outlineThickness = textStyle.outline.thickness;\r\n        }\r\n\r\n        labelComponent.tmpUniform.enableUnderlay = Boolean(textStyle && textStyle.underlay);\r\n        if (labelComponent.tmpUniform.enableUnderlay) {\r\n            labelComponent.tmpUniform.underlayColor = this._convertLiteralColorValue(textStyle.underlay.color);\r\n            labelComponent.tmpUniform.underlayOffset = v2(textStyle.underlay.x, textStyle.underlay.y);\r\n            labelComponent.tmpUniform.underlayDilate = textStyle.underlay.dilate;\r\n            labelComponent.tmpUniform.underlaySoftness = textStyle.underlay.softness;\r\n        }\r\n\r\n        labelComponent.tmpUniform.enableGlow = Boolean(textStyle && textStyle.glow);\r\n        if (labelComponent.tmpUniform.enableGlow) {\r\n            labelComponent.tmpUniform.glowColor = this._convertLiteralColorValue(textStyle.glow.color);\r\n            labelComponent.tmpUniform.glowOffset = textStyle.glow.offset;\r\n            labelComponent.tmpUniform.glowInner = textStyle.glow.inner;\r\n            labelComponent.tmpUniform.glowOuter = textStyle.glow.outer;\r\n            labelComponent.tmpUniform.glowPower = textStyle.glow.power;\r\n        }\r\n\r\n        if (textStyle && textStyle.size) {\r\n            labelComponent.fontSize = textStyle.size;\r\n        } else {\r\n            labelComponent.fontSize = this.fontSize;\r\n        }\r\n\r\n        labelComponent.forceUpdateRenderData();\r\n\r\n        labelSeg.clickHandler = \"\";\r\n        labelSeg.clickParam = \"\";\r\n        const event = textStyle?.event;\r\n        if (event) {\r\n            labelSeg.clickHandler = event.click || \"\";\r\n            labelSeg.clickParam = event.param || \"\";\r\n        }\r\n    }\r\n\r\n    protected _applyLayer(): void {\r\n        for (const seg of this._segments) {\r\n            seg.node.layer = this.node.layer;\r\n        }\r\n    }\r\n}","import { assetManager, Component, warn } from \"cc\";\r\nimport { EDITOR } from \"cc/env\";\r\n\r\nconst WORD_REG = /([a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûа-яА-ЯЁё]+|\\S)/;\r\n// eslint-disable-next-line no-useless-escape\r\nconst SYMBOL_REG = /^[!,.:;'}\\]%\\?>、‘“》？。，！]/;\r\nconst LAST_WORD_REG = /([a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁёáàảạãăắằẳẵặâấầẩẫậéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵđÁÀẢẠÃĂẮẰẲẴẶÂẤẦẨẪẬÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴĐ]+|\\S)$/;\r\nconst LAST_ENGLISH_REG = /[a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁёáàảạãăắằẳẵặâấầẩẫậéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵđÁÀẢẠÃĂẮẰẲẴẶÂẤẦẨẪẬÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴĐ]+$/;\r\nconst FIRST_ENGLISH_REG = /^[a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁёáàảạãăắằẳẵặâấầẩẫậéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵđÁÀẢẠÃĂẮẰẲẴẶÂẤẦẨẪẬÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴĐ]/;\r\nconst WRAP_INSPECTION = true;\r\n\r\n// in case truncate a character on the Supplementary Multilingual Plane\r\n// test case: a = '😉🚗'\r\n// _safeSubstring(a, 1) === '😉🚗'\r\n// _safeSubstring(a, 0, 1) === '😉'\r\n// _safeSubstring(a, 0, 2) === '😉'\r\n// _safeSubstring(a, 0, 3) === '😉'\r\n// _safeSubstring(a, 0, 4) === '😉🚗'\r\n// _safeSubstring(a, 1, 2) === _safeSubstring(a, 1, 3) === '😉'\r\n// _safeSubstring(a, 2, 3) === _safeSubstring(a, 2, 4) === '🚗'\r\nfunction _safeSubstring(targetString, startIndex, endIndex?) {\r\n    let newStartIndex = startIndex;\r\n    let newEndIndex = endIndex;\r\n    const startChar = targetString[startIndex];\r\n    // lowSurrogateRex\r\n    if (startChar >= '\\uDC00' && startChar <= '\\uDFFF') {\r\n        newStartIndex--;\r\n    }\r\n    if (endIndex !== undefined) {\r\n        if (endIndex - 1 !== startIndex) {\r\n            const endChar = targetString[endIndex - 1];\r\n            // highSurrogateRex\r\n            if (endChar >= '\\uD800' && endChar <= '\\uDBFF') {\r\n                newEndIndex--;\r\n            }\r\n        } else if (startChar >= '\\uD800' && startChar <= '\\uDBFF') {\r\n            // highSurrogateRex\r\n            newEndIndex++;\r\n        }\r\n    }\r\n    return targetString.substring(newStartIndex, newEndIndex) as string;\r\n}\r\n\r\nexport default class TmpUtils {\r\n    /** TextMeshPro组件默认材质路径 */\r\n    public static readonly TMP_MAT: string = \"textMeshPro/resources/shader/materials/textMeshPro.mtl\";\r\n\r\n    /**\r\n     * 编辑器模式下加载资源\r\n     * @param url db://assets/\r\n     */\r\n    public static load<T>(url: string): Promise<T> {\r\n        return new Promise<T>((resolve, reject) => {\r\n            if (!EDITOR) {\r\n                resolve(null);\r\n                return;\r\n            }\r\n            Editor.Message.request(\"asset-db\", \"query-uuid\", `db://assets/${url}`).then((uuid) => {\r\n                if (!uuid) {\r\n                    resolve(null);\r\n                    warn(`[EditorTool.load] uuid查询失败 url: ${url}`);\r\n                    return;\r\n                }\r\n                assetManager.loadAny(uuid, (error: any, result: T) => {\r\n                    if (error || !result) {\r\n                        resolve(null);\r\n                        warn(`[EditorTool.load] 资源加载失败 url: ${url}`);\r\n                        return;\r\n                    }\r\n                    resolve(result);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 异步等待 - cc.Component.scheduleOnce\r\n     */\r\n    public static waitCmpt(cmpt: Component, seconds: number): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            cmpt.scheduleOnce(() => {\r\n                resolve();\r\n            }, seconds);\r\n        });\r\n    }\r\n\r\n    public static isUnicodeCJK(ch: string) {\r\n        const __CHINESE_REG = /^[\\u4E00-\\u9FFF\\u3400-\\u4DFF]+$/;\r\n        const __JAPANESE_REG = /[\\u3000-\\u303F]|[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\uFF00-\\uFFEF]|[\\u4E00-\\u9FAF]|[\\u2605-\\u2606]|[\\u2190-\\u2195]|\\u203B/g;\r\n        const __KOREAN_REG = /^[\\u1100-\\u11FF]|[\\u3130-\\u318F]|[\\uA960-\\uA97F]|[\\uAC00-\\uD7AF]|[\\uD7B0-\\uD7FF]+$/;\r\n        return __CHINESE_REG.test(ch) || __JAPANESE_REG.test(ch) || __KOREAN_REG.test(ch);\r\n    }\r\n\r\n    // Checking whether the character is a whitespace\r\n    public static isUnicodeSpace(ch: string) {\r\n        const chCode = ch.charCodeAt(0);\r\n        return ((chCode >= 9 && chCode <= 13)\r\n            || chCode === 32\r\n            || chCode === 133\r\n            || chCode === 160\r\n            || chCode === 5760\r\n            || (chCode >= 8192 && chCode <= 8202)\r\n            || chCode === 8232\r\n            || chCode === 8233\r\n            || chCode === 8239\r\n            || chCode === 8287\r\n            || chCode === 12288);\r\n    }\r\n\r\n    public static getEnglishWordPartAtFirst(stringToken: string) {\r\n        const result = FIRST_ENGLISH_REG.exec(stringToken);\r\n        return result;\r\n    }\r\n\r\n    public static getEnglishWordPartAtLast(stringToken: string) {\r\n        const result = LAST_ENGLISH_REG.exec(stringToken);\r\n        return result;\r\n    }\r\n\r\n    public static fragmentText(stringToken: string, allWidth: number, maxWidth: number, measureText: (string: string) => number) {\r\n        // check the first character\r\n        const wrappedWords: string[] = [];\r\n        // fast return if strArr is empty\r\n        if (stringToken.length === 0 || maxWidth < 0) {\r\n            wrappedWords.push('');\r\n            return wrappedWords;\r\n        }\r\n\r\n        let text = stringToken;\r\n        while (allWidth > maxWidth && text.length > 1) {\r\n            let fuzzyLen = text.length * (maxWidth / allWidth) | 0;\r\n            let tmpText = _safeSubstring(text, fuzzyLen);\r\n            let width = allWidth - measureText(tmpText);\r\n            let sLine = tmpText;\r\n            let pushNum = 0;\r\n\r\n            let checkWhile = 0;\r\n            const checkCount = 100;\r\n\r\n            // Exceeded the size\r\n            while (width > maxWidth && checkWhile++ < checkCount) {\r\n                fuzzyLen *= maxWidth / width;\r\n                fuzzyLen |= 0;\r\n                tmpText = _safeSubstring(text, fuzzyLen);\r\n                width = allWidth - measureText(tmpText);\r\n            }\r\n\r\n            checkWhile = 0;\r\n\r\n            // Find the truncation point\r\n            // if the 'tempText' which is truncated from the next line content equals to '',\r\n            // we should break this loop because there is no available character in the next line.\r\n            while (tmpText && width <= maxWidth && checkWhile++ < checkCount) {\r\n                const exec = WORD_REG.exec(tmpText);\r\n                pushNum = exec ? exec[0].length : 1;\r\n                sLine = tmpText;\r\n\r\n                fuzzyLen += pushNum;\r\n                tmpText = _safeSubstring(text, fuzzyLen);\r\n                width = allWidth - measureText(tmpText);\r\n            }\r\n\r\n            fuzzyLen -= pushNum;\r\n            // in case maxWidth cannot contain any characters, need at least one character per line\r\n            if (fuzzyLen === 0) {\r\n                fuzzyLen = 1;\r\n                sLine = _safeSubstring(text, 1);\r\n            } else if (fuzzyLen === 1 && text[0] >= '\\uD800' && text[0] <= '\\uDBFF') {\r\n                // highSurrogateRex\r\n                fuzzyLen = 2;\r\n                sLine = _safeSubstring(text, 2);\r\n            }\r\n\r\n            let sText = _safeSubstring(text, 0, fuzzyLen);\r\n            let result;\r\n\r\n            // Symbols cannot be the first character in a new line.\r\n            // In condition that a symbol appears at the beginning of the new line, we will move the last word of this line to the new line.\r\n            // If there is only one word in this line, we will keep the first character of this word and move the rest of characters to the new line.\r\n            if (WRAP_INSPECTION) {\r\n                if (SYMBOL_REG.test(sLine || tmpText)) {\r\n                    result = LAST_WORD_REG.exec(sText);\r\n                    fuzzyLen -= result ? result[0].length : 0;\r\n                    if (fuzzyLen === 0) { fuzzyLen = 1; }\r\n\r\n                    sLine = _safeSubstring(text, fuzzyLen);\r\n                    sText = _safeSubstring(text, 0, fuzzyLen);\r\n                }\r\n            }\r\n\r\n            // To judge whether a English words are truncated\r\n            // If it starts with an English word in the next line and it ends with an English word in this line,\r\n            // we consider that a complete word is truncated into two lines. The last word without symbols of this line will be moved to the next line.\r\n            if (FIRST_ENGLISH_REG.test(sLine)) {\r\n                result = LAST_ENGLISH_REG.exec(sText);\r\n                if (result && (sText !== result[0])) {\r\n                    fuzzyLen -= result[0].length;\r\n                    sLine = _safeSubstring(text, fuzzyLen);\r\n                    sText = _safeSubstring(text, 0, fuzzyLen);\r\n                }\r\n            }\r\n\r\n            // The first line And do not wrap should not remove the space\r\n            if (wrappedWords.length === 0) {\r\n                wrappedWords.push(sText);\r\n            } else {\r\n                sText = sText.trim();\r\n                if (sText.length > 0) {\r\n                    wrappedWords.push(sText);\r\n                }\r\n            }\r\n            text = sLine || tmpText;\r\n            allWidth = measureText(text);\r\n        }\r\n\r\n        if (wrappedWords.length === 0) {\r\n            wrappedWords.push(text);\r\n        } else {\r\n            text = text.trim();\r\n            if (text.length > 0) {\r\n                wrappedWords.push(text);\r\n            }\r\n        }\r\n        return wrappedWords;\r\n    }\r\n}\r\n","import Engine from '@underrealm/murg';\nimport {\n\t_decorator,\n\tButton,\n\tCCInteger,\n\tColor,\n\tComponent,\n\tLabel,\n\tNode,\n} from 'cc';\n\nimport { setCursor } from './util/helper';\nimport { playEffectSound } from './util/resources';\nimport { system } from './util/system';\nimport { sendEndTurn } from './network';\nimport { animateFade, animateSwapLabel } from './tween';\n\nconst { DuelPhases } = Engine;\n\nconst { ccclass, property } = _decorator;\nconst NodeEvents = Node.EventType;\nconst ButtonEvents = Button.EventType;\n\n@ccclass('TurnController')\nexport class TurnController extends Component {\n\tunSubscribers: (() => void)[] = [];\n\tplayerTurnGlow: Node;\n\tenemyTurnGlow: Node;\n\tturnLabel: Node;\n\torb: Node;\n\tcountdown: () => void;\n\t@property(Label) labelCountdown: Label = null!;\n\t@property(CCInteger) turnMaxTime: number = 0;\n\n\tstart(): void {\n\t\tthis.playerTurnGlow = this.node.getChildByPath('Orb/Player Glow');\n\t\tthis.enemyTurnGlow = this.node.getChildByPath('Orb/Enemy Glow');\n\t\tthis.turnLabel = this.node.getChildByPath('Orb/Button/Label');\n\t\tthis.orb = this.node.getChildByPath('Orb');\n\n\t\tthis.orb.on(NodeEvents.MOUSE_ENTER, this.onMouseEnter.bind(this));\n\t\tthis.orb.on(NodeEvents.MOUSE_LEAVE, this.onMouseLeave.bind(this));\n\t\tthis.orb.on(ButtonEvents.CLICK, this.onButtonClick.bind(this));\n\n\t\tthis.unSubscribers.push(\n\t\t\tsystem.duel.subscribe('phase', (phase) =>\n\t\t\t\tthis.onPhaseChange(phase, system.duel.phaseOf),\n\t\t\t),\n\t\t);\n\n\t\tthis.unSubscribers.push(\n\t\t\tsystem.duel.subscribe('phaseOf', (phaseOf) =>\n\t\t\t\tthis.onPhaseChange(system.duel.phase, phaseOf),\n\t\t\t),\n\t\t);\n\t}\n\n\tonDestroy(): void {\n\t\tthis.unSubscribers.forEach((unSub) => unSub());\n\t}\n\n\tonPhaseChange(phase: string, phaseOf: string): void {\n\t\tconst isSetupPhase = phase === DuelPhases.Setup;\n\t\tconst isMyPhase = phaseOf === system.playerIds.me;\n\t\tconst button = this.orb.getComponent(Button);\n\t\tconst color = Color.fromHEX(new Color(), isMyPhase ? '#4da7ea' : '#ee5846');\n\t\tconst white = Color.fromHEX(new Color(), '#ffffff');\n\n\t\tif (isSetupPhase) {\n\t\t\tbutton.interactable = true;\n\t\t\tanimateFade(this.playerTurnGlow, isMyPhase ? 255 : 0);\n\t\t\tanimateFade(this.enemyTurnGlow, isMyPhase ? 0 : 255);\n\t\t} else {\n\t\t\tbutton.interactable = false;\n\t\t\tanimateFade(this.playerTurnGlow, 0);\n\t\t\tanimateFade(this.enemyTurnGlow, 0);\n\t\t}\n\n\t\tif (phase === DuelPhases.Draw) {\n\t\t\tconst label = system.duel.turn === 0 ? 'distribute' : 'draw';\n\n\t\t\tanimateSwapLabel(this.turnLabel, label, color);\n\t\t} else if (phase === DuelPhases.Setup) {\n\t\t\tconst label = isMyPhase ? 'end turn' : 'enemy turn';\n\n\t\t\tanimateSwapLabel(this.turnLabel, label, color).then(() => {\n\t\t\t\tif (isMyPhase) {\n\t\t\t\t\tthis.startCountdown();\n\t\t\t\t} else {\n\t\t\t\t\tthis.stopCountdown();\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (phase === DuelPhases.PreFight) {\n\t\t\tanimateSwapLabel(this.turnLabel, 'pre fight', white);\n\t\t} else if (phase === DuelPhases.Fight) {\n\t\t\tanimateSwapLabel(this.turnLabel, 'fight', white);\n\t\t} else if (phase === DuelPhases.PostFight) {\n\t\t\tanimateSwapLabel(this.turnLabel, 'post fight', white);\n\t\t}\n\t}\n\n\tonMouseEnter(): void {\n\t\tconst isSetupPhase = system.duel.phase === DuelPhases.Setup;\n\t\tconst isMyPhase = system.duel.phaseOf === system.playerIds.me;\n\n\t\tif (isSetupPhase && isMyPhase) {\n\t\t\tsetCursor('pointer');\n\t\t}\n\t}\n\n\tonMouseLeave(): void {\n\t\tsetCursor('auto');\n\t}\n\n\tonButtonClick(): void {\n\t\tconst isSetupPhase = system.duel.phase === DuelPhases.Setup;\n\t\tconst isMyPhase = system.duel.phaseOf === system.playerIds.me;\n\n\t\tif (!system.winner && isSetupPhase && isMyPhase) {\n\t\t\tthis.endTurn();\n\t\t}\n\t}\n\n\tendTurn() {\n\t\tplayEffectSound('end-turn');\n\t\tsendEndTurn();\n\t\tthis.stopCountdown();\n\t}\n\n\t// TODO: Migrate this turn countdown to game logic\n\tstartCountdown() {\n\t\tlet timer = this.turnMaxTime;\n\t\tconst calculateCountdown = () => {\n\t\t\tconst minute = Math.floor(timer / 60);\n\t\t\tconst second = timer % 60;\n\t\t\tthis.labelCountdown.string = `${minute.toString().padStart(2, '0')}:${second.toString().padStart(2, '0')}`;\n\t\t\ttimer--;\n\t\t};\n\t\tcalculateCountdown();\n\n\t\tthis.countdown = function () {\n\t\t\tif (timer === 0) {\n\t\t\t\tthis.endTurn();\n\t\t\t}\n\t\t\tcalculateCountdown();\n\t\t};\n\n\t\tthis.schedule(this.countdown, 1);\n\t\tthis.labelCountdown.node.active = true;\n\t}\n\n\tstopCountdown() {\n\t\tthis.unschedule(this.countdown);\n\t\tthis.labelCountdown.node.active = false;\n\t}\n}\n","import type { DuelCommandBundle, DuelConfig } from '@underrealm/murg';\n\nexport enum GameEventType {\n\tConnectMatch = 'ConnectMatch',\n\tSendBundle = 'SendBundle',\n\tCardHover = 'CardHover',\n\tGameOver = 'GameOver',\n}\n\nexport interface JwtPayload {\n\tuserId: string;\n\tmatchId: string;\n}\n\nexport interface CommandPayload {\n\taction: 'game';\n\tjwt: string;\n\ttype: GameEventType;\n\tcontext?: JwtPayload;\n\tsend?: (payload: Record<string, never>) => Promise<void>;\n\tpayload?: unknown;\n}\n\nexport interface CommandResponse {\n\tuserId: string;\n\ttype: GameEventType;\n\tpayload: never;\n}\n\nexport interface PlayerIds {\n\tme: string;\n\tenemy: string;\n}\n\nexport interface GameDuel {\n\tid: string;\n\tconfig: DuelConfig;\n\thistory: DuelCommandBundle[];\n}\n","import type { CardState } from '@underrealm/murg';\nimport Engine from '@underrealm/murg';\nimport type { SpriteFrame } from 'cc';\nimport { _decorator, Component, Node, resources, Sprite, UIOpacity } from 'cc';\n\nimport { updateUnit } from './util/attribute';\nimport { getFoilUri, getVisualUri, setCursor } from './util/helper';\nimport { playEffectSound } from './util/resources';\nimport { system } from './util/system';\nimport { CardManager } from './CardManager';\nimport { raiseUnitPreview } from './tween';\n\nconst { ccclass } = _decorator;\nconst NodeEvents = Node.EventType;\nconst { ActivationType, getCard, getCardState } = Engine;\n\n@ccclass('UnitManager')\nexport class UnitManager extends Component {\n\tunsubscribe: () => void;\n\tcardId: string;\n\tuiOpacity: UIOpacity;\n\tcardFoil: Sprite;\n\tcardVisual: Sprite;\n\tcardAttack: Node;\n\tcardDefense: Node;\n\tcardHealth: Node;\n\n\tstart(): void {\n\t\tthis.uiOpacity = this.node.getComponent(UIOpacity);\n\t\tthis.cardFoil = this.node.getChildByPath('front/foil').getComponent(Sprite);\n\t\tthis.cardVisual = this.node\n\t\t\t.getChildByPath('front/visual')\n\t\t\t.getComponent(Sprite);\n\t\tthis.cardAttack = this.node.getChildByPath('front/attack');\n\t\tthis.cardDefense = this.node.getChildByPath('front/defense');\n\t\tthis.cardHealth = this.node.getChildByPath('front/health');\n\n\t\tif (this.cardId) {\n\t\t\tthis.renderCard(getCardState(system.duel.stateMap, this.cardId));\n\t\t}\n\n\t\tthis.node.on(NodeEvents.MOUSE_ENTER, this.onMouseEnter.bind(this));\n\t\tthis.node.on(NodeEvents.MOUSE_LEAVE, this.onMouseLeave.bind(this));\n\t}\n\n\tsetCardId(id: string): void {\n\t\tif (id === this.cardId) return;\n\t\tthis.cardId = id;\n\t}\n\n\trenderCard(state: CardState): void {\n\t\tif (!this.cardFoil) return;\n\n\t\tconst card = getCard(system.duel.cardMap, state.id);\n\t\tconst visualUri = getVisualUri(card.id);\n\t\tconst foilUri = getFoilUri(card.id, '-ground');\n\n\t\tresources.load<SpriteFrame>(visualUri, (err, frame) => {\n\t\t\tif (err) return;\n\t\t\tthis.cardVisual.spriteFrame = frame;\n\t\t});\n\n\t\tresources.load<SpriteFrame>(foilUri, (err, frame) => {\n\t\t\tif (err) return;\n\t\t\tthis.cardFoil.spriteFrame = frame;\n\t\t});\n\n\t\tif (card.skill?.activation === ActivationType.Charge) {\n\t\t\tthis.node.getChildByPath('front/charge').active = true;\n\t\t}\n\n\t\tupdateUnit(state.id);\n\t}\n\n\tonMouseEnter(): void {\n\t\tsetCursor('pointer');\n\n\t\tif (system.winner || system.dragging || !this.cardId) return;\n\t\tif (this.node.getChildByPath('back')?.active) return;\n\n\t\tconst cardNode = system.globalNodes.cardPreview.getChildByPath('Card');\n\t\tconst glowNode = system.globalNodes.cardPreview.getChildByPath('Card/glow');\n\n\t\tglowNode.active = false;\n\t\tplayEffectSound('card-raise', 0.2);\n\t\traiseUnitPreview(system.globalNodes.cardPreview, this.node);\n\t\tcardNode.getComponent(CardManager).setCardId(this.cardId.substring(0, 9));\n\t}\n\n\tonMouseLeave(): void {\n\t\tsetCursor('auto');\n\t\tsystem.globalNodes.cardPreview.setPosition(190, 740);\n\t}\n}\n","import type { DuelCommandBundle } from '@underrealm/murg';\n\nimport { system } from '../util/system';\n\nconst searchParams = new URLSearchParams(location.search);\nconst wsParam = searchParams.get('ws');\nconst wsUri =\n\twsParam || localStorage?.getItem('GAME_WS_URI') || 'ws://localhost:3005/ws';\n\nconsole.log('Game Websocket URI', wsUri);\n\nexport const ws = new WebSocket(wsUri);\n\nexport interface MergeHistoryResult {\n\tconflict: boolean;\n}\n\nexport const mergeRemoteHistory = (\n\tbundles: DuelCommandBundle[],\n\tlevel: number,\n): MergeHistoryResult => {\n\tif (system.history.length < level) {\n\t\treturn { conflict: true };\n\t}\n\n\tsystem.history = system.history.slice(0, level).concat(bundles);\n\n\treturn { conflict: false };\n};\n"]}